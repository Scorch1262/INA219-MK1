

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 21 10:04:55 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1,inline
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1,inline
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1,inline
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1,inline
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1,inline
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1,inline
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1,inline
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1,inline
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1,inline
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1,inline
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   134                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   135                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   136                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   137  0000                     
   138                           ; Version 2.20
   139                           ; Generated 05/05/2020 GMT
   140                           ; 
   141                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   142                           ; All rights reserved.
   143                           ; 
   144                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   145                           ; 
   146                           ; Redistribution and use in source and binary forms, with or without modification, are
   147                           ; permitted provided that the following conditions are met:
   148                           ; 
   149                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   150                           ;        conditions and the following disclaimer.
   151                           ; 
   152                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   153                           ;        of conditions and the following disclaimer in the documentation and/or other
   154                           ;        materials provided with the distribution.
   155                           ; 
   156                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   157                           ;        software without specific prior written permission.
   158                           ; 
   159                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   160                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   161                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   162                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   163                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   164                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   165                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   166                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   167                           ; 
   168                           ; 
   169                           ; Code-generator required, PIC18F46K20 Definitions
   170                           ; 
   171                           ; SFR Addresses
   172  0000                     
   173                           	psect	idataBANK0
   174  004D06                     __pidataBANK0:
   175                           	callstack 0
   176                           
   177                           ;initializer for _ina219_i2cAddress
   178  004D06  0040               	dw	64
   179                           
   180                           ;initializer for _ina219_i2cAddress@ina219$F1584
   181                           
   182                           	psect	idataBANK1
   183  004D08                     __pidataBANK1:
   184                           	callstack 0
   185  004D08  0040               	dw	64
   186                           
   187                           	psect	smallconst
   188  001000                     __psmallconst:
   189                           	callstack 0
   190  001000  00                 	db	0
   191  001001                     _fsmStateTable:
   192                           	callstack 0
   193  001001  24                 	db	low _I2C_DO_IDLE
   194  001002  4C                 	db	high _I2C_DO_IDLE
   195  001003  FC                 	db	low _I2C_DO_SEND_ADR_READ
   196  001004  4B                 	db	high _I2C_DO_SEND_ADR_READ
   197  001005  EC                 	db	low _I2C_DO_SEND_ADR_WRITE
   198  001006  4B                 	db	high _I2C_DO_SEND_ADR_WRITE
   199  001007  98                 	db	low _I2C_DO_TX
   200  001008  3A                 	db	high _I2C_DO_TX
   201  001009  1A                 	db	low _I2C_DO_RX
   202  00100A  3E                 	db	high _I2C_DO_RX
   203  00100B  18                 	db	low _I2C_DO_RCEN
   204  00100C  4C                 	db	high _I2C_DO_RCEN
   205  00100D  EE                 	db	low _I2C_DO_TX_EMPTY
   206  00100E  40                 	db	high _I2C_DO_TX_EMPTY
   207  00100F  AE                 	db	low _I2C_DO_SEND_RESTART_READ
   208  001010  4C                 	db	high _I2C_DO_SEND_RESTART_READ
   209  001011  A6                 	db	low _I2C_DO_SEND_RESTART_WRITE
   210  001012  4C                 	db	high _I2C_DO_SEND_RESTART_WRITE
   211  001013  9E                 	db	low _I2C_DO_SEND_RESTART
   212  001014  4C                 	db	high _I2C_DO_SEND_RESTART
   213  001015  96                 	db	low _I2C_DO_SEND_STOP
   214  001016  4C                 	db	high _I2C_DO_SEND_STOP
   215  001017  8E                 	db	low _I2C_DO_RX_ACK
   216  001018  4C                 	db	high _I2C_DO_RX_ACK
   217  001019  86                 	db	low _I2C_DO_RX_NACK_STOP
   218  00101A  4C                 	db	high _I2C_DO_RX_NACK_STOP
   219  00101B  7E                 	db	low _I2C_DO_RX_NACK_RESTART
   220  00101C  4C                 	db	high _I2C_DO_RX_NACK_RESTART
   221  00101D  0C                 	db	low _I2C_DO_RESET
   222  00101E  4C                 	db	high _I2C_DO_RESET
   223  00101F  3E                 	db	low _I2C_DO_ADDRESS_NACK
   224  001020  43                 	db	high _I2C_DO_ADDRESS_NACK
   225  001021                     __end_of_fsmStateTable:
   226                           	callstack 0
   227  001021                     STR_4:
   228  001021  53                 	db	83	;'S'
   229  001022  74                 	db	116	;'t'
   230  001023  72                 	db	114	;'r'
   231  001024  6F                 	db	111	;'o'
   232  001025  6D                 	db	109	;'m'
   233  001026  3A                 	db	58	;':'
   234  001027  20                 	db	32
   235  001028  20                 	db	32
   236  001029  20                 	db	32
   237  00102A  20                 	db	32
   238  00102B  20                 	db	32
   239  00102C  20                 	db	32
   240  00102D  20                 	db	32
   241  00102E  20                 	db	32
   242  00102F  20                 	db	32
   243  001030  20                 	db	32
   244  001031  25                 	db	37
   245  001032  2E                 	db	46
   246  001033  32                 	db	50	;'2'
   247  001034  66                 	db	102	;'f'
   248  001035  6D                 	db	109	;'m'
   249  001036  41                 	db	65	;'A'
   250  001037  20                 	db	32
   251  001038  0D                 	db	13
   252  001039  0A                 	db	10
   253  00103A  00                 	db	0
   254  00103B                     STR_1:
   255  00103B  53                 	db	83	;'S'
   256  00103C  68                 	db	104	;'h'
   257  00103D  75                 	db	117	;'u'
   258  00103E  6E                 	db	110	;'n'
   259  00103F  74                 	db	116	;'t'
   260  001040  2D                 	db	45
   261  001041  53                 	db	83	;'S'
   262  001042  70                 	db	112	;'p'
   263  001043  61                 	db	97	;'a'
   264  001044  6E                 	db	110	;'n'
   265  001045  6E                 	db	110	;'n'
   266  001046  75                 	db	117	;'u'
   267  001047  6E                 	db	110	;'n'
   268  001048  67                 	db	103	;'g'
   269  001049  3A                 	db	58	;':'
   270  00104A  20                 	db	32
   271  00104B  25                 	db	37
   272  00104C  2E                 	db	46
   273  00104D  32                 	db	50	;'2'
   274  00104E  66                 	db	102	;'f'
   275  00104F  6D                 	db	109	;'m'
   276  001050  56                 	db	86	;'V'
   277  001051  20                 	db	32
   278  001052  0D                 	db	13
   279  001053  0A                 	db	10
   280  001054  00                 	db	0
   281  001055                     STR_3:
   282  001055  4C                 	db	76	;'L'
   283  001056  65                 	db	101	;'e'
   284  001057  69                 	db	105	;'i'
   285  001058  73                 	db	115	;'s'
   286  001059  74                 	db	116	;'t'
   287  00105A  75                 	db	117	;'u'
   288  00105B  6E                 	db	110	;'n'
   289  00105C  67                 	db	103	;'g'
   290  00105D  3A                 	db	58	;':'
   291  00105E  20                 	db	32
   292  00105F  20                 	db	32
   293  001060  20                 	db	32
   294  001061  20                 	db	32
   295  001062  20                 	db	32
   296  001063  20                 	db	32
   297  001064  20                 	db	32
   298  001065  25                 	db	37
   299  001066  2E                 	db	46
   300  001067  32                 	db	50	;'2'
   301  001068  66                 	db	102	;'f'
   302  001069  6D                 	db	109	;'m'
   303  00106A  57                 	db	87	;'W'
   304  00106B  20                 	db	32
   305  00106C  0D                 	db	13
   306  00106D  0A                 	db	10
   307  00106E  00                 	db	0
   308  00106F                     STR_2:
   309  00106F  42                 	db	66	;'B'
   310  001070  55                 	db	85	;'U'
   311  001071  53                 	db	83	;'S'
   312  001072  2D                 	db	45
   313  001073  53                 	db	83	;'S'
   314  001074  70                 	db	112	;'p'
   315  001075  61                 	db	97	;'a'
   316  001076  6E                 	db	110	;'n'
   317  001077  6E                 	db	110	;'n'
   318  001078  75                 	db	117	;'u'
   319  001079  6E                 	db	110	;'n'
   320  00107A  67                 	db	103	;'g'
   321  00107B  3A                 	db	58	;':'
   322  00107C  20                 	db	32
   323  00107D  20                 	db	32
   324  00107E  20                 	db	32
   325  00107F  25                 	db	37
   326  001080  2E                 	db	46
   327  001081  32                 	db	50	;'2'
   328  001082  66                 	db	102	;'f'
   329  001083  56                 	db	86	;'V'
   330  001084  20                 	db	32
   331  001085  0D                 	db	13
   332  001086  0A                 	db	10
   333  001087  00                 	db	0
   334  001088                     STR_5:
   335  001088  49                 	db	73	;'I'
   336  001089  4E                 	db	78	;'N'
   337  00108A  46                 	db	70	;'F'
   338  00108B  00                 	db	0
   339  00108C                     STR_9:
   340  00108C  4E                 	db	78	;'N'
   341  00108D  41                 	db	65	;'A'
   342  00108E  4E                 	db	78	;'N'
   343  00108F  00                 	db	0
   344  001090                     STR_6:
   345  001090  69                 	db	105	;'i'
   346  001091  6E                 	db	110	;'n'
   347  001092  66                 	db	102	;'f'
   348  001093  00                 	db	0
   349  001094                     STR_10:
   350  001094  6E                 	db	110	;'n'
   351  001095  61                 	db	97	;'a'
   352  001096  6E                 	db	110	;'n'
   353  001097  00                 	db	0
   354  001098                     STR_13:
   355  001098  6C                 	db	108	;'l'
   356  001099  66                 	db	102	;'f'
   357  00109A  00                 	db	0
   358  00109B  00                 	db	0	; dummy byte at the end
   359  0000                     
   360                           	psect	nvBANK0
   361  0000FE                     __pnvBANK0:
   362                           	callstack 0
   363  0000FE                     _eusartTxBufferRemaining:
   364                           	callstack 0
   365  0000FE                     	ds	1
   366                           
   367                           	psect	nvBANK1
   368  0001AD                     __pnvBANK1:
   369                           	callstack 0
   370  0001AD                     _EUSART_ErrorHandler:
   371                           	callstack 0
   372  0001AD                     	ds	2
   373  0001AF                     _EUSART_OverrunErrorHandler:
   374                           	callstack 0
   375  0001AF                     	ds	2
   376  0001B1                     _EUSART_FramingErrorHandler:
   377                           	callstack 0
   378  0001B1                     	ds	2
   379  0001B3                     _EUSART_RxDefaultInterruptHandler:
   380                           	callstack 0
   381  0001B3                     	ds	2
   382  0001B5                     _EUSART_TxDefaultInterruptHandler:
   383                           	callstack 0
   384  0001B5                     	ds	2
   385  0000                     _RCONbits	set	4048
   386  0000                     _RCREG	set	4014
   387  0000                     _RCSTAbits	set	4011
   388  0000                     _TXREG	set	4013
   389  0000                     _TXSTAbits	set	4012
   390  0000                     _SPBRGH	set	4016
   391  0000                     _SPBRG	set	4015
   392  0000                     _TXSTA	set	4012
   393  0000                     _RCSTA	set	4011
   394  0000                     _BAUDCON	set	4024
   395  0000                     _INTCONbits	set	4082
   396  0000                     _INTCON2bits	set	4081
   397  0000                     _WPUB	set	3964
   398  0000                     _ANSELH	set	3967
   399  0000                     _ANSEL	set	3966
   400  0000                     _TRISD	set	3989
   401  0000                     _TRISC	set	3988
   402  0000                     _TRISB	set	3987
   403  0000                     _TRISA	set	3986
   404  0000                     _TRISE	set	3990
   405  0000                     _LATC	set	3979
   406  0000                     _LATB	set	3978
   407  0000                     _LATA	set	3977
   408  0000                     _LATD	set	3980
   409  0000                     _LATE	set	3981
   410  0000                     _OSCTUNE	set	3995
   411  0000                     _OSCCON	set	4051
   412  0000                     _PIR1bits	set	3998
   413  0000                     _PIE1bits	set	3997
   414  0000                     _SSPSTATbits	set	4039
   415  0000                     _PIR2bits	set	4001
   416  0000                     _SSPCON2bits	set	4037
   417  0000                     _SSPBUF	set	4041
   418  0000                     _SSPCON1bits	set	4038
   419  0000                     _SSPADD	set	4040
   420  0000                     _SSPCON2	set	4037
   421  0000                     _SSPCON1	set	4038
   422  0000                     _SSPSTAT	set	4039
   423                           
   424                           ; #config settings
   425                           
   426                           	psect	cinit
   427  0044C6                     __pcinit:
   428                           	callstack 0
   429  0044C6                     start_initialization:
   430                           	callstack 0
   431  0044C6                     __initialization:
   432                           	callstack 0
   433                           
   434                           ; Initialize objects allocated to BANK1 (2 bytes)
   435                           ; load TBLPTR registers with __pidataBANK1
   436  0044C6  0E08               	movlw	low __pidataBANK1
   437  0044C8  6EF6               	movwf	tblptrl,c
   438  0044CA  0E4D               	movlw	high __pidataBANK1
   439  0044CC  6EF7               	movwf	tblptrh,c
   440  0044CE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   441  0044D0  6EF8               	movwf	tblptru,c
   442  0044D2  0009               	tblrd		*+	;fetch initializer
   443  0044D4  CFF5 F1BD          	movff	tablat,__pdataBANK1
   444  0044D8  0009               	tblrd		*+	;fetch initializer
   445  0044DA  CFF5 F1BE          	movff	tablat,__pdataBANK1+1
   446                           
   447                           ; Initialize objects allocated to BANK0 (2 bytes)
   448                           ; load TBLPTR registers with __pidataBANK0
   449  0044DE  0E06               	movlw	low __pidataBANK0
   450  0044E0  6EF6               	movwf	tblptrl,c
   451  0044E2  0E4D               	movlw	high __pidataBANK0
   452  0044E4  6EF7               	movwf	tblptrh,c
   453  0044E6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   454  0044E8  6EF8               	movwf	tblptru,c
   455  0044EA  0009               	tblrd		*+	;fetch initializer
   456  0044EC  CFF5 F0FC          	movff	tablat,__pdataBANK0
   457  0044F0  0009               	tblrd		*+	;fetch initializer
   458  0044F2  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   459                           
   460                           ; Clear objects allocated to BANK1 (173 bytes)
   461  0044F6  EE01  F000         	lfsr	0,__pbssBANK1
   462  0044FA  0EAD               	movlw	173
   463  0044FC                     clear_0:
   464  0044FC  6AEE               	clrf	postinc0,c
   465  0044FE  06E8               	decf	wreg,f,c
   466  004500  E1FD               	bnz	clear_0
   467                           
   468                           ; Clear objects allocated to BANK0 (25 bytes)
   469  004502  EE00  F0E3         	lfsr	0,__pbssBANK0
   470  004506  0E19               	movlw	25
   471  004508                     clear_1:
   472  004508  6AEE               	clrf	postinc0,c
   473  00450A  06E8               	decf	wreg,f,c
   474  00450C  E1FD               	bnz	clear_1
   475                           
   476                           ; Clear objects allocated to COMRAM (5 bytes)
   477  00450E  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   478  004510  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   479  004512  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   480  004514  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   481  004516  6A56               	clrf	__pbssCOMRAM& (0+255),c
   482  004518                     end_of_initialization:
   483                           	callstack 0
   484  004518                     __end_of__initialization:
   485                           	callstack 0
   486  004518  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   487  00451A  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   488  00451C  0100               	movlb	0
   489  00451E  EFEE  F019         	goto	_main	;jump to C main() function
   490                           
   491                           	psect	bssCOMRAM
   492  000056                     __pbssCOMRAM:
   493                           	callstack 0
   494  000056                     _eusartRxCount:
   495                           	callstack 0
   496  000056                     	ds	1
   497  000057                     _eusartRxTail:
   498                           	callstack 0
   499  000057                     	ds	1
   500  000058                     _eusartRxHead:
   501                           	callstack 0
   502  000058                     	ds	1
   503  000059                     _eusartTxTail:
   504                           	callstack 0
   505  000059                     	ds	1
   506  00005A                     _eusartTxHead:
   507                           	callstack 0
   508  00005A                     	ds	1
   509                           
   510                           	psect	bssBANK0
   511  0000E3                     __pbssBANK0:
   512                           	callstack 0
   513  0000E3                     _current_mA:
   514                           	callstack 0
   515  0000E3                     	ds	4
   516  0000E7                     _nout:
   517                           	callstack 0
   518  0000E7                     	ds	2
   519  0000E9                     _width:
   520                           	callstack 0
   521  0000E9                     	ds	2
   522  0000EB                     _prec:
   523                           	callstack 0
   524  0000EB                     	ds	2
   525  0000ED                     _flags:
   526                           	callstack 0
   527  0000ED                     	ds	2
   528  0000EF                     _ina219_powerMultiplier_mW@ina219$F1587:
   529                           	callstack 0
   530  0000EF                     	ds	2
   531  0000F1                     _ina219_currentDivider_mA@ina219$F1586:
   532                           	callstack 0
   533  0000F1                     	ds	2
   534  0000F3                     _ina219_calibrationValue@ina219$F1585:
   535                           	callstack 0
   536  0000F3                     	ds	2
   537  0000F5                     	ds	2
   538  0000F7                     	ds	2
   539  0000F9                     	ds	2
   540  0000FB                     _eusartRxLastError:
   541                           	callstack 0
   542  0000FB                     	ds	1
   543                           
   544                           	psect	dataBANK0
   545  0000FC                     __pdataBANK0:
   546                           	callstack 0
   547  0000FC                     	ds	2
   548                           
   549                           	psect	bssBANK1
   550  000100                     __pbssBANK1:
   551                           	callstack 0
   552  000100                     _I2C_Status:
   553                           	callstack 0
   554  000100                     	ds	36
   555  000124                     _readBuffer:
   556                           	callstack 0
   557  000124                     	ds	10
   558  00012E                     _eusartRxStatusBuffer:
   559                           	callstack 0
   560  00012E                     	ds	8
   561  000136                     _eusartRxBuffer:
   562                           	callstack 0
   563  000136                     	ds	8
   564  00013E                     _eusartTxBuffer:
   565                           	callstack 0
   566  00013E                     	ds	8
   567  000146                     floorf@F527:
   568                           	callstack 0
   569  000146                     	ds	4
   570  00014A                     ___fpclassifyf@F465:
   571                           	callstack 0
   572  00014A                     	ds	4
   573  00014E                     _power_mW:
   574                           	callstack 0
   575  00014E                     	ds	4
   576  000152                     _bus_voltage:
   577                           	callstack 0
   578  000152                     	ds	4
   579  000156                     _shunt_mV:
   580                           	callstack 0
   581  000156                     	ds	4
   582  00015A                     _writeBuffer:
   583                           	callstack 0
   584  00015A                     	ds	3
   585  00015D                     _dbuf:
   586                           	callstack 0
   587  00015D                     	ds	80
   588                           
   589                           	psect	dataBANK1
   590  0001BD                     __pdataBANK1:
   591                           	callstack 0
   592  0001BD                     	ds	2
   593                           
   594                           	psect	cstackBANK1
   595  0001B7                     __pcstackBANK1:
   596                           	callstack 0
   597  0001B7                     ?_printf:
   598                           	callstack 0
   599  0001B7                     printf@fmt:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x0
   603  0001B7                     	ds	6
   604                           
   605                           	psect	cstackBANK0
   606  000060                     __pcstackBANK0:
   607                           	callstack 0
   608  000060                     ??___flmul:
   609  000060                     floorf@m:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0x0
   613  000060                     	ds	4
   614  000064                     ___flmul@sign:
   615                           	callstack 0
   616  000064                     floorf@e:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x4
   620  000064                     	ds	1
   621  000065                     ___flmul@aexp:
   622                           	callstack 0
   623                           
   624                           ; 1 bytes @ 0x5
   625  000065                     	ds	1
   626  000066                     ___flmul@grs:
   627                           	callstack 0
   628  000066                     floorf@u:
   629                           	callstack 0
   630                           
   631                           ; 4 bytes @ 0x6
   632  000066                     	ds	4
   633  00006A                     ___flmul@bexp:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0xA
   637  00006A                     	ds	1
   638  00006B                     ___flmul@prod:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0xB
   642  00006B                     	ds	4
   643  00006F                     ___flmul@temp:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0xF
   647  00006F                     	ds	2
   648  000071                     ?_INA219_getShuntVoltage_mV:
   649                           	callstack 0
   650  000071                     ?_INA219_getBusVoltage_V:
   651                           	callstack 0
   652  000071                     ?_INA219_getPower_mW:
   653                           	callstack 0
   654  000071                     ?_INA219_getCurrent_mA:
   655                           	callstack 0
   656  000071                     ?___flsub:
   657                           	callstack 0
   658  000071                     ___flge@ff1:
   659                           	callstack 0
   660  000071                     ___flsub@b:
   661                           	callstack 0
   662                           
   663                           ; 4 bytes @ 0x11
   664  000071                     	ds	4
   665  000075                     INA219_getBusVoltage_V@value:
   666                           	callstack 0
   667  000075                     INA219_getCurrent_mA@valueDec:
   668                           	callstack 0
   669  000075                     INA219_getPower_mW@valueDec:
   670                           	callstack 0
   671  000075                     ___flge@ff2:
   672                           	callstack 0
   673  000075                     ___flsub@a:
   674                           	callstack 0
   675                           
   676                           ; 4 bytes @ 0x15
   677  000075                     	ds	4
   678  000079                     ??___flge:
   679                           
   680                           ; 1 bytes @ 0x19
   681  000079                     	ds	4
   682  00007D                     ?_efgtoa:
   683                           	callstack 0
   684  00007D                     efgtoa@fp:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x1D
   688  00007D                     	ds	2
   689  00007F                     efgtoa@f:
   690                           	callstack 0
   691                           
   692                           ; 4 bytes @ 0x1F
   693  00007F                     	ds	4
   694  000083                     efgtoa@c:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x23
   698  000083                     	ds	1
   699  000084                     ??_efgtoa:
   700                           
   701                           ; 1 bytes @ 0x24
   702  000084                     	ds	5
   703  000089                     _efgtoa$2182:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x29
   707  000089                     	ds	2
   708  00008B                     _efgtoa$2183:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x2B
   712  00008B                     	ds	2
   713  00008D                     _efgtoa$2188:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x2D
   717  00008D                     	ds	2
   718  00008F                     _efgtoa$2192:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x2F
   722  00008F                     	ds	2
   723  000091                     _efgtoa$2193:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x31
   727  000091                     	ds	2
   728  000093                     _efgtoa$2194:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x33
   732  000093                     	ds	2
   733  000095                     efgtoa@t:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x35
   737  000095                     	ds	2
   738  000097                     efgtoa@pp:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x37
   742  000097                     	ds	2
   743  000099                     efgtoa@ne:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x39
   747  000099                     	ds	2
   748  00009B                     efgtoa@m:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x3B
   752  00009B                     	ds	2
   753  00009D                     efgtoa@ou:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x3D
   757  00009D                     	ds	4
   758  0000A1                     efgtoa@d:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x41
   762  0000A1                     	ds	2
   763  0000A3                     efgtoa@sign:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0x43
   767  0000A3                     	ds	2
   768  0000A5                     efgtoa@p:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x45
   772  0000A5                     	ds	2
   773  0000A7                     efgtoa@w:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x47
   777  0000A7                     	ds	2
   778  0000A9                     efgtoa@nmode:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x49
   782  0000A9                     	ds	1
   783  0000AA                     efgtoa@mode:
   784                           	callstack 0
   785                           
   786                           ; 1 bytes @ 0x4A
   787  0000AA                     	ds	1
   788  0000AB                     efgtoa@h:
   789                           	callstack 0
   790                           
   791                           ; 4 bytes @ 0x4B
   792  0000AB                     	ds	4
   793  0000AF                     efgtoa@l:
   794                           	callstack 0
   795                           
   796                           ; 4 bytes @ 0x4F
   797  0000AF                     	ds	4
   798  0000B3                     efgtoa@i:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x53
   802  0000B3                     	ds	2
   803  0000B5                     efgtoa@g:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0x55
   807  0000B5                     	ds	4
   808  0000B9                     efgtoa@e:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x59
   812  0000B9                     	ds	2
   813  0000BB                     efgtoa@n:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x5B
   817  0000BB                     	ds	2
   818  0000BD                     efgtoa@u:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x5D
   822  0000BD                     	ds	4
   823  0000C1                     ?_vfpfcnvrt:
   824                           	callstack 0
   825  0000C1                     vfpfcnvrt@fp:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x61
   829  0000C1                     	ds	2
   830  0000C3                     vfpfcnvrt@fmt:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0x63
   834  0000C3                     	ds	2
   835  0000C5                     vfpfcnvrt@ap:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x65
   839  0000C5                     	ds	2
   840  0000C7                     ??_vfpfcnvrt:
   841                           
   842                           ; 1 bytes @ 0x67
   843  0000C7                     	ds	4
   844  0000CB                     _vfpfcnvrt$2208:
   845                           	callstack 0
   846                           
   847                           ; 2 bytes @ 0x6B
   848  0000CB                     	ds	2
   849  0000CD                     _vfpfcnvrt$2212:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x6D
   853  0000CD                     	ds	2
   854  0000CF                     vfpfcnvrt@f:
   855                           	callstack 0
   856                           
   857                           ; 4 bytes @ 0x6F
   858  0000CF                     	ds	4
   859  0000D3                     vfpfcnvrt@ct:
   860                           	callstack 0
   861                           
   862                           ; 3 bytes @ 0x73
   863  0000D3                     	ds	3
   864  0000D6                     vfpfcnvrt@c:
   865                           	callstack 0
   866                           
   867                           ; 1 bytes @ 0x76
   868  0000D6                     	ds	1
   869  0000D7                     ?_vfprintf:
   870                           	callstack 0
   871  0000D7                     vfprintf@fp:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x77
   875  0000D7                     	ds	2
   876  0000D9                     vfprintf@fmt:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0x79
   880  0000D9                     	ds	2
   881  0000DB                     vfprintf@ap:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x7B
   885  0000DB                     	ds	2
   886  0000DD                     vfprintf@cfmt:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x7D
   890  0000DD                     	ds	2
   891  0000DF                     printf@ap:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x7F
   895  0000DF                     	ds	2
   896  0000E1                     ??_main:
   897                           
   898                           ; 1 bytes @ 0x81
   899  0000E1                     	ds	2
   900                           
   901                           	psect	cstackCOMRAM
   902  000001                     __pcstackCOMRAM:
   903                           	callstack 0
   904  000001                     ??_INTERRUPT_InterruptManager:
   905  000001                     
   906                           ; 1 bytes @ 0x0
   907  000001                     	ds	4
   908  000005                     ?_strlen:
   909                           	callstack 0
   910  000005                     ?___fpclassifyf:
   911                           	callstack 0
   912  000005                     ?_isupper:
   913                           	callstack 0
   914  000005                     ?_isdigit:
   915                           	callstack 0
   916  000005                     ?_strncmp:
   917                           	callstack 0
   918  000005                     ?_isspace:
   919                           	callstack 0
   920  000005                     ?___wmul:
   921                           	callstack 0
   922  000005                     ?___awdiv:
   923                           	callstack 0
   924  000005                     ?___awmod:
   925                           	callstack 0
   926  000005                     ?___fladd:
   927                           	callstack 0
   928  000005                     ?___flneg:
   929                           	callstack 0
   930  000005                     ?___fltol:
   931                           	callstack 0
   932  000005                     I2C_Open@address:
   933                           	callstack 0
   934  000005                     I2C_Close@returnValue:
   935                           	callstack 0
   936  000005                     I2C_MasterSendTxData@data:
   937                           	callstack 0
   938  000005                     EUSART_Write@txData:
   939                           	callstack 0
   940  000005                     I2C_SetBuffer@buffer:
   941                           	callstack 0
   942  000005                     I2C_SetCallback@cb:
   943                           	callstack 0
   944  000005                     EUSART_SetFramingErrorHandler@interruptHandler:
   945                           	callstack 0
   946  000005                     EUSART_SetOverrunErrorHandler@interruptHandler:
   947                           	callstack 0
   948  000005                     EUSART_SetErrorHandler@interruptHandler:
   949                           	callstack 0
   950  000005                     EUSART_SetTxInterruptHandler@interruptHandler:
   951                           	callstack 0
   952  000005                     EUSART_SetRxInterruptHandler@interruptHandler:
   953                           	callstack 0
   954  000005                     ___wmul@multiplier:
   955                           	callstack 0
   956  000005                     ___awdiv@dividend:
   957                           	callstack 0
   958  000005                     ___awmod@dividend:
   959                           	callstack 0
   960  000005                     isdigit@c:
   961                           	callstack 0
   962  000005                     isspace@c:
   963                           	callstack 0
   964  000005                     isupper@c:
   965                           	callstack 0
   966  000005                     strcpy@dest:
   967                           	callstack 0
   968  000005                     strlen@s:
   969                           	callstack 0
   970  000005                     strncmp@_l:
   971                           	callstack 0
   972  000005                     ___fleq@ff1:
   973                           	callstack 0
   974  000005                     ___flneg@f1:
   975                           	callstack 0
   976  000005                     ___fltol@f1:
   977                           	callstack 0
   978  000005                     ___fladd@b:
   979                           	callstack 0
   980  000005                     ___fpclassifyf@x:
   981                           	callstack 0
   982                           
   983                           ; 4 bytes @ 0x4
   984  000005                     	ds	1
   985  000006                     I2C_Open@returnValue:
   986                           	callstack 0
   987  000006                     putch@txData:
   988                           	callstack 0
   989                           
   990                           ; 1 bytes @ 0x5
   991  000006                     	ds	1
   992  000007                     ??_isupper:
   993  000007                     ??_isdigit:
   994  000007                     ??_isspace:
   995  000007                     I2C_SetBuffer@bufferSize:
   996                           	callstack 0
   997  000007                     I2C_SetCallback@ptr:
   998                           	callstack 0
   999  000007                     ___wmul@multiplicand:
  1000                           	callstack 0
  1001  000007                     ___awdiv@divisor:
  1002                           	callstack 0
  1003  000007                     ___awmod@divisor:
  1004                           	callstack 0
  1005  000007                     fputc@c:
  1006                           	callstack 0
  1007  000007                     strcpy@src:
  1008                           	callstack 0
  1009  000007                     strlen@a:
  1010                           	callstack 0
  1011  000007                     strncmp@_r:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x6
  1015  000007                     	ds	2
  1016  000009                     ??___fpclassifyf:
  1017  000009                     ??_strcpy:
  1018  000009                     ??___fltol:
  1019  000009                     I2C_SetCallback@idx:
  1020                           	callstack 0
  1021  000009                     ___awdiv@counter:
  1022                           	callstack 0
  1023  000009                     ___awmod@counter:
  1024                           	callstack 0
  1025  000009                     ___wmul@product:
  1026                           	callstack 0
  1027  000009                     fputc@fp:
  1028                           	callstack 0
  1029  000009                     strncmp@n:
  1030                           	callstack 0
  1031  000009                     ___fleq@ff2:
  1032                           	callstack 0
  1033  000009                     ___fladd@a:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x8
  1037  000009                     	ds	1
  1038  00000A                     ___awdiv@sign:
  1039                           	callstack 0
  1040  00000A                     ___awmod@sign:
  1041                           	callstack 0
  1042  00000A                     I2C_SetDataCompleteCallback@cb:
  1043                           	callstack 0
  1044  00000A                     I2C_SetAddressNackCallback@cb:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x9
  1048  00000A                     	ds	1
  1049  00000B                     ??_fputc:
  1050  00000B                     ??_strncmp:
  1051  00000B                     ?_tolower:
  1052                           	callstack 0
  1053  00000B                     _isspace$2277:
  1054                           	callstack 0
  1055  00000B                     ___awdiv@quotient:
  1056                           	callstack 0
  1057  00000B                     strcpy@s:
  1058                           	callstack 0
  1059  00000B                     tolower@c:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0xA
  1063  00000B                     	ds	1
  1064  00000C                     ?_atoi:
  1065                           	callstack 0
  1066  00000C                     I2C_SetDataCompleteCallback@ptr:
  1067                           	callstack 0
  1068  00000C                     I2C_SetAddressNackCallback@ptr:
  1069                           	callstack 0
  1070  00000C                     atoi@s:
  1071                           	callstack 0
  1072  00000C                     strncmp@l:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0xB
  1076  00000C                     	ds	1
  1077  00000D                     ??___fladd:
  1078  00000D                     ??_tolower:
  1079  00000D                     ??___fleq:
  1080  00000D                     ___fltol@sign1:
  1081                           	callstack 0
  1082  00000D                     ___fpclassifyf@e:
  1083                           	callstack 0
  1084  00000D                     strcpy@d:
  1085                           	callstack 0
  1086                           
  1087                           ; 2 bytes @ 0xC
  1088  00000D                     	ds	1
  1089  00000E                     ??_atoi:
  1090  00000E                     ___fltol@exp1:
  1091                           	callstack 0
  1092  00000E                     rd1RegCompleteHandler@ptr:
  1093                           	callstack 0
  1094  00000E                     rd2RegCompleteHandler@ptr:
  1095                           	callstack 0
  1096  00000E                     wr1RegCompleteHandler@ptr:
  1097                           	callstack 0
  1098  00000E                     wr2RegCompleteHandler@ptr:
  1099                           	callstack 0
  1100  00000E                     rdBlkRegCompleteHandler@ptr:
  1101                           	callstack 0
  1102  00000E                     I2C_CallbackReturnReset@funPtr:
  1103                           	callstack 0
  1104  00000E                     strncmp@r:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0xD
  1108  00000E                     	ds	1
  1109  00000F                     ___fpclassifyf@u:
  1110                           	callstack 0
  1111                           
  1112                           ; 4 bytes @ 0xE
  1113  00000F                     	ds	1
  1114  000010                     ??_I2C_DO_TX:
  1115  000010                     ??_I2C_DO_RX:
  1116  000010                     ??_I2C_DO_TX_EMPTY:
  1117  000010                     ??_I2C_DO_ADDRESS_NACK:
  1118  000010                     fputs@s:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0xF
  1122  000010                     	ds	1
  1123  000011                     ___fladd@signs:
  1124                           	callstack 0
  1125  000011                     _tolower$2335:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x10
  1129  000011                     	ds	1
  1130  000012                     ??_I2C_MasterFsm:
  1131  000012                     ___fladd@aexp:
  1132                           	callstack 0
  1133  000012                     atoi@neg:
  1134                           	callstack 0
  1135  000012                     fputs@fp:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x11
  1139  000012                     	ds	1
  1140  000013                     ___fladd@bexp:
  1141                           	callstack 0
  1142                           
  1143                           ; 1 bytes @ 0x12
  1144  000013                     	ds	1
  1145  000014                     I2C_MasterOperation@read:
  1146                           	callstack 0
  1147  000014                     ___fladd@grs:
  1148                           	callstack 0
  1149  000014                     fputs@c:
  1150                           	callstack 0
  1151  000014                     _atoi$2246:
  1152                           	callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x13
  1155  000014                     	ds	1
  1156  000015                     I2C_MasterOperation@returnValue:
  1157                           	callstack 0
  1158  000015                     fputs@i:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x14
  1162  000015                     	ds	1
  1163  000016                     ?_I2C_Read2ByteRegister:
  1164                           	callstack 0
  1165  000016                     I2C_Read2ByteRegister@reg:
  1166                           	callstack 0
  1167  000016                     I2C_WriteNBytes@data:
  1168                           	callstack 0
  1169  000016                     _atoi$2248:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x15
  1173  000016                     	ds	1
  1174  000017                     ?_pad:
  1175                           	callstack 0
  1176  000017                     pad@fp:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x16
  1180  000017                     	ds	1
  1181  000018                     ??_I2C_Read2ByteRegister:
  1182  000018                     _atoi$2247:
  1183                           	callstack 0
  1184  000018                     I2C_WriteNBytes@len:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x17
  1188  000018                     	ds	1
  1189  000019                     pad@buf:
  1190                           	callstack 0
  1191  000019                     atoi@n:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x18
  1195  000019                     	ds	1
  1196  00001A                     I2C_WriteNBytes@address:
  1197                           	callstack 0
  1198                           
  1199                           ; 1 bytes @ 0x19
  1200  00001A                     	ds	1
  1201  00001B                     I2C_Read2ByteRegister@address:
  1202                           	callstack 0
  1203  00001B                     INA219_WriteRegister@data:
  1204                           	callstack 0
  1205  00001B                     pad@p:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x1A
  1209  00001B                     	ds	1
  1210  00001C                     I2C_Read2ByteRegister@returnValue:
  1211                           	callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x1B
  1214  00001C                     	ds	1
  1215  00001D                     ??_pad:
  1216  00001D                     INA219_WriteRegister@address:
  1217                           	callstack 0
  1218                           
  1219                           ; 1 bytes @ 0x1C
  1220  00001D                     	ds	1
  1221  00001E                     INA219_ReadRegister@data:
  1222                           	callstack 0
  1223  00001E                     pad@i:
  1224                           	callstack 0
  1225  00001E                     INA219_WriteRegister@writeBuffer:
  1226                           	callstack 0
  1227                           
  1228                           ; 3 bytes @ 0x1D
  1229  00001E                     	ds	2
  1230  000020                     INA219_ReadRegister@address:
  1231                           	callstack 0
  1232  000020                     pad@w:
  1233                           	callstack 0
  1234                           
  1235                           ; 2 bytes @ 0x1F
  1236  000020                     	ds	1
  1237  000021                     ?_INA219_getBusVoltage_raw:
  1238                           	callstack 0
  1239  000021                     ?_INA219_getShuntVoltage_raw:
  1240                           	callstack 0
  1241  000021                     ?_INA219_getCurrent_raw:
  1242                           	callstack 0
  1243  000021                     ?_INA219_getPower_raw:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x20
  1247  000021                     	ds	2
  1248  000023                     INA219_getBusVoltage_raw@value:
  1249                           	callstack 0
  1250  000023                     INA219_getShuntVoltage_raw@value:
  1251                           	callstack 0
  1252  000023                     INA219_getCurrent_raw@value:
  1253                           	callstack 0
  1254  000023                     INA219_getPower_raw@value:
  1255                           	callstack 0
  1256                           
  1257                           ; 2 bytes @ 0x22
  1258  000023                     	ds	2
  1259  000025                     ?___xxtofl:
  1260                           	callstack 0
  1261  000025                     ___xxtofl@val:
  1262                           	callstack 0
  1263                           
  1264                           ; 4 bytes @ 0x24
  1265  000025                     	ds	4
  1266  000029                     ??___xxtofl:
  1267                           
  1268                           ; 1 bytes @ 0x28
  1269  000029                     	ds	4
  1270  00002D                     ___xxtofl@sign:
  1271                           	callstack 0
  1272                           
  1273                           ; 1 bytes @ 0x2C
  1274  00002D                     	ds	1
  1275  00002E                     ___xxtofl@exp:
  1276                           	callstack 0
  1277                           
  1278                           ; 1 bytes @ 0x2D
  1279  00002E                     	ds	1
  1280  00002F                     ___xxtofl@arg:
  1281                           	callstack 0
  1282                           
  1283                           ; 4 bytes @ 0x2E
  1284  00002F                     	ds	4
  1285  000033                     ?___fldiv:
  1286                           	callstack 0
  1287  000033                     ___fldiv@b:
  1288                           	callstack 0
  1289                           
  1290                           ; 4 bytes @ 0x32
  1291  000033                     	ds	4
  1292  000037                     ___fldiv@a:
  1293                           	callstack 0
  1294                           
  1295                           ; 4 bytes @ 0x36
  1296  000037                     	ds	4
  1297  00003B                     ??___fldiv:
  1298                           
  1299                           ; 1 bytes @ 0x3A
  1300  00003B                     	ds	4
  1301  00003F                     ___fldiv@rem:
  1302                           	callstack 0
  1303                           
  1304                           ; 4 bytes @ 0x3E
  1305  00003F                     	ds	4
  1306  000043                     ___fldiv@sign:
  1307                           	callstack 0
  1308                           
  1309                           ; 1 bytes @ 0x42
  1310  000043                     	ds	1
  1311  000044                     ___fldiv@new_exp:
  1312                           	callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x43
  1315  000044                     	ds	2
  1316  000046                     ___fldiv@grs:
  1317                           	callstack 0
  1318                           
  1319                           ; 4 bytes @ 0x45
  1320  000046                     	ds	4
  1321  00004A                     ___fldiv@bexp:
  1322                           	callstack 0
  1323                           
  1324                           ; 1 bytes @ 0x49
  1325  00004A                     	ds	1
  1326  00004B                     ___fldiv@aexp:
  1327                           	callstack 0
  1328                           
  1329                           ; 1 bytes @ 0x4A
  1330  00004B                     	ds	1
  1331  00004C                     ?___flmul:
  1332                           	callstack 0
  1333  00004C                     ?_floorf:
  1334                           	callstack 0
  1335  00004C                     ___flmul@b:
  1336                           	callstack 0
  1337  00004C                     floorf@x:
  1338                           	callstack 0
  1339                           
  1340                           ; 4 bytes @ 0x4B
  1341  00004C                     	ds	4
  1342  000050                     ??_floorf:
  1343  000050                     ___flmul@a:
  1344                           	callstack 0
  1345                           
  1346                           ; 4 bytes @ 0x4F
  1347  000050                     	ds	4
  1348  000054                     ??_INA219_getBusVoltage_V:
  1349  000054                     INA219_getShuntVoltage_mV@value:
  1350                           	callstack 0
  1351                           
  1352                           ; 2 bytes @ 0x53
  1353  000054                     	ds	2
  1354  000056                     
  1355                           ; 1 bytes @ 0x55
  1356 ;;
  1357 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1358 ;;
  1359 ;; *************** function _main *****************
  1360 ;; Defined at:
  1361 ;;		line 56 in file "main.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;		None
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      void 
  1368 ;; Registers used:
  1369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1377 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1378 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1379 ;;Total ram usage:        2 bytes
  1380 ;; Hardware stack levels required when called: 16
  1381 ;; This function calls:
  1382 ;;		_INA219_Initialize
  1383 ;;		_INA219_getBusVoltage_V
  1384 ;;		_INA219_getCurrent_mA
  1385 ;;		_INA219_getPower_mW
  1386 ;;		_INA219_getShuntVoltage_mV
  1387 ;;		_INA219_setCalibration_32V_2A
  1388 ;;		_SYSTEM_Initialize
  1389 ;;		___fldiv
  1390 ;;		_printf
  1391 ;; This function is called by:
  1392 ;;		Startup code after reset
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           	psect	text0
  1397  0033DC                     __ptext0:
  1398                           	callstack 0
  1399  0033DC                     _main:
  1400                           	callstack 15
  1401  0033DC                     
  1402                           ;main.c: 58:     SYSTEM_Initialize();
  1403  0033DC  ECCF  F025         	call	_SYSTEM_Initialize	;wreg free
  1404  0033E0                     
  1405                           ;main.c: 59:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1406  0033E0  0E06               	movlw	6
  1407  0033E2  0100               	movlb	0	; () banked
  1408  0033E4  6FE2               	movwf	(??_main+1)& (0+255),b
  1409  0033E6  0E13               	movlw	19
  1410  0033E8  6FE1               	movwf	??_main& (0+255),b
  1411  0033EA  0EAD               	movlw	173
  1412  0033EC                     u8227:
  1413  0033EC  2EE8               	decfsz	wreg,f,c
  1414  0033EE  D7FE               	bra	u8227
  1415  0033F0  2FE1               	decfsz	??_main& (0+255),f,b
  1416  0033F2  D7FC               	bra	u8227
  1417  0033F4  2FE2               	decfsz	(??_main+1)& (0+255),f,b
  1418  0033F6  D7FA               	bra	u8227
  1419  0033F8  F000 F000          	nop2	
  1420  0033FC                     
  1421                           ;main.c: 60:     INA219_Initialize();
  1422  0033FC  EC85  F026         	call	_INA219_Initialize	;wreg free
  1423  003400                     
  1424                           ;main.c: 61:     INA219_setCalibration_32V_2A();
  1425  003400  EC3A  F024         	call	_INA219_setCalibration_32V_2A	;wreg free
  1426  003404                     
  1427                           ;main.c: 71:     (INTCONbits.GIE = 1);
  1428  003404  8EF2               	bsf	242,7,c	;volatile
  1429  003406                     
  1430                           ;main.c: 77:     (INTCONbits.PEIE = 1);
  1431  003406  8CF2               	bsf	242,6,c	;volatile
  1432  003408                     l7632:
  1433                           
  1434                           ;main.c: 83:         shunt_mV = INA219_getShuntVoltage_mV();
  1435  003408  ECEA  F022         	call	_INA219_getShuntVoltage_mV	;wreg free
  1436  00340C  C071  F156         	movff	?_INA219_getShuntVoltage_mV,_shunt_mV
  1437  003410  C072  F157         	movff	?_INA219_getShuntVoltage_mV+1,_shunt_mV+1
  1438  003414  C073  F158         	movff	?_INA219_getShuntVoltage_mV+2,_shunt_mV+2
  1439  003418  C074  F159         	movff	?_INA219_getShuntVoltage_mV+3,_shunt_mV+3
  1440  00341C                     
  1441                           ;main.c: 84:         bus_voltage = INA219_getBusVoltage_V();
  1442  00341C  EC2D  F021         	call	_INA219_getBusVoltage_V	;wreg free
  1443  003420  C071  F152         	movff	?_INA219_getBusVoltage_V,_bus_voltage
  1444  003424  C072  F153         	movff	?_INA219_getBusVoltage_V+1,_bus_voltage+1
  1445  003428  C073  F154         	movff	?_INA219_getBusVoltage_V+2,_bus_voltage+2
  1446  00342C  C074  F155         	movff	?_INA219_getBusVoltage_V+3,_bus_voltage+3
  1447  003430                     
  1448                           ;main.c: 85:         power_mW = INA219_getPower_mW();
  1449  003430  EC35  F020         	call	_INA219_getPower_mW	;wreg free
  1450  003434  C071  F14E         	movff	?_INA219_getPower_mW,_power_mW
  1451  003438  C072  F14F         	movff	?_INA219_getPower_mW+1,_power_mW+1
  1452  00343C  C073  F150         	movff	?_INA219_getPower_mW+2,_power_mW+2
  1453  003440  C074  F151         	movff	?_INA219_getPower_mW+3,_power_mW+3
  1454  003444                     
  1455                           ;main.c: 86:         current_mA = INA219_getCurrent_mA();
  1456  003444  ECB9  F01E         	call	_INA219_getCurrent_mA	;wreg free
  1457  003448  C071  F0E3         	movff	?_INA219_getCurrent_mA,_current_mA
  1458  00344C  C072  F0E4         	movff	?_INA219_getCurrent_mA+1,_current_mA+1
  1459  003450  C073  F0E5         	movff	?_INA219_getCurrent_mA+2,_current_mA+2
  1460  003454  C074  F0E6         	movff	?_INA219_getCurrent_mA+3,_current_mA+3
  1461  003458                     
  1462                           ;main.c: 87:         current_mA = current_mA / 10;
  1463  003458  C0E3  F033         	movff	_current_mA,___fldiv@b
  1464  00345C  C0E4  F034         	movff	_current_mA+1,___fldiv@b+1
  1465  003460  C0E5  F035         	movff	_current_mA+2,___fldiv@b+2
  1466  003464  C0E6  F036         	movff	_current_mA+3,___fldiv@b+3
  1467  003468  0E00               	movlw	0
  1468  00346A  6E37               	movwf	___fldiv@a^0,c
  1469  00346C  0E00               	movlw	0
  1470  00346E  6E38               	movwf	(___fldiv@a+1)^0,c
  1471  003470  0E20               	movlw	32
  1472  003472  6E39               	movwf	(___fldiv@a+2)^0,c
  1473  003474  0E41               	movlw	65
  1474  003476  6E3A               	movwf	(___fldiv@a+3)^0,c
  1475  003478  EC6F  F015         	call	___fldiv	;wreg free
  1476  00347C  C033  F0E3         	movff	?___fldiv,_current_mA
  1477  003480  C034  F0E4         	movff	?___fldiv+1,_current_mA+1
  1478  003484  C035  F0E5         	movff	?___fldiv+2,_current_mA+2
  1479  003488  C036  F0E6         	movff	?___fldiv+3,_current_mA+3
  1480  00348C                     
  1481                           ;main.c: 89:         printf("Shunt-Spannung: %.2fmV \r\n",shunt_mV);
  1482  00348C  0E3B               	movlw	low STR_1
  1483  00348E  0101               	movlb	1	; () banked
  1484  003490  6FB7               	movwf	printf@fmt& (0+255),b
  1485  003492  0E10               	movlw	high STR_1
  1486  003494  6FB8               	movwf	(printf@fmt+1)& (0+255),b
  1487  003496  C156  F1B9         	movff	_shunt_mV,?_printf+2
  1488  00349A  C157  F1BA         	movff	_shunt_mV+1,?_printf+3
  1489  00349E  C158  F1BB         	movff	_shunt_mV+2,?_printf+4
  1490  0034A2  C159  F1BC         	movff	_shunt_mV+3,?_printf+5
  1491  0034A6  EC0C  F025         	call	_printf	;wreg free
  1492  0034AA                     
  1493                           ;main.c: 90:         printf("BUS-Spannung:   %.2fV \r\n",bus_voltage);
  1494  0034AA  0E6F               	movlw	low STR_2
  1495  0034AC  0101               	movlb	1	; () banked
  1496  0034AE  6FB7               	movwf	printf@fmt& (0+255),b
  1497  0034B0  0E10               	movlw	high STR_2
  1498  0034B2  6FB8               	movwf	(printf@fmt+1)& (0+255),b
  1499  0034B4  C152  F1B9         	movff	_bus_voltage,?_printf+2
  1500  0034B8  C153  F1BA         	movff	_bus_voltage+1,?_printf+3
  1501  0034BC  C154  F1BB         	movff	_bus_voltage+2,?_printf+4
  1502  0034C0  C155  F1BC         	movff	_bus_voltage+3,?_printf+5
  1503  0034C4  EC0C  F025         	call	_printf	;wreg free
  1504  0034C8                     
  1505                           ;main.c: 91:         printf("Leistung:       %.2fmW \r\n",power_mW);
  1506  0034C8  0E55               	movlw	low STR_3
  1507  0034CA  0101               	movlb	1	; () banked
  1508  0034CC  6FB7               	movwf	printf@fmt& (0+255),b
  1509  0034CE  0E10               	movlw	high STR_3
  1510  0034D0  6FB8               	movwf	(printf@fmt+1)& (0+255),b
  1511  0034D2  C14E  F1B9         	movff	_power_mW,?_printf+2
  1512  0034D6  C14F  F1BA         	movff	_power_mW+1,?_printf+3
  1513  0034DA  C150  F1BB         	movff	_power_mW+2,?_printf+4
  1514  0034DE  C151  F1BC         	movff	_power_mW+3,?_printf+5
  1515  0034E2  EC0C  F025         	call	_printf	;wreg free
  1516  0034E6                     
  1517                           ;main.c: 92:         printf("Strom:          %.2fmA \r\n",current_mA);
  1518  0034E6  0E21               	movlw	low STR_4
  1519  0034E8  0101               	movlb	1	; () banked
  1520  0034EA  6FB7               	movwf	printf@fmt& (0+255),b
  1521  0034EC  0E10               	movlw	high STR_4
  1522  0034EE  6FB8               	movwf	(printf@fmt+1)& (0+255),b
  1523  0034F0  C0E3  F1B9         	movff	_current_mA,?_printf+2
  1524  0034F4  C0E4  F1BA         	movff	_current_mA+1,?_printf+3
  1525  0034F8  C0E5  F1BB         	movff	_current_mA+2,?_printf+4
  1526  0034FC  C0E6  F1BC         	movff	_current_mA+3,?_printf+5
  1527  003500  EC0C  F025         	call	_printf	;wreg free
  1528  003504                     
  1529                           ;main.c: 94:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1530  003504  0E06               	movlw	6
  1531  003506  0100               	movlb	0	; () banked
  1532  003508  6FE2               	movwf	(??_main+1)& (0+255),b
  1533  00350A  0E13               	movlw	19
  1534  00350C  6FE1               	movwf	??_main& (0+255),b
  1535  00350E  0EAD               	movlw	173
  1536  003510                     u8237:
  1537  003510  2EE8               	decfsz	wreg,f,c
  1538  003512  D7FE               	bra	u8237
  1539  003514  2FE1               	decfsz	??_main& (0+255),f,b
  1540  003516  D7FC               	bra	u8237
  1541  003518  2FE2               	decfsz	(??_main+1)& (0+255),f,b
  1542  00351A  D7FA               	bra	u8237
  1543  00351C  F000 F000          	nop2	
  1544  003520  EF04  F01A         	goto	l7632
  1545  003524  EF58  F000         	goto	start
  1546  003528                     __end_of_main:
  1547                           	callstack 0
  1548                           
  1549 ;; *************** function _printf *****************
  1550 ;; Defined at:
  1551 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  1554 ;;		 -> STR_4(26), STR_3(26), STR_2(25), STR_1(26), 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;  ap              2  127[BANK0 ] PTR void [1]
  1557 ;;		 -> ?_printf(2), 
  1558 ;;  ret             2    0        int 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  2    0[BANK1 ] int 
  1561 ;; Registers used:
  1562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1568 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1569 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1571 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1572 ;;Total ram usage:        8 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; Hardware stack levels required when called: 12
  1575 ;; This function calls:
  1576 ;;		_vfprintf
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text1
  1583  004A18                     __ptext1:
  1584                           	callstack 0
  1585  004A18                     _printf:
  1586                           	callstack 18
  1587  004A18  0EB9               	movlw	low (?_printf+2)
  1588  004A1A  0100               	movlb	0	; () banked
  1589  004A1C  6FDF               	movwf	printf@ap& (0+255),b
  1590  004A1E  0E01               	movlw	high (?_printf+2)
  1591  004A20  6FE0               	movwf	(printf@ap+1)& (0+255),b
  1592  004A22                     
  1593                           ; BSR set to: 0
  1594  004A22  0E00               	movlw	0
  1595  004A24  6FD7               	movwf	vfprintf@fp& (0+255),b
  1596  004A26  0E00               	movlw	0
  1597  004A28  6FD8               	movwf	(vfprintf@fp+1)& (0+255),b
  1598  004A2A  C1B7  F0D9         	movff	printf@fmt,vfprintf@fmt
  1599  004A2E  C1B8  F0DA         	movff	printf@fmt+1,vfprintf@fmt+1
  1600  004A32  0EDF               	movlw	low printf@ap
  1601  004A34  6FDB               	movwf	vfprintf@ap& (0+255),b
  1602  004A36  0E00               	movlw	high printf@ap
  1603  004A38  6FDC               	movwf	(vfprintf@ap+1)& (0+255),b
  1604  004A3A  ECD2  F021         	call	_vfprintf	;wreg free
  1605  004A3E  0012               	return		;funcret
  1606  004A40                     __end_of_printf:
  1607                           	callstack 0
  1608                           
  1609 ;; *************** function _vfprintf *****************
  1610 ;; Defined at:
  1611 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  fp              2  119[BANK0 ] PTR struct _IO_FILE
  1614 ;;		 -> NULL(0), 
  1615 ;;  fmt             2  121[BANK0 ] PTR const unsigned char 
  1616 ;;		 -> STR_4(26), STR_3(26), STR_2(25), STR_1(26), 
  1617 ;;  ap              2  123[BANK0 ] PTR PTR void 
  1618 ;;		 -> printf@ap(2), 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  cfmt            2  125[BANK0 ] PTR unsigned char 
  1621 ;;		 -> STR_4(26), STR_3(26), STR_2(25), STR_1(26), 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  2  119[BANK0 ] int 
  1624 ;; Registers used:
  1625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1631 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;Total ram usage:        8 bytes
  1636 ;; Hardware stack levels used: 1
  1637 ;; Hardware stack levels required when called: 11
  1638 ;; This function calls:
  1639 ;;		_vfpfcnvrt
  1640 ;; This function is called by:
  1641 ;;		_printf
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text2
  1646  0043A4                     __ptext2:
  1647                           	callstack 0
  1648  0043A4                     _vfprintf:
  1649                           	callstack 18
  1650  0043A4                     
  1651                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1652  0043A4  C0D9  F0DD         	movff	vfprintf@fmt,vfprintf@cfmt
  1653  0043A8  C0DA  F0DE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1654  0043AC                     
  1655                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1656  0043AC  0E00               	movlw	0
  1657  0043AE  0100               	movlb	0	; () banked
  1658  0043B0  6FE8               	movwf	(_nout+1)& (0+255),b
  1659  0043B2  0E00               	movlw	0
  1660  0043B4  6FE7               	movwf	_nout& (0+255),b
  1661                           
  1662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1663  0043B6  EFF0  F021         	goto	l7584
  1664  0043BA                     l7582:
  1665                           
  1666                           ; BSR set to: 0
  1667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1668  0043BA  C0D7  F0C1         	movff	vfprintf@fp,vfpfcnvrt@fp
  1669  0043BE  C0D8  F0C2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1670  0043C2  0EDD               	movlw	low vfprintf@cfmt
  1671  0043C4  6FC3               	movwf	vfpfcnvrt@fmt& (0+255),b
  1672  0043C6  0E00               	movlw	high vfprintf@cfmt
  1673  0043C8  6FC4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1674  0043CA  C0DB  F0C5         	movff	vfprintf@ap,vfpfcnvrt@ap
  1675  0043CE  C0DC  F0C6         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1676  0043D2  EC02  F011         	call	_vfpfcnvrt	;wreg free
  1677  0043D6  0100               	movlb	0	; () banked
  1678  0043D8  51C1               	movf	?_vfpfcnvrt& (0+255),w,b
  1679  0043DA  27E7               	addwf	_nout& (0+255),f,b
  1680  0043DC  51C2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1681  0043DE  23E8               	addwfc	(_nout+1)& (0+255),f,b
  1682  0043E0                     l7584:
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1686  0043E0  C0DD  FFF6         	movff	vfprintf@cfmt,tblptrl
  1687  0043E4  C0DE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1688  0043E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1689  0043E8  6AF8               	clrf	tblptru,c
  1690  0043EA                     	endif
  1691  0043EA                     	if	0	;tblptru may be non-zero
  1692  0043EA                     	endif
  1693  0043EA  0008               	tblrd		*
  1694  0043EC  50F5               	movf	tablat,w,c
  1695  0043EE  0900               	iorlw	0
  1696  0043F0  A4D8               	btfss	status,2,c
  1697  0043F2  EFFD  F021         	goto	u8211
  1698  0043F6  EFFF  F021         	goto	u8210
  1699  0043FA                     u8211:
  1700  0043FA  EFDD  F021         	goto	l7582
  1701  0043FE                     u8210:
  1702  0043FE                     
  1703                           ; BSR set to: 0
  1704                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1705  0043FE  C0E7  F0D7         	movff	_nout,?_vfprintf
  1706  004402  C0E8  F0D8         	movff	_nout+1,?_vfprintf+1
  1707  004406                     
  1708                           ; BSR set to: 0
  1709  004406  0012               	return		;funcret
  1710  004408                     __end_of_vfprintf:
  1711                           	callstack 0
  1712                           
  1713 ;; *************** function _vfpfcnvrt *****************
  1714 ;; Defined at:
  1715 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  fp              2   97[BANK0 ] PTR struct _IO_FILE
  1718 ;;		 -> NULL(0), 
  1719 ;;  fmt             2   99[BANK0 ] PTR PTR unsigned char 
  1720 ;;		 -> vfprintf@cfmt(2), 
  1721 ;;  ap              2  101[BANK0 ] PTR PTR void 
  1722 ;;		 -> printf@ap(2), 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  llu             8    0        unsigned long long 
  1725 ;;  ll              8    0        long long 
  1726 ;;  f               4  111[BANK0 ] long long 
  1727 ;;  ct              3  115[BANK0 ] unsigned char [3]
  1728 ;;  vp              3    0        PTR void 
  1729 ;;  cp              3    0        PTR unsigned char 
  1730 ;;  i               2    0        int 
  1731 ;;  done            2    0        int 
  1732 ;;  c               1  118[BANK0 ] unsigned char 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  2   97[BANK0 ] int 
  1735 ;; Registers used:
  1736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1742 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1743 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1744 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1745 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1746 ;;Total ram usage:       22 bytes
  1747 ;; Hardware stack levels used: 1
  1748 ;; Hardware stack levels required when called: 10
  1749 ;; This function calls:
  1750 ;;		_atoi
  1751 ;;		_efgtoa
  1752 ;;		_fputc
  1753 ;;		_isdigit
  1754 ;;		_isupper
  1755 ;;		_strncmp
  1756 ;;		_tolower
  1757 ;; This function is called by:
  1758 ;;		_vfprintf
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text3
  1763  002204                     __ptext3:
  1764                           	callstack 0
  1765  002204                     _vfpfcnvrt:
  1766                           	callstack 18
  1767  002204                     
  1768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1769  002204  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1770  002208  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1771  00220C  CFDE FFF6          	movff	postinc2,tblptrl
  1772  002210  CFDD FFF7          	movff	postdec2,tblptrh
  1773  002214                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1774  002214  6AF8               	clrf	tblptru,c
  1775  002216                     	endif
  1776  002216                     	if	0	;tblptru may be non-zero
  1777  002216                     	endif
  1778  002216  0008               	tblrd		*
  1779  002218  50F5               	movf	tablat,w,c
  1780  00221A  0A25               	xorlw	37
  1781  00221C  A4D8               	btfss	status,2,c
  1782  00221E  EF13  F011         	goto	u8071
  1783  002222  EF15  F011         	goto	u8070
  1784  002226                     u8071:
  1785  002226  EF3C  F013         	goto	l7570
  1786  00222A                     u8070:
  1787  00222A                     
  1788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1789  00222A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1790  00222E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1791  002232  2ADE               	incf	postinc2,f,c
  1792  002234  0E00               	movlw	0
  1793  002236  22DD               	addwfc	postdec2,f,c
  1794  002238                     
  1795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1796  002238  0E00               	movlw	0
  1797  00223A  0100               	movlb	0	; () banked
  1798  00223C  6FEA               	movwf	(_width+1)& (0+255),b
  1799  00223E  0E00               	movlw	0
  1800  002240  6FE9               	movwf	_width& (0+255),b
  1801  002242  C0E9  F0ED         	movff	_width,_flags
  1802  002246  C0EA  F0EE         	movff	_width+1,_flags+1
  1803  00224A                     
  1804                           ; BSR set to: 0
  1805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1806  00224A  69EB               	setf	_prec& (0+255),b
  1807  00224C  69EC               	setf	(_prec+1)& (0+255),b
  1808  00224E                     
  1809                           ; BSR set to: 0
  1810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1811  00224E  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1812  002252  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1813  002256  CFDE FFF6          	movff	postinc2,tblptrl
  1814  00225A  CFDD FFF7          	movff	postdec2,tblptrh
  1815  00225E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1816  00225E  6AF8               	clrf	tblptru,c
  1817  002260                     	endif
  1818  002260                     	if	0	;tblptru may be non-zero
  1819  002260                     	endif
  1820  002260  0008               	tblrd		*
  1821  002262  50F5               	movf	tablat,w,c
  1822  002264  0A2E               	xorlw	46
  1823  002266  A4D8               	btfss	status,2,c
  1824  002268  EF38  F011         	goto	u8081
  1825  00226C  EF3A  F011         	goto	u8080
  1826  002270                     u8081:
  1827  002270  EFBA  F011         	goto	l7516
  1828  002274                     u8080:
  1829  002274                     
  1830                           ; BSR set to: 0
  1831                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1832  002274  0E00               	movlw	0
  1833  002276  6FEC               	movwf	(_prec+1)& (0+255),b
  1834  002278  0E00               	movlw	0
  1835  00227A  6FEB               	movwf	_prec& (0+255),b
  1836  00227C                     
  1837                           ; BSR set to: 0
  1838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1839  00227C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1840  002280  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1841  002284  2ADE               	incf	postinc2,f,c
  1842  002286  0E00               	movlw	0
  1843  002288  22DD               	addwfc	postdec2,f,c
  1844  00228A                     
  1845                           ; BSR set to: 0
  1846                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1847  00228A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1848  00228E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1849  002292  CFDE FFF6          	movff	postinc2,tblptrl
  1850  002296  CFDD FFF7          	movff	postdec2,tblptrh
  1851  00229A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1852  00229A  6AF8               	clrf	tblptru,c
  1853  00229C                     	endif
  1854  00229C                     	if	0	;tblptru may be non-zero
  1855  00229C                     	endif
  1856  00229C  0008               	tblrd		*
  1857  00229E  50F5               	movf	tablat,w,c
  1858  0022A0  0A2A               	xorlw	42
  1859  0022A2  A4D8               	btfss	status,2,c
  1860  0022A4  EF56  F011         	goto	u8091
  1861  0022A8  EF58  F011         	goto	u8090
  1862  0022AC                     u8091:
  1863  0022AC  EF75  F011         	goto	l7506
  1864  0022B0                     u8090:
  1865  0022B0                     
  1866                           ; BSR set to: 0
  1867                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1868  0022B0  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1869  0022B4  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1870  0022B8  2ADE               	incf	postinc2,f,c
  1871  0022BA  0E00               	movlw	0
  1872  0022BC  22DD               	addwfc	postdec2,f,c
  1873                           
  1874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1875  0022BE  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1876  0022C2  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1877  0022C6  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  1878  0022CA  0E02               	movlw	2
  1879  0022CC  26DE               	addwf	postinc2,f,c
  1880  0022CE  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  1881  0022D2  0E00               	movlw	0
  1882  0022D4  22DD               	addwfc	postdec2,f,c
  1883  0022D6  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1884  0022DA  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1885  0022DE  CFDE F0EB          	movff	postinc2,_prec
  1886  0022E2  CFDD F0EC          	movff	postdec2,_prec+1
  1887                           
  1888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1889  0022E6  EFBA  F011         	goto	l7516
  1890  0022EA                     l7506:
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1894  0022EA  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1895  0022EE  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1896  0022F2  CFDE F00C          	movff	postinc2,atoi@s
  1897  0022F6  CFDD F00D          	movff	postdec2,atoi@s+1
  1898  0022FA  EC21  F019         	call	_atoi	;wreg free
  1899  0022FE  C00C  F0EB         	movff	?_atoi,_prec
  1900  002302  C00D  F0EC         	movff	?_atoi+1,_prec+1
  1901                           
  1902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1903  002306  EF8C  F011         	goto	l7510
  1904  00230A                     l7508:
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1908  00230A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1909  00230E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1910  002312  2ADE               	incf	postinc2,f,c
  1911  002314  0E00               	movlw	0
  1912  002316  22DD               	addwfc	postdec2,f,c
  1913  002318                     l7510:
  1914  002318  0ED0               	movlw	208
  1915  00231A  0100               	movlb	0	; () banked
  1916  00231C  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  1917  00231E  0EFF               	movlw	255
  1918  002320  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1919  002322  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1920  002326  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1921  00232A  CFDE FFF6          	movff	postinc2,tblptrl
  1922  00232E  CFDD FFF7          	movff	postdec2,tblptrh
  1923  002332                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1924  002332  6AF8               	clrf	tblptru,c
  1925  002334                     	endif
  1926  002334                     	if	0	;tblptru may be non-zero
  1927  002334                     	endif
  1928  002334  0008               	tblrd		*
  1929  002336  50F5               	movf	tablat,w,c
  1930  002338  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1931  00233A  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1932  00233C  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  1933  00233E  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1934  002340  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1935  002342  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1936  002344  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1937  002346  E10A               	bnz	u8100
  1938  002348  0E0A               	movlw	10
  1939  00234A  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1940  00234C  A0D8               	btfss	status,0,c
  1941  00234E  EFAB  F011         	goto	u8101
  1942  002352  EFAE  F011         	goto	u8100
  1943  002356                     u8101:
  1944  002356  0E01               	movlw	1
  1945  002358  EFAF  F011         	goto	u8110
  1946  00235C                     u8100:
  1947  00235C  0E00               	movlw	0
  1948  00235E                     u8110:
  1949  00235E  6FCB               	movwf	_vfpfcnvrt$2208& (0+255),b
  1950  002360  6BCC               	clrf	(_vfpfcnvrt$2208+1)& (0+255),b
  1951  002362                     
  1952                           ; BSR set to: 0
  1953  002362  51CB               	movf	_vfpfcnvrt$2208& (0+255),w,b
  1954  002364  11CC               	iorwf	(_vfpfcnvrt$2208+1)& (0+255),w,b
  1955  002366  A4D8               	btfss	status,2,c
  1956  002368  EFB8  F011         	goto	u8121
  1957  00236C  EFBA  F011         	goto	u8120
  1958  002370                     u8121:
  1959  002370  EF85  F011         	goto	l7508
  1960  002374                     u8120:
  1961  002374                     l7516:
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1965  002374  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1966  002378  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1967  00237C  CFDE FFF6          	movff	postinc2,tblptrl
  1968  002380  CFDD FFF7          	movff	postdec2,tblptrh
  1969  002384                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1970  002384  6AF8               	clrf	tblptru,c
  1971  002386                     	endif
  1972  002386                     	if	0	;tblptru may be non-zero
  1973  002386                     	endif
  1974  002386  0008               	tblrd		*
  1975  002388  50F5               	movf	tablat,w,c
  1976  00238A  6E0B               	movwf	tolower@c^0,c
  1977  00238C  6A0C               	clrf	(tolower@c+1)^0,c
  1978  00238E  EC04  F022         	call	_tolower	;wreg free
  1979  002392  500B               	movf	?_tolower^0,w,c
  1980  002394  0100               	movlb	0	; () banked
  1981  002396  6FD3               	movwf	vfpfcnvrt@ct& (0+255),b
  1982  002398                     
  1983                           ; BSR set to: 0
  1984                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1985  002398  51D3               	movf	vfpfcnvrt@ct& (0+255),w,b
  1986  00239A  B4D8               	btfsc	status,2,c
  1987  00239C  EFD2  F011         	goto	u8131
  1988  0023A0  EFD4  F011         	goto	u8130
  1989  0023A4                     u8131:
  1990  0023A4  EF10  F012         	goto	l7526
  1991  0023A8                     u8130:
  1992  0023A8                     
  1993                           ; BSR set to: 0
  1994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1995  0023A8  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1996  0023AC  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1997  0023B0  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  1998  0023B4  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  1999  0023B8  0E01               	movlw	1
  2000  0023BA  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2001  0023BC  0E00               	movlw	0
  2002  0023BE  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2003  0023C0  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2004  0023C4  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2005  0023C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2006  0023C8  6AF8               	clrf	tblptru,c
  2007  0023CA                     	endif
  2008  0023CA                     	if	0	;tblptru may be non-zero
  2009  0023CA                     	endif
  2010  0023CA  0008               	tblrd		*
  2011  0023CC  50F5               	movf	tablat,w,c
  2012  0023CE  6E0B               	movwf	tolower@c^0,c
  2013  0023D0  6A0C               	clrf	(tolower@c+1)^0,c
  2014  0023D2  EC04  F022         	call	_tolower	;wreg free
  2015  0023D6  500B               	movf	?_tolower^0,w,c
  2016  0023D8  0100               	movlb	0	; () banked
  2017  0023DA  6FD4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2018  0023DC                     
  2019                           ; BSR set to: 0
  2020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2021  0023DC  51D4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2022  0023DE  B4D8               	btfsc	status,2,c
  2023  0023E0  EFF4  F011         	goto	u8141
  2024  0023E4  EFF6  F011         	goto	u8140
  2025  0023E8                     u8141:
  2026  0023E8  EF10  F012         	goto	l7526
  2027  0023EC                     u8140:
  2028  0023EC                     
  2029                           ; BSR set to: 0
  2030                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2031  0023EC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2032  0023F0  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2033  0023F4  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  2034  0023F8  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  2035  0023FC  0E02               	movlw	2
  2036  0023FE  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2037  002400  0E00               	movlw	0
  2038  002402  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2039  002404  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2040  002408  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2041  00240C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2042  00240C  6AF8               	clrf	tblptru,c
  2043  00240E                     	endif
  2044  00240E                     	if	0	;tblptru may be non-zero
  2045  00240E                     	endif
  2046  00240E  0008               	tblrd		*
  2047  002410  50F5               	movf	tablat,w,c
  2048  002412  6E0B               	movwf	tolower@c^0,c
  2049  002414  6A0C               	clrf	(tolower@c+1)^0,c
  2050  002416  EC04  F022         	call	_tolower	;wreg free
  2051  00241A  500B               	movf	?_tolower^0,w,c
  2052  00241C  0100               	movlb	0	; () banked
  2053  00241E  6FD5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2054  002420                     l7526:
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2058  002420  0E66               	movlw	102
  2059  002422  19D3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2060  002424  A4D8               	btfss	status,2,c
  2061  002426  EF17  F012         	goto	u8151
  2062  00242A  EF19  F012         	goto	u8150
  2063  00242E                     u8151:
  2064  00242E  EF5A  F012         	goto	l7538
  2065  002432                     u8150:
  2066  002432                     
  2067                           ; BSR set to: 0
  2068                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2069  002432  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2070  002436  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2071  00243A  CFDE FFF6          	movff	postinc2,tblptrl
  2072  00243E  CFDD FFF7          	movff	postdec2,tblptrh
  2073  002442                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2074  002442  6AF8               	clrf	tblptru,c
  2075  002444                     	endif
  2076  002444                     	if	0	;tblptru may be non-zero
  2077  002444                     	endif
  2078  002444  0008               	tblrd		*
  2079  002446  CFF5 F0D6          	movff	tablat,vfpfcnvrt@c
  2080  00244A                     
  2081                           ; BSR set to: 0
  2082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2083  00244A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2084  00244E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2085  002452  2ADE               	incf	postinc2,f,c
  2086  002454  0E00               	movlw	0
  2087  002456  22DD               	addwfc	postdec2,f,c
  2088  002458                     
  2089                           ; BSR set to: 0
  2090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2091  002458  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2092  00245C  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2093  002460  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  2094  002464  0E04               	movlw	4
  2095  002466  26DE               	addwf	postinc2,f,c
  2096  002468  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  2097  00246C  0E00               	movlw	0
  2098  00246E  22DD               	addwfc	postdec2,f,c
  2099  002470  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2100  002474  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2101  002478  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f
  2102  00247C  CFDE F0D0          	movff	postinc2,vfpfcnvrt@f+1
  2103  002480  CFDE F0D1          	movff	postinc2,vfpfcnvrt@f+2
  2104  002484  CFDE F0D2          	movff	postinc2,vfpfcnvrt@f+3
  2105  002488                     
  2106                           ; BSR set to: 0
  2107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2108  002488  C0C1  F07D         	movff	vfpfcnvrt@fp,efgtoa@fp
  2109  00248C  C0C2  F07E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2110  002490  C0CF  F07F         	movff	vfpfcnvrt@f,efgtoa@f
  2111  002494  C0D0  F080         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2112  002498  C0D1  F081         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2113  00249C  C0D2  F082         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2114  0024A0  C0D6  F083         	movff	vfpfcnvrt@c,efgtoa@c
  2115  0024A4  EC4E  F008         	call	_efgtoa	;wreg free
  2116  0024A8  C07D  F0C1         	movff	?_efgtoa,?_vfpfcnvrt
  2117  0024AC  C07E  F0C2         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2118  0024B0  EF58  F013         	goto	l1613
  2119  0024B4                     l7538:
  2120                           
  2121                           ; BSR set to: 0
  2122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2123  0024B4  0ED3               	movlw	low vfpfcnvrt@ct
  2124  0024B6  6E05               	movwf	strncmp@_l^0,c
  2125  0024B8  0E00               	movlw	high vfpfcnvrt@ct
  2126  0024BA  6E06               	movwf	(strncmp@_l+1)^0,c
  2127  0024BC  0E98               	movlw	low STR_13
  2128  0024BE  6E07               	movwf	strncmp@_r^0,c
  2129  0024C0  0E10               	movlw	high STR_13
  2130  0024C2  6E08               	movwf	(strncmp@_r+1)^0,c
  2131  0024C4  0E00               	movlw	0
  2132  0024C6  6E0A               	movwf	(strncmp@n+1)^0,c
  2133  0024C8  0E02               	movlw	2
  2134  0024CA  6E09               	movwf	strncmp@n^0,c
  2135  0024CC  EC19  F01C         	call	_strncmp	;wreg free
  2136  0024D0  5005               	movf	?_strncmp^0,w,c
  2137  0024D2  1006               	iorwf	(?_strncmp+1)^0,w,c
  2138  0024D4  A4D8               	btfss	status,2,c
  2139  0024D6  EF6F  F012         	goto	u8161
  2140  0024DA  EF71  F012         	goto	u8160
  2141  0024DE                     u8161:
  2142  0024DE  EF03  F013         	goto	l7554
  2143  0024E2                     u8160:
  2144  0024E2                     
  2145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2146  0024E2  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2147  0024E6  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2148  0024EA  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  2149  0024EE  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  2150  0024F2  0E01               	movlw	1
  2151  0024F4  0100               	movlb	0	; () banked
  2152  0024F6  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2153  0024F8  0E00               	movlw	0
  2154  0024FA  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2155  0024FC  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2156  002500  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2157  002504                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2158  002504  6AF8               	clrf	tblptru,c
  2159  002506                     	endif
  2160  002506                     	if	0	;tblptru may be non-zero
  2161  002506                     	endif
  2162  002506  0008               	tblrd		*
  2163  002508  CFF5 F0D6          	movff	tablat,vfpfcnvrt@c
  2164  00250C  0EBF               	movlw	191
  2165  00250E  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  2166  002510  0EFF               	movlw	255
  2167  002512  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2168  002514  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2169  002518  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2170  00251C  CFDE FFF6          	movff	postinc2,tblptrl
  2171  002520  CFDD FFF7          	movff	postdec2,tblptrh
  2172  002524                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2173  002524  6AF8               	clrf	tblptru,c
  2174  002526                     	endif
  2175  002526                     	if	0	;tblptru may be non-zero
  2176  002526                     	endif
  2177  002526  0008               	tblrd		*
  2178  002528  50F5               	movf	tablat,w,c
  2179  00252A  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2180  00252C  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2181  00252E  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  2182  002530  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2183  002532  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2184  002534  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2185  002536  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2186  002538  E10A               	bnz	u8170
  2187  00253A  0E1A               	movlw	26
  2188  00253C  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2189  00253E  A0D8               	btfss	status,0,c
  2190  002540  EFA4  F012         	goto	u8171
  2191  002544  EFA7  F012         	goto	u8170
  2192  002548                     u8171:
  2193  002548  0E01               	movlw	1
  2194  00254A  EFA8  F012         	goto	u8180
  2195  00254E                     u8170:
  2196  00254E  0E00               	movlw	0
  2197  002550                     u8180:
  2198  002550  6FCD               	movwf	_vfpfcnvrt$2212& (0+255),b
  2199  002552  6BCE               	clrf	(_vfpfcnvrt$2212+1)& (0+255),b
  2200  002554                     
  2201                           ; BSR set to: 0
  2202  002554  51CD               	movf	_vfpfcnvrt$2212& (0+255),w,b
  2203  002556  11CE               	iorwf	(_vfpfcnvrt$2212+1)& (0+255),w,b
  2204  002558  B4D8               	btfsc	status,2,c
  2205  00255A  EFB1  F012         	goto	u8191
  2206  00255E  EFB3  F012         	goto	u8190
  2207  002562                     u8191:
  2208  002562  EFCD  F012         	goto	l7548
  2209  002566                     u8190:
  2210  002566                     
  2211                           ; BSR set to: 0
  2212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2213  002566  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2214  00256A  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2215  00256E  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  2216  002572  0E04               	movlw	4
  2217  002574  26DE               	addwf	postinc2,f,c
  2218  002576  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  2219  00257A  0E00               	movlw	0
  2220  00257C  22DD               	addwfc	postdec2,f,c
  2221  00257E  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2222  002582  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2223  002586  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f
  2224  00258A  CFDE F0D0          	movff	postinc2,vfpfcnvrt@f+1
  2225  00258E  CFDE F0D1          	movff	postinc2,vfpfcnvrt@f+2
  2226  002592  CFDE F0D2          	movff	postinc2,vfpfcnvrt@f+3
  2227                           
  2228                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2229  002596  EFE5  F012         	goto	l1620
  2230  00259A                     l7548:
  2231                           
  2232                           ; BSR set to: 0
  2233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2234  00259A  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2235  00259E  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2236  0025A2  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  2237  0025A6  0E04               	movlw	4
  2238  0025A8  26DE               	addwf	postinc2,f,c
  2239  0025AA  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  2240  0025AE  0E00               	movlw	0
  2241  0025B0  22DD               	addwfc	postdec2,f,c
  2242  0025B2  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2243  0025B6  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2244  0025BA  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f
  2245  0025BE  CFDE F0D0          	movff	postinc2,vfpfcnvrt@f+1
  2246  0025C2  CFDE F0D1          	movff	postinc2,vfpfcnvrt@f+2
  2247  0025C6  CFDE F0D2          	movff	postinc2,vfpfcnvrt@f+3
  2248  0025CA                     l1620:
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2252  0025CA  0E02               	movlw	2
  2253  0025CC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2254  0025D0  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2255  0025D4  26DE               	addwf	postinc2,f,c
  2256  0025D6  0E00               	movlw	0
  2257  0025D8  22DD               	addwfc	postdec2,f,c
  2258  0025DA                     
  2259                           ; BSR set to: 0
  2260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  2261  0025DA  C0C1  F07D         	movff	vfpfcnvrt@fp,efgtoa@fp
  2262  0025DE  C0C2  F07E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2263  0025E2  C0CF  F07F         	movff	vfpfcnvrt@f,efgtoa@f
  2264  0025E6  C0D0  F080         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2265  0025EA  C0D1  F081         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2266  0025EE  C0D2  F082         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2267  0025F2  C0D6  F083         	movff	vfpfcnvrt@c,efgtoa@c
  2268  0025F6  EC4E  F008         	call	_efgtoa	;wreg free
  2269  0025FA  C07D  F0C1         	movff	?_efgtoa,?_vfpfcnvrt
  2270  0025FE  C07E  F0C2         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2271  002602  EF58  F013         	goto	l1613
  2272  002606                     l7554:
  2273                           
  2274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2275  002606  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2276  00260A  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2277  00260E  CFDE FFF6          	movff	postinc2,tblptrl
  2278  002612  CFDD FFF7          	movff	postdec2,tblptrh
  2279  002616                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2280  002616  6AF8               	clrf	tblptru,c
  2281  002618                     	endif
  2282  002618                     	if	0	;tblptru may be non-zero
  2283  002618                     	endif
  2284  002618  0008               	tblrd		*
  2285  00261A  50F5               	movf	tablat,w,c
  2286  00261C  0A25               	xorlw	37
  2287  00261E  A4D8               	btfss	status,2,c
  2288  002620  EF14  F013         	goto	u8201
  2289  002624  EF16  F013         	goto	u8200
  2290  002628                     u8201:
  2291  002628  EF2E  F013         	goto	l7564
  2292  00262C                     u8200:
  2293  00262C                     
  2294                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2295  00262C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2296  002630  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2297  002634  2ADE               	incf	postinc2,f,c
  2298  002636  0E00               	movlw	0
  2299  002638  22DD               	addwfc	postdec2,f,c
  2300  00263A                     
  2301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2302  00263A  0E00               	movlw	0
  2303  00263C  6E08               	movwf	(fputc@c+1)^0,c
  2304  00263E  0E25               	movlw	37
  2305  002640  6E07               	movwf	fputc@c^0,c
  2306  002642  C0C1  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2307  002646  C0C2  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2308  00264A  EC60  F01F         	call	_fputc	;wreg free
  2309  00264E                     l7560:
  2310                           
  2311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2312  00264E  0E00               	movlw	0
  2313  002650  0100               	movlb	0	; () banked
  2314  002652  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2315  002654  0E01               	movlw	1
  2316  002656  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  2317  002658  EF58  F013         	goto	l1613
  2318  00265C                     l7564:
  2319                           
  2320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2321  00265C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2322  002660  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2323  002664  2ADE               	incf	postinc2,f,c
  2324  002666  0E00               	movlw	0
  2325  002668  22DD               	addwfc	postdec2,f,c
  2326  00266A                     
  2327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2328  00266A  0E00               	movlw	0
  2329  00266C  0100               	movlb	0	; () banked
  2330  00266E  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2331  002670  0E00               	movlw	0
  2332  002672  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  2333  002674  EF58  F013         	goto	l1613
  2334  002678                     l7570:
  2335                           
  2336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2337  002678  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2338  00267C  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2339  002680  CFDE FFF6          	movff	postinc2,tblptrl
  2340  002684  CFDD FFF7          	movff	postdec2,tblptrh
  2341  002688                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2342  002688  6AF8               	clrf	tblptru,c
  2343  00268A                     	endif
  2344  00268A                     	if	0	;tblptru may be non-zero
  2345  00268A                     	endif
  2346  00268A  0008               	tblrd		*
  2347  00268C  50F5               	movf	tablat,w,c
  2348  00268E  6E07               	movwf	fputc@c^0,c
  2349  002690  6A08               	clrf	(fputc@c+1)^0,c
  2350  002692  C0C1  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2351  002696  C0C2  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2352  00269A  EC60  F01F         	call	_fputc	;wreg free
  2353  00269E                     
  2354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2355  00269E  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2356  0026A2  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2357  0026A6  2ADE               	incf	postinc2,f,c
  2358  0026A8  0E00               	movlw	0
  2359  0026AA  22DD               	addwfc	postdec2,f,c
  2360  0026AC  EF27  F013         	goto	l7560
  2361  0026B0                     l1613:
  2362  0026B0  0012               	return		;funcret
  2363  0026B2                     __end_of_vfpfcnvrt:
  2364                           	callstack 0
  2365                           
  2366 ;; *************** function _strncmp *****************
  2367 ;; Defined at:
  2368 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  _l              2    4[COMRAM] PTR const unsigned char 
  2371 ;;		 -> vfpfcnvrt@ct(3), 
  2372 ;;  _r              2    6[COMRAM] PTR const unsigned char 
  2373 ;;		 -> STR_15(3), 
  2374 ;;  n               2    8[COMRAM] unsigned int 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  r               2   13[COMRAM] PTR const unsigned char 
  2377 ;;		 -> STR_15(3), 
  2378 ;;  l               2   11[COMRAM] PTR const unsigned char 
  2379 ;;		 -> vfpfcnvrt@ct(3), 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  2    4[COMRAM] int 
  2382 ;; Registers used:
  2383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2389 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2390 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2391 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2392 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2393 ;;Total ram usage:       11 bytes
  2394 ;; Hardware stack levels used: 1
  2395 ;; Hardware stack levels required when called: 4
  2396 ;; This function calls:
  2397 ;;		Nothing
  2398 ;; This function is called by:
  2399 ;;		_vfpfcnvrt
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text4
  2404  003832                     __ptext4:
  2405                           	callstack 0
  2406  003832                     _strncmp:
  2407                           	callstack 23
  2408  003832  C005  F00C         	movff	strncmp@_l,strncmp@l
  2409  003836  C006  F00D         	movff	strncmp@_l+1,strncmp@l+1
  2410  00383A  C007  F00E         	movff	strncmp@_r,strncmp@r
  2411  00383E  C008  F00F         	movff	strncmp@_r+1,strncmp@r+1
  2412  003842  0609               	decf	strncmp@n^0,f,c
  2413  003844  A0D8               	btfss	status,0,c
  2414  003846  060A               	decf	(strncmp@n+1)^0,f,c
  2415  003848  2809               	incf	strncmp@n^0,w,c
  2416  00384A  E106               	bnz	u8021
  2417  00384C  280A               	incf	(strncmp@n+1)^0,w,c
  2418  00384E  A4D8               	btfss	status,2,c
  2419  003850  EF2C  F01C         	goto	u8021
  2420  003854  EF2E  F01C         	goto	u8020
  2421  003858                     u8021:
  2422  003858  EF3B  F01C         	goto	l7476
  2423  00385C                     u8020:
  2424  00385C  0E00               	movlw	0
  2425  00385E  6E06               	movwf	(?_strncmp+1)^0,c
  2426  003860  0E00               	movlw	0
  2427  003862  6E05               	movwf	?_strncmp^0,c
  2428  003864  EF86  F01C         	goto	l1738
  2429  003868                     l7474:
  2430  003868  4A0C               	infsnz	strncmp@l^0,f,c
  2431  00386A  2A0D               	incf	(strncmp@l+1)^0,f,c
  2432  00386C  4A0E               	infsnz	strncmp@r^0,f,c
  2433  00386E  2A0F               	incf	(strncmp@r+1)^0,f,c
  2434  003870  0609               	decf	strncmp@n^0,f,c
  2435  003872  A0D8               	btfss	status,0,c
  2436  003874  060A               	decf	(strncmp@n+1)^0,f,c
  2437  003876                     l7476:
  2438  003876  C00C  FFD9         	movff	strncmp@l,fsr2l
  2439  00387A  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2440  00387E  50DF               	movf	indf2,w,c
  2441  003880  B4D8               	btfsc	status,2,c
  2442  003882  EF45  F01C         	goto	u8031
  2443  003886  EF47  F01C         	goto	u8030
  2444  00388A                     u8031:
  2445  00388A  EF74  F01C         	goto	l7484
  2446  00388E                     u8030:
  2447  00388E  C00E  FFF6         	movff	strncmp@r,tblptrl
  2448  003892  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2449  003896                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2450  003896  6AF8               	clrf	tblptru,c
  2451  003898                     	endif
  2452  003898                     	if	0	;tblptru may be non-zero
  2453  003898                     	endif
  2454  003898  0008               	tblrd		*
  2455  00389A  50F5               	movf	tablat,w,c
  2456  00389C  0900               	iorlw	0
  2457  00389E  B4D8               	btfsc	status,2,c
  2458  0038A0  EF54  F01C         	goto	u8041
  2459  0038A4  EF56  F01C         	goto	u8040
  2460  0038A8                     u8041:
  2461  0038A8  EF74  F01C         	goto	l7484
  2462  0038AC                     u8040:
  2463  0038AC  5009               	movf	strncmp@n^0,w,c
  2464  0038AE  100A               	iorwf	(strncmp@n+1)^0,w,c
  2465  0038B0  B4D8               	btfsc	status,2,c
  2466  0038B2  EF5D  F01C         	goto	u8051
  2467  0038B6  EF5F  F01C         	goto	u8050
  2468  0038BA                     u8051:
  2469  0038BA  EF74  F01C         	goto	l7484
  2470  0038BE                     u8050:
  2471  0038BE  C00C  FFD9         	movff	strncmp@l,fsr2l
  2472  0038C2  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2473  0038C6  50DF               	movf	indf2,w,c
  2474  0038C8  6E0B               	movwf	??_strncmp^0,c
  2475  0038CA  C00E  FFF6         	movff	strncmp@r,tblptrl
  2476  0038CE  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2477  0038D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2478  0038D2  6AF8               	clrf	tblptru,c
  2479  0038D4                     	endif
  2480  0038D4                     	if	0	;tblptru may be non-zero
  2481  0038D4                     	endif
  2482  0038D4  0008               	tblrd		*
  2483  0038D6  50F5               	movf	tablat,w,c
  2484  0038D8  180B               	xorwf	??_strncmp^0,w,c
  2485  0038DA  B4D8               	btfsc	status,2,c
  2486  0038DC  EF72  F01C         	goto	u8061
  2487  0038E0  EF74  F01C         	goto	u8060
  2488  0038E4                     u8061:
  2489  0038E4  EF34  F01C         	goto	l7474
  2490  0038E8                     u8060:
  2491  0038E8                     l7484:
  2492  0038E8  C00C  FFD9         	movff	strncmp@l,fsr2l
  2493  0038EC  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2494  0038F0  50DF               	movf	indf2,w,c
  2495  0038F2  6E0B               	movwf	??_strncmp^0,c
  2496  0038F4  C00E  FFF6         	movff	strncmp@r,tblptrl
  2497  0038F8  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2498  0038FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2499  0038FC  6AF8               	clrf	tblptru,c
  2500  0038FE                     	endif
  2501  0038FE                     	if	0	;tblptru may be non-zero
  2502  0038FE                     	endif
  2503  0038FE  0008               	tblrd		*
  2504  003900  50F5               	movf	tablat,w,c
  2505  003902  5C0B               	subwf	??_strncmp^0,w,c
  2506  003904  6E05               	movwf	?_strncmp^0,c
  2507  003906  6A06               	clrf	(?_strncmp+1)^0,c
  2508  003908  A0D8               	btfss	status,0,c
  2509  00390A  0606               	decf	(?_strncmp+1)^0,f,c
  2510  00390C                     l1738:
  2511  00390C  0012               	return		;funcret
  2512  00390E                     __end_of_strncmp:
  2513                           	callstack 0
  2514                           
  2515 ;; *************** function _efgtoa *****************
  2516 ;; Defined at:
  2517 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  2520 ;;		 -> NULL(0), 
  2521 ;;  f               4   31[BANK0 ] PTR struct _IO_FILE
  2522 ;;  c               1   35[BANK0 ] unsigned char 
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  u               4   93[BANK0 ] unsigned char 
  2525 ;;  g               4   85[BANK0 ] unsigned char 
  2526 ;;  l               4   79[BANK0 ] unsigned char 
  2527 ;;  h               4   75[BANK0 ] unsigned char 
  2528 ;;  ou              4   61[BANK0 ] unsigned char 
  2529 ;;  n               2   91[BANK0 ] int 
  2530 ;;  e               2   89[BANK0 ] int 
  2531 ;;  i               2   83[BANK0 ] int 
  2532 ;;  w               2   71[BANK0 ] int 
  2533 ;;  p               2   69[BANK0 ] int 
  2534 ;;  sign            2   67[BANK0 ] int 
  2535 ;;  d               2   65[BANK0 ] int 
  2536 ;;  m               2   59[BANK0 ] int 
  2537 ;;  ne              2   57[BANK0 ] int 
  2538 ;;  pp              2   55[BANK0 ] int 
  2539 ;;  t               2   53[BANK0 ] int 
  2540 ;;  mode            1   74[BANK0 ] unsigned char 
  2541 ;;  nmode           1   73[BANK0 ] unsigned char 
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  2   29[BANK0 ] int 
  2544 ;; Registers used:
  2545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2551 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2552 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2553 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;Total ram usage:       68 bytes
  2556 ;; Hardware stack levels used: 1
  2557 ;; Hardware stack levels required when called: 9
  2558 ;; This function calls:
  2559 ;;		___awdiv
  2560 ;;		___awmod
  2561 ;;		___fladd
  2562 ;;		___fldiv
  2563 ;;		___fleq
  2564 ;;		___flge
  2565 ;;		___flmul
  2566 ;;		___flneg
  2567 ;;		___flsub
  2568 ;;		___fltol
  2569 ;;		___fpclassifyf
  2570 ;;		_floorf
  2571 ;;		_isupper
  2572 ;;		_pad
  2573 ;;		_strcpy
  2574 ;;		_tolower
  2575 ;; This function is called by:
  2576 ;;		_vfpfcnvrt
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text5
  2581  00109C                     __ptext5:
  2582                           	callstack 0
  2583  00109C                     _efgtoa:
  2584                           	callstack 18
  2585  00109C                     
  2586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2587  00109C  0E00               	movlw	0
  2588  00109E  0100               	movlb	0	; () banked
  2589  0010A0  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  2590  0010A2  0E00               	movlw	0
  2591  0010A4  6FA3               	movwf	efgtoa@sign& (0+255),b
  2592  0010A6                     
  2593                           ; BSR set to: 0
  2594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2595  0010A6  C07F  F0B5         	movff	efgtoa@f,efgtoa@g
  2596  0010AA  C080  F0B6         	movff	efgtoa@f+1,efgtoa@g+1
  2597  0010AE  C081  F0B7         	movff	efgtoa@f+2,efgtoa@g+2
  2598  0010B2  C082  F0B8         	movff	efgtoa@f+3,efgtoa@g+3
  2599  0010B6                     
  2600                           ; BSR set to: 0
  2601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2602  0010B6  BFB8               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2603  0010B8  EF62  F008         	goto	u7410
  2604  0010BC  EF60  F008         	goto	u7411
  2605  0010C0                     u7411:
  2606  0010C0  EF78  F008         	goto	l7128
  2607  0010C4                     u7410:
  2608  0010C4                     
  2609                           ; BSR set to: 0
  2610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2611  0010C4  0E00               	movlw	0
  2612  0010C6  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  2613  0010C8  0E01               	movlw	1
  2614  0010CA  6FA3               	movwf	efgtoa@sign& (0+255),b
  2615  0010CC                     
  2616                           ; BSR set to: 0
  2617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2618  0010CC  C0B5  F005         	movff	efgtoa@g,___flneg@f1
  2619  0010D0  C0B6  F006         	movff	efgtoa@g+1,___flneg@f1+1
  2620  0010D4  C0B7  F007         	movff	efgtoa@g+2,___flneg@f1+2
  2621  0010D8  C0B8  F008         	movff	efgtoa@g+3,___flneg@f1+3
  2622  0010DC  EC02  F024         	call	___flneg	;wreg free
  2623  0010E0  C005  F0B5         	movff	?___flneg,efgtoa@g
  2624  0010E4  C006  F0B6         	movff	?___flneg+1,efgtoa@g+1
  2625  0010E8  C007  F0B7         	movff	?___flneg+2,efgtoa@g+2
  2626  0010EC  C008  F0B8         	movff	?___flneg+3,efgtoa@g+3
  2627  0010F0                     l7128:
  2628                           
  2629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2630  0010F0  0E00               	movlw	0
  2631  0010F2  0100               	movlb	0	; () banked
  2632  0010F4  6FBC               	movwf	(efgtoa@n+1)& (0+255),b
  2633  0010F6  0E00               	movlw	0
  2634  0010F8  6FBB               	movwf	efgtoa@n& (0+255),b
  2635  0010FA                     
  2636                           ; BSR set to: 0
  2637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2638  0010FA  C0E9  F0A7         	movff	_width,efgtoa@w
  2639  0010FE  C0EA  F0A8         	movff	_width+1,efgtoa@w+1
  2640  001102                     
  2641                           ; BSR set to: 0
  2642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2643  001102  51A3               	movf	efgtoa@sign& (0+255),w,b
  2644  001104  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2645  001106  A4D8               	btfss	status,2,c
  2646  001108  EF88  F008         	goto	u7421
  2647  00110C  EF8A  F008         	goto	u7420
  2648  001110                     u7421:
  2649  001110  EF91  F008         	goto	l7136
  2650  001114                     u7420:
  2651  001114                     
  2652                           ; BSR set to: 0
  2653  001114  A5ED               	btfss	_flags& (0+255),2,b
  2654  001116  EF8F  F008         	goto	u7431
  2655  00111A  EF91  F008         	goto	u7430
  2656  00111E                     u7431:
  2657  00111E  EFAB  F008         	goto	l7148
  2658  001122                     u7430:
  2659  001122                     l7136:
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2663  001122  51A3               	movf	efgtoa@sign& (0+255),w,b
  2664  001124  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2665  001126  A4D8               	btfss	status,2,c
  2666  001128  EF98  F008         	goto	u7441
  2667  00112C  EF9A  F008         	goto	u7440
  2668  001130                     u7441:
  2669  001130  EFA0  F008         	goto	l7140
  2670  001134                     u7440:
  2671  001134                     
  2672                           ; BSR set to: 0
  2673  001134  0E00               	movlw	0
  2674  001136  6F8A               	movwf	(_efgtoa$2182+1)& (0+255),b
  2675  001138  0E2B               	movlw	43
  2676  00113A  6F89               	movwf	_efgtoa$2182& (0+255),b
  2677  00113C  EFA4  F008         	goto	l7142
  2678  001140                     l7140:
  2679                           
  2680                           ; BSR set to: 0
  2681  001140  0E00               	movlw	0
  2682  001142  6F8A               	movwf	(_efgtoa$2182+1)& (0+255),b
  2683  001144  0E2D               	movlw	45
  2684  001146  6F89               	movwf	_efgtoa$2182& (0+255),b
  2685  001148                     l7142:
  2686                           
  2687                           ; BSR set to: 0
  2688  001148  C089  F15D         	movff	_efgtoa$2182,_dbuf
  2689  00114C                     
  2690                           ; BSR set to: 0
  2691                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2692  00114C  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  2693  00114E  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  2694  001150                     
  2695                           ; BSR set to: 0
  2696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  2697  001150  07A7               	decf	efgtoa@w& (0+255),f,b
  2698  001152  A0D8               	btfss	status,0,c
  2699  001154  07A8               	decf	(efgtoa@w+1)& (0+255),f,b
  2700  001156                     l7148:
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2704  001156  C0B5  F005         	movff	efgtoa@g,___fpclassifyf@x
  2705  00115A  C0B6  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2706  00115E  C0B7  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2707  001162  C0B8  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2708  001166  EC9A  F01B         	call	___fpclassifyf	;wreg free
  2709  00116A  0405               	decf	?___fpclassifyf^0,w,c
  2710  00116C  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2711  00116E  A4D8               	btfss	status,2,c
  2712  001170  EFBC  F008         	goto	u7451
  2713  001174  EFBE  F008         	goto	u7450
  2714  001178                     u7451:
  2715  001178  EF15  F009         	goto	l7166
  2716  00117C                     u7450:
  2717  00117C  0EBF               	movlw	191
  2718  00117E  0100               	movlb	0	; () banked
  2719  001180  6F84               	movwf	??_efgtoa& (0+255),b
  2720  001182  0EFF               	movlw	255
  2721  001184  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  2722  001186  5183               	movf	efgtoa@c& (0+255),w,b
  2723  001188  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  2724  00118A  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  2725  00118C  5184               	movf	??_efgtoa& (0+255),w,b
  2726  00118E  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  2727  001190  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  2728  001192  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2729  001194  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  2730  001196  E10A               	bnz	u7460
  2731  001198  0E1A               	movlw	26
  2732  00119A  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  2733  00119C  A0D8               	btfss	status,0,c
  2734  00119E  EFD3  F008         	goto	u7461
  2735  0011A2  EFD6  F008         	goto	u7460
  2736  0011A6                     u7461:
  2737  0011A6  0E01               	movlw	1
  2738  0011A8  EFD7  F008         	goto	u7470
  2739  0011AC                     u7460:
  2740  0011AC  0E00               	movlw	0
  2741  0011AE                     u7470:
  2742  0011AE  6F8B               	movwf	_efgtoa$2183& (0+255),b
  2743  0011B0  6B8C               	clrf	(_efgtoa$2183+1)& (0+255),b
  2744  0011B2                     
  2745                           ; BSR set to: 0
  2746  0011B2  518B               	movf	_efgtoa$2183& (0+255),w,b
  2747  0011B4  118C               	iorwf	(_efgtoa$2183+1)& (0+255),w,b
  2748  0011B6  B4D8               	btfsc	status,2,c
  2749  0011B8  EFE0  F008         	goto	u7481
  2750  0011BC  EFE2  F008         	goto	u7480
  2751  0011C0                     u7481:
  2752  0011C0  EFF0  F008         	goto	l7158
  2753  0011C4                     u7480:
  2754  0011C4                     
  2755                           ; BSR set to: 0
  2756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2757  0011C4  0E5D               	movlw	low _dbuf
  2758  0011C6  25BB               	addwf	efgtoa@n& (0+255),w,b
  2759  0011C8  6E05               	movwf	strcpy@dest^0,c
  2760  0011CA  0E01               	movlw	high _dbuf
  2761  0011CC  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2762  0011CE  6E06               	movwf	(strcpy@dest+1)^0,c
  2763  0011D0  0E88               	movlw	low STR_5
  2764  0011D2  6E07               	movwf	strcpy@src^0,c
  2765  0011D4  0E10               	movlw	high STR_5
  2766  0011D6  6E08               	movwf	(strcpy@src+1)^0,c
  2767  0011D8  EC34  F022         	call	_strcpy	;wreg free
  2768                           
  2769                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2770  0011DC  EFFC  F008         	goto	l7160
  2771  0011E0                     l7158:
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2775  0011E0  0E5D               	movlw	low _dbuf
  2776  0011E2  25BB               	addwf	efgtoa@n& (0+255),w,b
  2777  0011E4  6E05               	movwf	strcpy@dest^0,c
  2778  0011E6  0E01               	movlw	high _dbuf
  2779  0011E8  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2780  0011EA  6E06               	movwf	(strcpy@dest+1)^0,c
  2781  0011EC  0E90               	movlw	low STR_6
  2782  0011EE  6E07               	movwf	strcpy@src^0,c
  2783  0011F0  0E10               	movlw	high STR_6
  2784  0011F2  6E08               	movwf	(strcpy@src+1)^0,c
  2785  0011F4  EC34  F022         	call	_strcpy	;wreg free
  2786  0011F8                     l7160:
  2787                           
  2788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2789  0011F8  0100               	movlb	0	; () banked
  2790  0011FA  0EFD               	movlw	253
  2791  0011FC  27A7               	addwf	efgtoa@w& (0+255),f,b
  2792  0011FE  0EFF               	movlw	255
  2793  001200  23A8               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2794  001202                     
  2795                           ; BSR set to: 0
  2796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2797  001202  C07D  F017         	movff	efgtoa@fp,pad@fp
  2798  001206  C07E  F018         	movff	efgtoa@fp+1,pad@fp+1
  2799  00120A  0E5D               	movlw	low _dbuf
  2800  00120C  6E19               	movwf	pad@buf^0,c
  2801  00120E  0E01               	movlw	high _dbuf
  2802  001210  6E1A               	movwf	(pad@buf+1)^0,c
  2803  001212  C0A7  F01B         	movff	efgtoa@w,pad@p
  2804  001216  C0A8  F01C         	movff	efgtoa@w+1,pad@p+1
  2805  00121A  EC87  F01C         	call	_pad	;wreg free
  2806  00121E  C017  F07D         	movff	?_pad,?_efgtoa
  2807  001222  C018  F07E         	movff	?_pad+1,?_efgtoa+1
  2808  001226  EFA1  F00E         	goto	l1521
  2809  00122A                     l7166:
  2810                           
  2811                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2812  00122A  C0B5  F005         	movff	efgtoa@g,___fpclassifyf@x
  2813  00122E  C0B6  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2814  001232  C0B7  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2815  001236  C0B8  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2816  00123A  EC9A  F01B         	call	___fpclassifyf	;wreg free
  2817  00123E  5005               	movf	?___fpclassifyf^0,w,c
  2818  001240  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2819  001242  A4D8               	btfss	status,2,c
  2820  001244  EF26  F009         	goto	u7491
  2821  001248  EF28  F009         	goto	u7490
  2822  00124C                     u7491:
  2823  00124C  EF7F  F009         	goto	l7184
  2824  001250                     u7490:
  2825  001250  0EBF               	movlw	191
  2826  001252  0100               	movlb	0	; () banked
  2827  001254  6F84               	movwf	??_efgtoa& (0+255),b
  2828  001256  0EFF               	movlw	255
  2829  001258  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  2830  00125A  5183               	movf	efgtoa@c& (0+255),w,b
  2831  00125C  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  2832  00125E  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  2833  001260  5184               	movf	??_efgtoa& (0+255),w,b
  2834  001262  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  2835  001264  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  2836  001266  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2837  001268  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  2838  00126A  E10A               	bnz	u7500
  2839  00126C  0E1A               	movlw	26
  2840  00126E  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  2841  001270  A0D8               	btfss	status,0,c
  2842  001272  EF3D  F009         	goto	u7501
  2843  001276  EF40  F009         	goto	u7500
  2844  00127A                     u7501:
  2845  00127A  0E01               	movlw	1
  2846  00127C  EF41  F009         	goto	u7510
  2847  001280                     u7500:
  2848  001280  0E00               	movlw	0
  2849  001282                     u7510:
  2850  001282  6F8D               	movwf	_efgtoa$2188& (0+255),b
  2851  001284  6B8E               	clrf	(_efgtoa$2188+1)& (0+255),b
  2852  001286                     
  2853                           ; BSR set to: 0
  2854  001286  518D               	movf	_efgtoa$2188& (0+255),w,b
  2855  001288  118E               	iorwf	(_efgtoa$2188+1)& (0+255),w,b
  2856  00128A  B4D8               	btfsc	status,2,c
  2857  00128C  EF4A  F009         	goto	u7521
  2858  001290  EF4C  F009         	goto	u7520
  2859  001294                     u7521:
  2860  001294  EF5A  F009         	goto	l7176
  2861  001298                     u7520:
  2862  001298                     
  2863                           ; BSR set to: 0
  2864                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2865  001298  0E5D               	movlw	low _dbuf
  2866  00129A  25BB               	addwf	efgtoa@n& (0+255),w,b
  2867  00129C  6E05               	movwf	strcpy@dest^0,c
  2868  00129E  0E01               	movlw	high _dbuf
  2869  0012A0  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2870  0012A2  6E06               	movwf	(strcpy@dest+1)^0,c
  2871  0012A4  0E8C               	movlw	low STR_9
  2872  0012A6  6E07               	movwf	strcpy@src^0,c
  2873  0012A8  0E10               	movlw	high STR_9
  2874  0012AA  6E08               	movwf	(strcpy@src+1)^0,c
  2875  0012AC  EC34  F022         	call	_strcpy	;wreg free
  2876                           
  2877                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2878  0012B0  EF66  F009         	goto	l7178
  2879  0012B4                     l7176:
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2883  0012B4  0E5D               	movlw	low _dbuf
  2884  0012B6  25BB               	addwf	efgtoa@n& (0+255),w,b
  2885  0012B8  6E05               	movwf	strcpy@dest^0,c
  2886  0012BA  0E01               	movlw	high _dbuf
  2887  0012BC  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2888  0012BE  6E06               	movwf	(strcpy@dest+1)^0,c
  2889  0012C0  0E94               	movlw	low STR_10
  2890  0012C2  6E07               	movwf	strcpy@src^0,c
  2891  0012C4  0E10               	movlw	high STR_10
  2892  0012C6  6E08               	movwf	(strcpy@src+1)^0,c
  2893  0012C8  EC34  F022         	call	_strcpy	;wreg free
  2894  0012CC                     l7178:
  2895                           
  2896                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2897  0012CC  0100               	movlb	0	; () banked
  2898  0012CE  0EFD               	movlw	253
  2899  0012D0  27A7               	addwf	efgtoa@w& (0+255),f,b
  2900  0012D2  0EFF               	movlw	255
  2901  0012D4  23A8               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2902  0012D6                     
  2903                           ; BSR set to: 0
  2904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2905  0012D6  C07D  F017         	movff	efgtoa@fp,pad@fp
  2906  0012DA  C07E  F018         	movff	efgtoa@fp+1,pad@fp+1
  2907  0012DE  0E5D               	movlw	low _dbuf
  2908  0012E0  6E19               	movwf	pad@buf^0,c
  2909  0012E2  0E01               	movlw	high _dbuf
  2910  0012E4  6E1A               	movwf	(pad@buf+1)^0,c
  2911  0012E6  C0A7  F01B         	movff	efgtoa@w,pad@p
  2912  0012EA  C0A8  F01C         	movff	efgtoa@w+1,pad@p+1
  2913  0012EE  EC87  F01C         	call	_pad	;wreg free
  2914  0012F2  C017  F07D         	movff	?_pad,?_efgtoa
  2915  0012F6  C018  F07E         	movff	?_pad+1,?_efgtoa+1
  2916  0012FA  EFA1  F00E         	goto	l1521
  2917  0012FE                     l7184:
  2918                           
  2919                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2920  0012FE  0E00               	movlw	0
  2921  001300  0100               	movlb	0	; () banked
  2922  001302  6FBD               	movwf	efgtoa@u& (0+255),b
  2923  001304  0E00               	movlw	0
  2924  001306  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  2925  001308  0E80               	movlw	128
  2926  00130A  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  2927  00130C  0E3F               	movlw	63
  2928  00130E  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  2929                           
  2930                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2931  001310  0E00               	movlw	0
  2932  001312  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  2933  001314  0E00               	movlw	0
  2934  001316  6FB9               	movwf	efgtoa@e& (0+255),b
  2935  001318                     
  2936                           ; BSR set to: 0
  2937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2938  001318  C0B5  F005         	movff	efgtoa@g,___fleq@ff1
  2939  00131C  C0B6  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2940  001320  C0B7  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2941  001324  C0B8  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2942  001328  0E00               	movlw	0
  2943  00132A  6E09               	movwf	___fleq@ff2^0,c
  2944  00132C  0E00               	movlw	0
  2945  00132E  6E0A               	movwf	(___fleq@ff2+1)^0,c
  2946  001330  0E00               	movlw	0
  2947  001332  6E0B               	movwf	(___fleq@ff2+2)^0,c
  2948  001334  0E00               	movlw	0
  2949  001336  6E0C               	movwf	(___fleq@ff2+3)^0,c
  2950  001338  EC64  F01E         	call	___fleq	;wreg free
  2951  00133C  B0D8               	btfsc	status,0,c
  2952  00133E  EFA3  F009         	goto	u7531
  2953  001342  EFA5  F009         	goto	u7530
  2954  001346                     u7531:
  2955  001346  EF2A  F00A         	goto	l7202
  2956  00134A                     u7530:
  2957  00134A  EFC4  F009         	goto	l7194
  2958  00134E                     l7190:
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2962  00134E  C0BD  F04C         	movff	efgtoa@u,___flmul@b
  2963  001352  C0BE  F04D         	movff	efgtoa@u+1,___flmul@b+1
  2964  001356  C0BF  F04E         	movff	efgtoa@u+2,___flmul@b+2
  2965  00135A  C0C0  F04F         	movff	efgtoa@u+3,___flmul@b+3
  2966  00135E  0E00               	movlw	0
  2967  001360  6E50               	movwf	___flmul@a^0,c
  2968  001362  0E00               	movlw	0
  2969  001364  6E51               	movwf	(___flmul@a+1)^0,c
  2970  001366  0E20               	movlw	32
  2971  001368  6E52               	movwf	(___flmul@a+2)^0,c
  2972  00136A  0E41               	movlw	65
  2973  00136C  6E53               	movwf	(___flmul@a+3)^0,c
  2974  00136E  EC59  F013         	call	___flmul	;wreg free
  2975  001372  C04C  F0BD         	movff	?___flmul,efgtoa@u
  2976  001376  C04D  F0BE         	movff	?___flmul+1,efgtoa@u+1
  2977  00137A  C04E  F0BF         	movff	?___flmul+2,efgtoa@u+2
  2978  00137E  C04F  F0C0         	movff	?___flmul+3,efgtoa@u+3
  2979  001382                     
  2980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2981  001382  0100               	movlb	0	; () banked
  2982  001384  4BB9               	infsnz	efgtoa@e& (0+255),f,b
  2983  001386  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
  2984  001388                     l7194:
  2985                           
  2986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2987  001388  C0B5  F071         	movff	efgtoa@g,___flge@ff1
  2988  00138C  C0B6  F072         	movff	efgtoa@g+1,___flge@ff1+1
  2989  001390  C0B7  F073         	movff	efgtoa@g+2,___flge@ff1+2
  2990  001394  C0B8  F074         	movff	efgtoa@g+3,___flge@ff1+3
  2991  001398  0E00               	movlw	0
  2992  00139A  6E50               	movwf	___flmul@a^0,c
  2993  00139C  0E00               	movlw	0
  2994  00139E  6E51               	movwf	(___flmul@a+1)^0,c
  2995  0013A0  0E20               	movlw	32
  2996  0013A2  6E52               	movwf	(___flmul@a+2)^0,c
  2997  0013A4  0E41               	movlw	65
  2998  0013A6  6E53               	movwf	(___flmul@a+3)^0,c
  2999  0013A8  C0BD  F04C         	movff	efgtoa@u,___flmul@b
  3000  0013AC  C0BE  F04D         	movff	efgtoa@u+1,___flmul@b+1
  3001  0013B0  C0BF  F04E         	movff	efgtoa@u+2,___flmul@b+2
  3002  0013B4  C0C0  F04F         	movff	efgtoa@u+3,___flmul@b+3
  3003  0013B8  EC59  F013         	call	___flmul	;wreg free
  3004  0013BC  C04C  F075         	movff	?___flmul,___flge@ff2
  3005  0013C0  C04D  F076         	movff	?___flmul+1,___flge@ff2+1
  3006  0013C4  C04E  F077         	movff	?___flmul+2,___flge@ff2+2
  3007  0013C8  C04F  F078         	movff	?___flmul+3,___flge@ff2+3
  3008  0013CC  EC17  F01B         	call	___flge	;wreg free
  3009  0013D0  0100               	movlb	0	; () banked
  3010  0013D2  B0D8               	btfsc	status,0,c
  3011  0013D4  EFEE  F009         	goto	u7541
  3012  0013D8  EFF0  F009         	goto	u7540
  3013  0013DC                     u7541:
  3014  0013DC  EFA7  F009         	goto	l7190
  3015  0013E0                     u7540:
  3016  0013E0  EF10  F00A         	goto	l7200
  3017  0013E4                     l7196:
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3021  0013E4  C0BD  F033         	movff	efgtoa@u,___fldiv@b
  3022  0013E8  C0BE  F034         	movff	efgtoa@u+1,___fldiv@b+1
  3023  0013EC  C0BF  F035         	movff	efgtoa@u+2,___fldiv@b+2
  3024  0013F0  C0C0  F036         	movff	efgtoa@u+3,___fldiv@b+3
  3025  0013F4  0E00               	movlw	0
  3026  0013F6  6E37               	movwf	___fldiv@a^0,c
  3027  0013F8  0E00               	movlw	0
  3028  0013FA  6E38               	movwf	(___fldiv@a+1)^0,c
  3029  0013FC  0E20               	movlw	32
  3030  0013FE  6E39               	movwf	(___fldiv@a+2)^0,c
  3031  001400  0E41               	movlw	65
  3032  001402  6E3A               	movwf	(___fldiv@a+3)^0,c
  3033  001404  EC6F  F015         	call	___fldiv	;wreg free
  3034  001408  C033  F0BD         	movff	?___fldiv,efgtoa@u
  3035  00140C  C034  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  3036  001410  C035  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  3037  001414  C036  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  3038  001418                     
  3039                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3040  001418  0100               	movlb	0	; () banked
  3041  00141A  07B9               	decf	efgtoa@e& (0+255),f,b
  3042  00141C  A0D8               	btfss	status,0,c
  3043  00141E  07BA               	decf	(efgtoa@e+1)& (0+255),f,b
  3044  001420                     l7200:
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3048  001420  C0B5  F071         	movff	efgtoa@g,___flge@ff1
  3049  001424  C0B6  F072         	movff	efgtoa@g+1,___flge@ff1+1
  3050  001428  C0B7  F073         	movff	efgtoa@g+2,___flge@ff1+2
  3051  00142C  C0B8  F074         	movff	efgtoa@g+3,___flge@ff1+3
  3052  001430  C0BD  F075         	movff	efgtoa@u,___flge@ff2
  3053  001434  C0BE  F076         	movff	efgtoa@u+1,___flge@ff2+1
  3054  001438  C0BF  F077         	movff	efgtoa@u+2,___flge@ff2+2
  3055  00143C  C0C0  F078         	movff	efgtoa@u+3,___flge@ff2+3
  3056  001440  EC17  F01B         	call	___flge	;wreg free
  3057  001444  0100               	movlb	0	; () banked
  3058  001446  A0D8               	btfss	status,0,c
  3059  001448  EF28  F00A         	goto	u7551
  3060  00144C  EF2A  F00A         	goto	u7550
  3061  001450                     u7551:
  3062  001450  EFF2  F009         	goto	l7196
  3063  001454                     u7550:
  3064  001454                     l7202:
  3065                           
  3066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3067  001454  C083  F00B         	movff	efgtoa@c,tolower@c
  3068  001458  6A0C               	clrf	(tolower@c+1)^0,c
  3069  00145A  EC04  F022         	call	_tolower	;wreg free
  3070  00145E  500B               	movf	?_tolower^0,w,c
  3071  001460  0100               	movlb	0	; () banked
  3072  001462  6FAA               	movwf	efgtoa@mode& (0+255),b
  3073  001464                     
  3074                           ; BSR set to: 0
  3075                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3076  001464  C0AA  F0A9         	movff	efgtoa@mode,efgtoa@nmode
  3077  001468                     
  3078                           ; BSR set to: 0
  3079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3080  001468  0E67               	movlw	103
  3081  00146A  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  3082  00146C  A4D8               	btfss	status,2,c
  3083  00146E  EF3B  F00A         	goto	u7561
  3084  001472  EF3D  F00A         	goto	u7560
  3085  001476                     u7561:
  3086  001476  EF63  F00A         	goto	l7216
  3087  00147A                     u7560:
  3088  00147A                     
  3089                           ; BSR set to: 0
  3090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3091  00147A  51EB               	movf	_prec& (0+255),w,b
  3092  00147C  11EC               	iorwf	(_prec+1)& (0+255),w,b
  3093  00147E  A4D8               	btfss	status,2,c
  3094  001480  EF44  F00A         	goto	u7571
  3095  001484  EF46  F00A         	goto	u7570
  3096  001488                     u7571:
  3097  001488  EF4A  F00A         	goto	l7212
  3098  00148C                     u7570:
  3099  00148C                     
  3100                           ; BSR set to: 0
  3101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3102  00148C  0E00               	movlw	0
  3103  00148E  6FEC               	movwf	(_prec+1)& (0+255),b
  3104  001490  0E01               	movlw	1
  3105  001492  6FEB               	movwf	_prec& (0+255),b
  3106  001494                     l7212:
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3110  001494  BFEC               	btfsc	(_prec+1)& (0+255),7,b
  3111  001496  EF57  F00A         	goto	u7580
  3112  00149A  51EC               	movf	(_prec+1)& (0+255),w,b
  3113  00149C  E106               	bnz	u7581
  3114  00149E  05EB               	decf	_prec& (0+255),w,b
  3115  0014A0  B0D8               	btfsc	status,0,c
  3116  0014A2  EF55  F00A         	goto	u7581
  3117  0014A6  EF57  F00A         	goto	u7580
  3118  0014AA                     u7581:
  3119  0014AA  EF5D  F00A         	goto	l1539
  3120  0014AE                     u7580:
  3121  0014AE                     l7214:
  3122                           
  3123                           ; BSR set to: 0
  3124  0014AE  0E00               	movlw	0
  3125  0014B0  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
  3126  0014B2  0E06               	movlw	6
  3127  0014B4  6FA5               	movwf	efgtoa@p& (0+255),b
  3128  0014B6  EF6C  F00A         	goto	l7222
  3129  0014BA                     l1539:
  3130                           
  3131                           ; BSR set to: 0
  3132  0014BA  C0EB  F0A5         	movff	_prec,efgtoa@p
  3133  0014BE  C0EC  F0A6         	movff	_prec+1,efgtoa@p+1
  3134  0014C2  EF6C  F00A         	goto	l7222
  3135  0014C6                     l7216:
  3136                           
  3137                           ; BSR set to: 0
  3138                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3139  0014C6  BFEC               	btfsc	(_prec+1)& (0+255),7,b
  3140  0014C8  EF68  F00A         	goto	u7591
  3141  0014CC  EF6A  F00A         	goto	u7590
  3142  0014D0                     u7591:
  3143  0014D0  EF57  F00A         	goto	l7214
  3144  0014D4                     u7590:
  3145  0014D4  EF5D  F00A         	goto	l1539
  3146  0014D8                     l7222:
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3150  0014D8  0E67               	movlw	103
  3151  0014DA  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  3152  0014DC  A4D8               	btfss	status,2,c
  3153  0014DE  EF73  F00A         	goto	u7601
  3154  0014E2  EF75  F00A         	goto	u7600
  3155  0014E6                     u7601:
  3156  0014E6  EFA4  F00A         	goto	l7232
  3157  0014EA                     u7600:
  3158  0014EA                     
  3159                           ; BSR set to: 0
  3160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3161  0014EA  AFBA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3162  0014EC  EF83  F00A         	goto	u7610
  3163  0014F0  0EFC               	movlw	252
  3164  0014F2  5DB9               	subwf	efgtoa@e& (0+255),w,b
  3165  0014F4  0EFF               	movlw	255
  3166  0014F6  59BA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3167  0014F8  A0D8               	btfss	status,0,c
  3168  0014FA  EF81  F00A         	goto	u7611
  3169  0014FE  EF83  F00A         	goto	u7610
  3170  001502                     u7611:
  3171  001502  EFA2  F00A         	goto	l7230
  3172  001506                     u7610:
  3173  001506                     
  3174                           ; BSR set to: 0
  3175  001506  0EFF               	movlw	255
  3176  001508  6F84               	movwf	??_efgtoa& (0+255),b
  3177  00150A  0EFF               	movlw	255
  3178  00150C  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  3179  00150E  C0A5  F086         	movff	efgtoa@p,??_efgtoa+2
  3180  001512  C0A6  F087         	movff	efgtoa@p+1,??_efgtoa+3
  3181  001516  5184               	movf	??_efgtoa& (0+255),w,b
  3182  001518  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  3183  00151A  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  3184  00151C  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3185  00151E  51B9               	movf	efgtoa@e& (0+255),w,b
  3186  001520  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  3187  001522  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  3188  001524  0A80               	xorlw	128
  3189  001526  6F88               	movwf	(??_efgtoa+4)& (0+255),b
  3190  001528  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  3191  00152A  0A80               	xorlw	128
  3192  00152C  5988               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3193  00152E  A0D8               	btfss	status,0,c
  3194  001530  EF9C  F00A         	goto	u7621
  3195  001534  EF9E  F00A         	goto	u7620
  3196  001538                     u7621:
  3197  001538  EFA2  F00A         	goto	l7230
  3198  00153C                     u7620:
  3199  00153C                     
  3200                           ; BSR set to: 0
  3201                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3202  00153C  0E66               	movlw	102
  3203  00153E  6FA9               	movwf	efgtoa@nmode& (0+255),b
  3204                           
  3205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3206  001540  EFA4  F00A         	goto	l7232
  3207  001544                     l7230:
  3208                           
  3209                           ; BSR set to: 0
  3210                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3211  001544  0E65               	movlw	101
  3212  001546  6FA9               	movwf	efgtoa@nmode& (0+255),b
  3213  001548                     l7232:
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3217  001548  C0A5  F09B         	movff	efgtoa@p,efgtoa@m
  3218  00154C  C0A6  F09C         	movff	efgtoa@p+1,efgtoa@m+1
  3219  001550                     
  3220                           ; BSR set to: 0
  3221                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3222  001550  0E67               	movlw	103
  3223  001552  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  3224  001554  A4D8               	btfss	status,2,c
  3225  001556  EFAF  F00A         	goto	u7631
  3226  00155A  EFB1  F00A         	goto	u7630
  3227  00155E                     u7631:
  3228  00155E  EFC1  F00A         	goto	l7240
  3229  001562                     u7630:
  3230  001562                     
  3231                           ; BSR set to: 0
  3232  001562  0E66               	movlw	102
  3233  001564  19A9               	xorwf	efgtoa@nmode& (0+255),w,b
  3234  001566  A4D8               	btfss	status,2,c
  3235  001568  EFB8  F00A         	goto	u7641
  3236  00156C  EFBA  F00A         	goto	u7640
  3237  001570                     u7641:
  3238  001570  EFC3  F00A         	goto	l7242
  3239  001574                     u7640:
  3240  001574                     
  3241                           ; BSR set to: 0
  3242  001574  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3243  001576  EFC1  F00A         	goto	u7650
  3244  00157A  EFBF  F00A         	goto	u7651
  3245  00157E                     u7651:
  3246  00157E  EFC3  F00A         	goto	l7242
  3247  001582                     u7650:
  3248  001582                     l7240:
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3252  001582  4B9B               	infsnz	efgtoa@m& (0+255),f,b
  3253  001584  2B9C               	incf	(efgtoa@m+1)& (0+255),f,b
  3254  001586                     l7242:
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3258  001586  0E66               	movlw	102
  3259  001588  19A9               	xorwf	efgtoa@nmode& (0+255),w,b
  3260  00158A  A4D8               	btfss	status,2,c
  3261  00158C  EFCA  F00A         	goto	u7661
  3262  001590  EFCC  F00A         	goto	u7660
  3263  001594                     u7661:
  3264  001594  EFEC  F00A         	goto	l7252
  3265  001598                     u7660:
  3266  001598                     
  3267                           ; BSR set to: 0
  3268                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3269  001598  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3270  00159A  EFD3  F00A         	goto	u7670
  3271  00159E  EFD1  F00A         	goto	u7671
  3272  0015A2                     u7671:
  3273  0015A2  EFDF  F00A         	goto	l7248
  3274  0015A6                     u7670:
  3275  0015A6                     
  3276                           ; BSR set to: 0
  3277                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3278  0015A6  0E00               	movlw	0
  3279  0015A8  6FBD               	movwf	efgtoa@u& (0+255),b
  3280  0015AA  0E00               	movlw	0
  3281  0015AC  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  3282  0015AE  0E80               	movlw	128
  3283  0015B0  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  3284  0015B2  0E3F               	movlw	63
  3285  0015B4  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  3286                           
  3287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3288  0015B6  0E00               	movlw	0
  3289  0015B8  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  3290  0015BA  0E00               	movlw	0
  3291  0015BC  6FB9               	movwf	efgtoa@e& (0+255),b
  3292  0015BE                     l7248:
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3296  0015BE  0E67               	movlw	103
  3297  0015C0  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  3298  0015C2  B4D8               	btfsc	status,2,c
  3299  0015C4  EFE6  F00A         	goto	u7681
  3300  0015C8  EFE8  F00A         	goto	u7680
  3301  0015CC                     u7681:
  3302  0015CC  EFEC  F00A         	goto	l7252
  3303  0015D0                     u7680:
  3304  0015D0                     
  3305                           ; BSR set to: 0
  3306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3307  0015D0  51B9               	movf	efgtoa@e& (0+255),w,b
  3308  0015D2  279B               	addwf	efgtoa@m& (0+255),f,b
  3309  0015D4  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  3310  0015D6  239C               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3311  0015D8                     l7252:
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3315  0015D8  0E00               	movlw	0
  3316  0015DA  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  3317  0015DC  0E00               	movlw	0
  3318  0015DE  6FB3               	movwf	efgtoa@i& (0+255),b
  3319  0015E0                     
  3320                           ; BSR set to: 0
  3321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3322  0015E0  C0B5  F0AB         	movff	efgtoa@g,efgtoa@h
  3323  0015E4  C0B6  F0AC         	movff	efgtoa@g+1,efgtoa@h+1
  3324  0015E8  C0B7  F0AD         	movff	efgtoa@g+2,efgtoa@h+2
  3325  0015EC  C0B8  F0AE         	movff	efgtoa@g+3,efgtoa@h+3
  3326  0015F0                     
  3327                           ; BSR set to: 0
  3328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3329  0015F0  C0BD  F09D         	movff	efgtoa@u,efgtoa@ou
  3330  0015F4  C0BE  F09E         	movff	efgtoa@u+1,efgtoa@ou+1
  3331  0015F8  C0BF  F09F         	movff	efgtoa@u+2,efgtoa@ou+2
  3332  0015FC  C0C0  F0A0         	movff	efgtoa@u+3,efgtoa@ou+3
  3333                           
  3334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3335  001600  EF7D  F00B         	goto	l7266
  3336  001604                     l7258:
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3340  001604  C0AB  F033         	movff	efgtoa@h,___fldiv@b
  3341  001608  C0AC  F034         	movff	efgtoa@h+1,___fldiv@b+1
  3342  00160C  C0AD  F035         	movff	efgtoa@h+2,___fldiv@b+2
  3343  001610  C0AE  F036         	movff	efgtoa@h+3,___fldiv@b+3
  3344  001614  C0BD  F037         	movff	efgtoa@u,___fldiv@a
  3345  001618  C0BE  F038         	movff	efgtoa@u+1,___fldiv@a+1
  3346  00161C  C0BF  F039         	movff	efgtoa@u+2,___fldiv@a+2
  3347  001620  C0C0  F03A         	movff	efgtoa@u+3,___fldiv@a+3
  3348  001624  EC6F  F015         	call	___fldiv	;wreg free
  3349  001628  C033  F04C         	movff	?___fldiv,floorf@x
  3350  00162C  C034  F04D         	movff	?___fldiv+1,floorf@x+1
  3351  001630  C035  F04E         	movff	?___fldiv+2,floorf@x+2
  3352  001634  C036  F04F         	movff	?___fldiv+3,floorf@x+3
  3353  001638  EC3C  F017         	call	_floorf	;wreg free
  3354  00163C  C04C  F0AF         	movff	?_floorf,efgtoa@l
  3355  001640  C04D  F0B0         	movff	?_floorf+1,efgtoa@l+1
  3356  001644  C04E  F0B1         	movff	?_floorf+2,efgtoa@l+2
  3357  001648  C04F  F0B2         	movff	?_floorf+3,efgtoa@l+3
  3358                           
  3359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3360  00164C  C0AF  F005         	movff	efgtoa@l,___fltol@f1
  3361  001650  C0B0  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3362  001654  C0B1  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3363  001658  C0B2  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3364  00165C  EC94  F01A         	call	___fltol	;wreg free
  3365  001660  C005  F0A1         	movff	?___fltol,efgtoa@d
  3366  001664  C006  F0A2         	movff	?___fltol+1,efgtoa@d+1
  3367  001668                     
  3368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3369  001668  C0AB  F071         	movff	efgtoa@h,___flsub@b
  3370  00166C  C0AC  F072         	movff	efgtoa@h+1,___flsub@b+1
  3371  001670  C0AD  F073         	movff	efgtoa@h+2,___flsub@b+2
  3372  001674  C0AE  F074         	movff	efgtoa@h+3,___flsub@b+3
  3373  001678  C0BD  F050         	movff	efgtoa@u,___flmul@a
  3374  00167C  C0BE  F051         	movff	efgtoa@u+1,___flmul@a+1
  3375  001680  C0BF  F052         	movff	efgtoa@u+2,___flmul@a+2
  3376  001684  C0C0  F053         	movff	efgtoa@u+3,___flmul@a+3
  3377  001688  C0AF  F04C         	movff	efgtoa@l,___flmul@b
  3378  00168C  C0B0  F04D         	movff	efgtoa@l+1,___flmul@b+1
  3379  001690  C0B1  F04E         	movff	efgtoa@l+2,___flmul@b+2
  3380  001694  C0B2  F04F         	movff	efgtoa@l+3,___flmul@b+3
  3381  001698  EC59  F013         	call	___flmul	;wreg free
  3382  00169C  C04C  F075         	movff	?___flmul,___flsub@a
  3383  0016A0  C04D  F076         	movff	?___flmul+1,___flsub@a+1
  3384  0016A4  C04E  F077         	movff	?___flmul+2,___flsub@a+2
  3385  0016A8  C04F  F078         	movff	?___flmul+3,___flsub@a+3
  3386  0016AC  EC3D  F023         	call	___flsub	;wreg free
  3387  0016B0  C071  F0AB         	movff	?___flsub,efgtoa@h
  3388  0016B4  C072  F0AC         	movff	?___flsub+1,efgtoa@h+1
  3389  0016B8  C073  F0AD         	movff	?___flsub+2,efgtoa@h+2
  3390  0016BC  C074  F0AE         	movff	?___flsub+3,efgtoa@h+3
  3391  0016C0                     
  3392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3393  0016C0  C0BD  F033         	movff	efgtoa@u,___fldiv@b
  3394  0016C4  C0BE  F034         	movff	efgtoa@u+1,___fldiv@b+1
  3395  0016C8  C0BF  F035         	movff	efgtoa@u+2,___fldiv@b+2
  3396  0016CC  C0C0  F036         	movff	efgtoa@u+3,___fldiv@b+3
  3397  0016D0  0E00               	movlw	0
  3398  0016D2  6E37               	movwf	___fldiv@a^0,c
  3399  0016D4  0E00               	movlw	0
  3400  0016D6  6E38               	movwf	(___fldiv@a+1)^0,c
  3401  0016D8  0E20               	movlw	32
  3402  0016DA  6E39               	movwf	(___fldiv@a+2)^0,c
  3403  0016DC  0E41               	movlw	65
  3404  0016DE  6E3A               	movwf	(___fldiv@a+3)^0,c
  3405  0016E0  EC6F  F015         	call	___fldiv	;wreg free
  3406  0016E4  C033  F0BD         	movff	?___fldiv,efgtoa@u
  3407  0016E8  C034  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  3408  0016EC  C035  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  3409  0016F0  C036  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  3410  0016F4                     
  3411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3412  0016F4  0100               	movlb	0	; () banked
  3413  0016F6  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  3414  0016F8  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  3415  0016FA                     l7266:
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3419  0016FA  519B               	movf	efgtoa@m& (0+255),w,b
  3420  0016FC  5DB3               	subwf	efgtoa@i& (0+255),w,b
  3421  0016FE  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  3422  001700  0A80               	xorlw	128
  3423  001702  6F84               	movwf	??_efgtoa& (0+255),b
  3424  001704  519C               	movf	(efgtoa@m+1)& (0+255),w,b
  3425  001706  0A80               	xorlw	128
  3426  001708  5984               	subwfb	??_efgtoa& (0+255),w,b
  3427  00170A  A0D8               	btfss	status,0,c
  3428  00170C  EF8A  F00B         	goto	u7691
  3429  001710  EF8C  F00B         	goto	u7690
  3430  001714                     u7691:
  3431  001714  EF02  F00B         	goto	l7258
  3432  001718                     u7690:
  3433  001718                     
  3434                           ; BSR set to: 0
  3435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3436  001718  C0BD  F04C         	movff	efgtoa@u,___flmul@b
  3437  00171C  C0BE  F04D         	movff	efgtoa@u+1,___flmul@b+1
  3438  001720  C0BF  F04E         	movff	efgtoa@u+2,___flmul@b+2
  3439  001724  C0C0  F04F         	movff	efgtoa@u+3,___flmul@b+3
  3440  001728  0E00               	movlw	0
  3441  00172A  6E50               	movwf	___flmul@a^0,c
  3442  00172C  0E00               	movlw	0
  3443  00172E  6E51               	movwf	(___flmul@a+1)^0,c
  3444  001730  0EA0               	movlw	160
  3445  001732  6E52               	movwf	(___flmul@a+2)^0,c
  3446  001734  0E40               	movlw	64
  3447  001736  6E53               	movwf	(___flmul@a+3)^0,c
  3448  001738  EC59  F013         	call	___flmul	;wreg free
  3449  00173C  C04C  F0AF         	movff	?___flmul,efgtoa@l
  3450  001740  C04D  F0B0         	movff	?___flmul+1,efgtoa@l+1
  3451  001744  C04E  F0B1         	movff	?___flmul+2,efgtoa@l+2
  3452  001748  C04F  F0B2         	movff	?___flmul+3,efgtoa@l+3
  3453  00174C                     
  3454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3455  00174C  C0AB  F071         	movff	efgtoa@h,___flge@ff1
  3456  001750  C0AC  F072         	movff	efgtoa@h+1,___flge@ff1+1
  3457  001754  C0AD  F073         	movff	efgtoa@h+2,___flge@ff1+2
  3458  001758  C0AE  F074         	movff	efgtoa@h+3,___flge@ff1+3
  3459  00175C  C0AF  F075         	movff	efgtoa@l,___flge@ff2
  3460  001760  C0B0  F076         	movff	efgtoa@l+1,___flge@ff2+1
  3461  001764  C0B1  F077         	movff	efgtoa@l+2,___flge@ff2+2
  3462  001768  C0B2  F078         	movff	efgtoa@l+3,___flge@ff2+3
  3463  00176C  EC17  F01B         	call	___flge	;wreg free
  3464  001770  0100               	movlb	0	; () banked
  3465  001772  B0D8               	btfsc	status,0,c
  3466  001774  EFBE  F00B         	goto	u7701
  3467  001778  EFC0  F00B         	goto	u7700
  3468  00177C                     u7701:
  3469  00177C  EFCA  F00B         	goto	l7274
  3470  001780                     u7700:
  3471  001780                     
  3472                           ; BSR set to: 0
  3473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3474  001780  0E00               	movlw	0
  3475  001782  6FAF               	movwf	efgtoa@l& (0+255),b
  3476  001784  0E00               	movlw	0
  3477  001786  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
  3478  001788  0E00               	movlw	0
  3479  00178A  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
  3480  00178C  0E00               	movlw	0
  3481  00178E  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
  3482                           
  3483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  3484  001790  EFF3  F00B         	goto	l7280
  3485  001794                     l7274:
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3489  001794  C0AB  F005         	movff	efgtoa@h,___fleq@ff1
  3490  001798  C0AC  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  3491  00179C  C0AD  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  3492  0017A0  C0AE  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  3493  0017A4  C0AF  F009         	movff	efgtoa@l,___fleq@ff2
  3494  0017A8  C0B0  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  3495  0017AC  C0B1  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  3496  0017B0  C0B2  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  3497  0017B4  EC64  F01E         	call	___fleq	;wreg free
  3498  0017B8  A0D8               	btfss	status,0,c
  3499  0017BA  EFE1  F00B         	goto	u7711
  3500  0017BE  EFE3  F00B         	goto	u7710
  3501  0017C2                     u7711:
  3502  0017C2  EFF3  F00B         	goto	l7280
  3503  0017C6                     u7710:
  3504  0017C6  0100               	movlb	0	; () banked
  3505  0017C8  B1A1               	btfsc	efgtoa@d& (0+255),0,b
  3506  0017CA  EFE9  F00B         	goto	u7721
  3507  0017CE  EFEB  F00B         	goto	u7720
  3508  0017D2                     u7721:
  3509  0017D2  EFF3  F00B         	goto	l7280
  3510  0017D6                     u7720:
  3511  0017D6                     
  3512                           ; BSR set to: 0
  3513                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3514  0017D6  0E00               	movlw	0
  3515  0017D8  6FAF               	movwf	efgtoa@l& (0+255),b
  3516  0017DA  0E00               	movlw	0
  3517  0017DC  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
  3518  0017DE  0E00               	movlw	0
  3519  0017E0  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
  3520  0017E2  0E00               	movlw	0
  3521  0017E4  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
  3522  0017E6                     l7280:
  3523                           
  3524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3525  0017E6  C0B5  F005         	movff	efgtoa@g,___fladd@b
  3526  0017EA  C0B6  F006         	movff	efgtoa@g+1,___fladd@b+1
  3527  0017EE  C0B7  F007         	movff	efgtoa@g+2,___fladd@b+2
  3528  0017F2  C0B8  F008         	movff	efgtoa@g+3,___fladd@b+3
  3529  0017F6  C0AF  F009         	movff	efgtoa@l,___fladd@a
  3530  0017FA  C0B0  F00A         	movff	efgtoa@l+1,___fladd@a+1
  3531  0017FE  C0B1  F00B         	movff	efgtoa@l+2,___fladd@a+2
  3532  001802  C0B2  F00C         	movff	efgtoa@l+3,___fladd@a+3
  3533  001806  ECA2  F00E         	call	___fladd	;wreg free
  3534  00180A  C005  F0AB         	movff	?___fladd,efgtoa@h
  3535  00180E  C006  F0AC         	movff	?___fladd+1,efgtoa@h+1
  3536  001812  C007  F0AD         	movff	?___fladd+2,efgtoa@h+2
  3537  001816  C008  F0AE         	movff	?___fladd+3,efgtoa@h+3
  3538  00181A                     
  3539                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3540  00181A  C0AB  F071         	movff	efgtoa@h,___flge@ff1
  3541  00181E  C0AC  F072         	movff	efgtoa@h+1,___flge@ff1+1
  3542  001822  C0AD  F073         	movff	efgtoa@h+2,___flge@ff1+2
  3543  001826  C0AE  F074         	movff	efgtoa@h+3,___flge@ff1+3
  3544  00182A  0E00               	movlw	0
  3545  00182C  6E50               	movwf	___flmul@a^0,c
  3546  00182E  0E00               	movlw	0
  3547  001830  6E51               	movwf	(___flmul@a+1)^0,c
  3548  001832  0E20               	movlw	32
  3549  001834  6E52               	movwf	(___flmul@a+2)^0,c
  3550  001836  0E41               	movlw	65
  3551  001838  6E53               	movwf	(___flmul@a+3)^0,c
  3552  00183A  C09D  F04C         	movff	efgtoa@ou,___flmul@b
  3553  00183E  C09E  F04D         	movff	efgtoa@ou+1,___flmul@b+1
  3554  001842  C09F  F04E         	movff	efgtoa@ou+2,___flmul@b+2
  3555  001846  C0A0  F04F         	movff	efgtoa@ou+3,___flmul@b+3
  3556  00184A  EC59  F013         	call	___flmul	;wreg free
  3557  00184E  C04C  F075         	movff	?___flmul,___flge@ff2
  3558  001852  C04D  F076         	movff	?___flmul+1,___flge@ff2+1
  3559  001856  C04E  F077         	movff	?___flmul+2,___flge@ff2+2
  3560  00185A  C04F  F078         	movff	?___flmul+3,___flge@ff2+3
  3561  00185E  EC17  F01B         	call	___flge	;wreg free
  3562  001862  0100               	movlb	0	; () banked
  3563  001864  A0D8               	btfss	status,0,c
  3564  001866  EF37  F00C         	goto	u7731
  3565  00186A  EF39  F00C         	goto	u7730
  3566  00186E                     u7731:
  3567  00186E  EF61  F00C         	goto	l7292
  3568  001872                     u7730:
  3569  001872                     
  3570                           ; BSR set to: 0
  3571                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  3572  001872  4BB9               	infsnz	efgtoa@e& (0+255),f,b
  3573  001874  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
  3574  001876                     
  3575                           ; BSR set to: 0
  3576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3577  001876  C09D  F04C         	movff	efgtoa@ou,___flmul@b
  3578  00187A  C09E  F04D         	movff	efgtoa@ou+1,___flmul@b+1
  3579  00187E  C09F  F04E         	movff	efgtoa@ou+2,___flmul@b+2
  3580  001882  C0A0  F04F         	movff	efgtoa@ou+3,___flmul@b+3
  3581  001886  0E00               	movlw	0
  3582  001888  6E50               	movwf	___flmul@a^0,c
  3583  00188A  0E00               	movlw	0
  3584  00188C  6E51               	movwf	(___flmul@a+1)^0,c
  3585  00188E  0E20               	movlw	32
  3586  001890  6E52               	movwf	(___flmul@a+2)^0,c
  3587  001892  0E41               	movlw	65
  3588  001894  6E53               	movwf	(___flmul@a+3)^0,c
  3589  001896  EC59  F013         	call	___flmul	;wreg free
  3590  00189A  C04C  F09D         	movff	?___flmul,efgtoa@ou
  3591  00189E  C04D  F09E         	movff	?___flmul+1,efgtoa@ou+1
  3592  0018A2  C04E  F09F         	movff	?___flmul+2,efgtoa@ou+2
  3593  0018A6  C04F  F0A0         	movff	?___flmul+3,efgtoa@ou+3
  3594  0018AA                     
  3595                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3596  0018AA  0E66               	movlw	102
  3597  0018AC  0100               	movlb	0	; () banked
  3598  0018AE  19A9               	xorwf	efgtoa@nmode& (0+255),w,b
  3599  0018B0  A4D8               	btfss	status,2,c
  3600  0018B2  EF5D  F00C         	goto	u7741
  3601  0018B6  EF5F  F00C         	goto	u7740
  3602  0018BA                     u7741:
  3603  0018BA  EF61  F00C         	goto	l7292
  3604  0018BE                     u7740:
  3605  0018BE                     
  3606                           ; BSR set to: 0
  3607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  3608  0018BE  4B9B               	infsnz	efgtoa@m& (0+255),f,b
  3609  0018C0  2B9C               	incf	(efgtoa@m+1)& (0+255),f,b
  3610  0018C2                     l7292:
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3614  0018C2  C09D  F0BD         	movff	efgtoa@ou,efgtoa@u
  3615  0018C6  C09E  F0BE         	movff	efgtoa@ou+1,efgtoa@u+1
  3616  0018CA  C09F  F0BF         	movff	efgtoa@ou+2,efgtoa@u+2
  3617  0018CE  C0A0  F0C0         	movff	efgtoa@ou+3,efgtoa@u+3
  3618  0018D2                     
  3619                           ; BSR set to: 0
  3620                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3621  0018D2  0E65               	movlw	101
  3622  0018D4  19A9               	xorwf	efgtoa@nmode& (0+255),w,b
  3623  0018D6  B4D8               	btfsc	status,2,c
  3624  0018D8  EF70  F00C         	goto	u7751
  3625  0018DC  EF72  F00C         	goto	u7750
  3626  0018E0                     u7751:
  3627  0018E0  EF78  F00C         	goto	l7298
  3628  0018E4                     u7750:
  3629  0018E4                     
  3630                           ; BSR set to: 0
  3631  0018E4  C0B9  F099         	movff	efgtoa@e,efgtoa@ne
  3632  0018E8  C0BA  F09A         	movff	efgtoa@e+1,efgtoa@ne+1
  3633  0018EC  EF7C  F00C         	goto	l1567
  3634  0018F0                     l7298:
  3635                           
  3636                           ; BSR set to: 0
  3637  0018F0  0E00               	movlw	0
  3638  0018F2  6F9A               	movwf	(efgtoa@ne+1)& (0+255),b
  3639  0018F4  0E00               	movlw	0
  3640  0018F6  6F99               	movwf	efgtoa@ne& (0+255),b
  3641  0018F8                     l1567:
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3645  0018F8  0E00               	movlw	0
  3646  0018FA  6F98               	movwf	(efgtoa@pp+1)& (0+255),b
  3647  0018FC  0E00               	movlw	0
  3648  0018FE  6F97               	movwf	efgtoa@pp& (0+255),b
  3649                           
  3650                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3651  001900  0E00               	movlw	0
  3652  001902  6F96               	movwf	(efgtoa@t+1)& (0+255),b
  3653  001904  0E00               	movlw	0
  3654  001906  6F95               	movwf	efgtoa@t& (0+255),b
  3655                           
  3656                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3657  001908  0E00               	movlw	0
  3658  00190A  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  3659  00190C  0E00               	movlw	0
  3660  00190E  6FB3               	movwf	efgtoa@i& (0+255),b
  3661                           
  3662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3663  001910  EF77  F00D         	goto	l7348
  3664  001914                     l7300:
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3668  001914  C0AB  F033         	movff	efgtoa@h,___fldiv@b
  3669  001918  C0AC  F034         	movff	efgtoa@h+1,___fldiv@b+1
  3670  00191C  C0AD  F035         	movff	efgtoa@h+2,___fldiv@b+2
  3671  001920  C0AE  F036         	movff	efgtoa@h+3,___fldiv@b+3
  3672  001924  C0BD  F037         	movff	efgtoa@u,___fldiv@a
  3673  001928  C0BE  F038         	movff	efgtoa@u+1,___fldiv@a+1
  3674  00192C  C0BF  F039         	movff	efgtoa@u+2,___fldiv@a+2
  3675  001930  C0C0  F03A         	movff	efgtoa@u+3,___fldiv@a+3
  3676  001934  EC6F  F015         	call	___fldiv	;wreg free
  3677  001938  C033  F04C         	movff	?___fldiv,floorf@x
  3678  00193C  C034  F04D         	movff	?___fldiv+1,floorf@x+1
  3679  001940  C035  F04E         	movff	?___fldiv+2,floorf@x+2
  3680  001944  C036  F04F         	movff	?___fldiv+3,floorf@x+3
  3681  001948  EC3C  F017         	call	_floorf	;wreg free
  3682  00194C  C04C  F0AF         	movff	?_floorf,efgtoa@l
  3683  001950  C04D  F0B0         	movff	?_floorf+1,efgtoa@l+1
  3684  001954  C04E  F0B1         	movff	?_floorf+2,efgtoa@l+2
  3685  001958  C04F  F0B2         	movff	?_floorf+3,efgtoa@l+3
  3686                           
  3687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3688  00195C  C0AF  F005         	movff	efgtoa@l,___fltol@f1
  3689  001960  C0B0  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3690  001964  C0B1  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3691  001968  C0B2  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3692  00196C  EC94  F01A         	call	___fltol	;wreg free
  3693  001970  C005  F0A1         	movff	?___fltol,efgtoa@d
  3694  001974  C006  F0A2         	movff	?___fltol+1,efgtoa@d+1
  3695  001978                     
  3696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3697  001978  0100               	movlb	0	; () banked
  3698  00197A  B9ED               	btfsc	_flags& (0+255),4,b
  3699  00197C  EFC2  F00C         	goto	u7761
  3700  001980  EFC4  F00C         	goto	u7760
  3701  001984                     u7761:
  3702  001984  EFE1  F00C         	goto	l7312
  3703  001988                     u7760:
  3704  001988                     
  3705                           ; BSR set to: 0
  3706  001988  51A1               	movf	efgtoa@d& (0+255),w,b
  3707  00198A  11A2               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3708  00198C  A4D8               	btfss	status,2,c
  3709  00198E  EFCB  F00C         	goto	u7771
  3710  001992  EFCD  F00C         	goto	u7770
  3711  001996                     u7771:
  3712  001996  EFE1  F00C         	goto	l7312
  3713  00199A                     u7770:
  3714  00199A                     
  3715                           ; BSR set to: 0
  3716  00199A  0E67               	movlw	103
  3717  00199C  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  3718  00199E  A4D8               	btfss	status,2,c
  3719  0019A0  EFD4  F00C         	goto	u7781
  3720  0019A4  EFD6  F00C         	goto	u7780
  3721  0019A8                     u7781:
  3722  0019A8  EFE1  F00C         	goto	l7312
  3723  0019AC                     u7780:
  3724  0019AC                     
  3725                           ; BSR set to: 0
  3726  0019AC  BF9A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3727  0019AE  EFDD  F00C         	goto	u7790
  3728  0019B2  EFDB  F00C         	goto	u7791
  3729  0019B6                     u7791:
  3730  0019B6  EFE1  F00C         	goto	l7312
  3731  0019BA                     u7790:
  3732  0019BA                     
  3733                           ; BSR set to: 0
  3734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3735  0019BA  4B95               	infsnz	efgtoa@t& (0+255),f,b
  3736  0019BC  2B96               	incf	(efgtoa@t+1)& (0+255),f,b
  3737                           
  3738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3739  0019BE  EF2B  F00D         	goto	l7340
  3740  0019C2                     l7312:
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3744  0019C2  5197               	movf	efgtoa@pp& (0+255),w,b
  3745  0019C4  1198               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3746  0019C6  A4D8               	btfss	status,2,c
  3747  0019C8  EFE8  F00C         	goto	u7801
  3748  0019CC  EFEA  F00C         	goto	u7800
  3749  0019D0                     u7801:
  3750  0019D0  EF14  F00D         	goto	l7332
  3751  0019D4                     u7800:
  3752  0019D4                     
  3753                           ; BSR set to: 0
  3754  0019D4  BF9A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3755  0019D6  EFF1  F00C         	goto	u7810
  3756  0019DA  EFEF  F00C         	goto	u7811
  3757  0019DE                     u7811:
  3758  0019DE  EF14  F00D         	goto	l7332
  3759  0019E2                     u7810:
  3760  0019E2                     
  3761                           ; BSR set to: 0
  3762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3763  0019E2  0E5D               	movlw	low _dbuf
  3764  0019E4  25BB               	addwf	efgtoa@n& (0+255),w,b
  3765  0019E6  6ED9               	movwf	fsr2l,c
  3766  0019E8  0E01               	movlw	high _dbuf
  3767  0019EA  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3768  0019EC  6EDA               	movwf	fsr2h,c
  3769  0019EE  0E2E               	movlw	46
  3770  0019F0  6EDF               	movwf	indf2,c
  3771  0019F2                     
  3772                           ; BSR set to: 0
  3773  0019F2  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  3774  0019F4  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  3775  0019F6                     
  3776                           ; BSR set to: 0
  3777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3778  0019F6  07A7               	decf	efgtoa@w& (0+255),f,b
  3779  0019F8  A0D8               	btfss	status,0,c
  3780  0019FA  07A8               	decf	(efgtoa@w+1)& (0+255),f,b
  3781  0019FC                     
  3782                           ; BSR set to: 0
  3783                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3784  0019FC  0E00               	movlw	0
  3785  0019FE  6F98               	movwf	(efgtoa@pp+1)& (0+255),b
  3786  001A00  0E01               	movlw	1
  3787  001A02  6F97               	movwf	efgtoa@pp& (0+255),b
  3788  001A04  EF14  F00D         	goto	l7332
  3789  001A08                     l7324:
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3793  001A08  0E5D               	movlw	low _dbuf
  3794  001A0A  25BB               	addwf	efgtoa@n& (0+255),w,b
  3795  001A0C  6ED9               	movwf	fsr2l,c
  3796  001A0E  0E01               	movlw	high _dbuf
  3797  001A10  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3798  001A12  6EDA               	movwf	fsr2h,c
  3799  001A14  0E30               	movlw	48
  3800  001A16  6EDF               	movwf	indf2,c
  3801  001A18                     
  3802                           ; BSR set to: 0
  3803  001A18  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  3804  001A1A  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  3805  001A1C                     
  3806                           ; BSR set to: 0
  3807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3808  001A1C  07A7               	decf	efgtoa@w& (0+255),f,b
  3809  001A1E  A0D8               	btfss	status,0,c
  3810  001A20  07A8               	decf	(efgtoa@w+1)& (0+255),f,b
  3811  001A22                     
  3812                           ; BSR set to: 0
  3813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3814  001A22  0795               	decf	efgtoa@t& (0+255),f,b
  3815  001A24  A0D8               	btfss	status,0,c
  3816  001A26  0796               	decf	(efgtoa@t+1)& (0+255),f,b
  3817  001A28                     l7332:
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3821  001A28  5195               	movf	efgtoa@t& (0+255),w,b
  3822  001A2A  1196               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3823  001A2C  A4D8               	btfss	status,2,c
  3824  001A2E  EF1B  F00D         	goto	u7821
  3825  001A32  EF1D  F00D         	goto	u7820
  3826  001A36                     u7821:
  3827  001A36  EF04  F00D         	goto	l7324
  3828  001A3A                     u7820:
  3829  001A3A                     
  3830                           ; BSR set to: 0
  3831                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3832  001A3A  0E5D               	movlw	low _dbuf
  3833  001A3C  25BB               	addwf	efgtoa@n& (0+255),w,b
  3834  001A3E  6ED9               	movwf	fsr2l,c
  3835  001A40  0E01               	movlw	high _dbuf
  3836  001A42  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3837  001A44  6EDA               	movwf	fsr2h,c
  3838  001A46  51A1               	movf	efgtoa@d& (0+255),w,b
  3839  001A48  0F30               	addlw	48
  3840  001A4A  6EDF               	movwf	indf2,c
  3841  001A4C                     
  3842                           ; BSR set to: 0
  3843  001A4C  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  3844  001A4E  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  3845  001A50                     
  3846                           ; BSR set to: 0
  3847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3848  001A50  07A7               	decf	efgtoa@w& (0+255),f,b
  3849  001A52  A0D8               	btfss	status,0,c
  3850  001A54  07A8               	decf	(efgtoa@w+1)& (0+255),f,b
  3851  001A56                     l7340:
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3855  001A56  C0AB  F071         	movff	efgtoa@h,___flsub@b
  3856  001A5A  C0AC  F072         	movff	efgtoa@h+1,___flsub@b+1
  3857  001A5E  C0AD  F073         	movff	efgtoa@h+2,___flsub@b+2
  3858  001A62  C0AE  F074         	movff	efgtoa@h+3,___flsub@b+3
  3859  001A66  C0BD  F050         	movff	efgtoa@u,___flmul@a
  3860  001A6A  C0BE  F051         	movff	efgtoa@u+1,___flmul@a+1
  3861  001A6E  C0BF  F052         	movff	efgtoa@u+2,___flmul@a+2
  3862  001A72  C0C0  F053         	movff	efgtoa@u+3,___flmul@a+3
  3863  001A76  C0AF  F04C         	movff	efgtoa@l,___flmul@b
  3864  001A7A  C0B0  F04D         	movff	efgtoa@l+1,___flmul@b+1
  3865  001A7E  C0B1  F04E         	movff	efgtoa@l+2,___flmul@b+2
  3866  001A82  C0B2  F04F         	movff	efgtoa@l+3,___flmul@b+3
  3867  001A86  EC59  F013         	call	___flmul	;wreg free
  3868  001A8A  C04C  F075         	movff	?___flmul,___flsub@a
  3869  001A8E  C04D  F076         	movff	?___flmul+1,___flsub@a+1
  3870  001A92  C04E  F077         	movff	?___flmul+2,___flsub@a+2
  3871  001A96  C04F  F078         	movff	?___flmul+3,___flsub@a+3
  3872  001A9A  EC3D  F023         	call	___flsub	;wreg free
  3873  001A9E  C071  F0AB         	movff	?___flsub,efgtoa@h
  3874  001AA2  C072  F0AC         	movff	?___flsub+1,efgtoa@h+1
  3875  001AA6  C073  F0AD         	movff	?___flsub+2,efgtoa@h+2
  3876  001AAA  C074  F0AE         	movff	?___flsub+3,efgtoa@h+3
  3877  001AAE                     
  3878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3879  001AAE  C0BD  F033         	movff	efgtoa@u,___fldiv@b
  3880  001AB2  C0BE  F034         	movff	efgtoa@u+1,___fldiv@b+1
  3881  001AB6  C0BF  F035         	movff	efgtoa@u+2,___fldiv@b+2
  3882  001ABA  C0C0  F036         	movff	efgtoa@u+3,___fldiv@b+3
  3883  001ABE  0E00               	movlw	0
  3884  001AC0  6E37               	movwf	___fldiv@a^0,c
  3885  001AC2  0E00               	movlw	0
  3886  001AC4  6E38               	movwf	(___fldiv@a+1)^0,c
  3887  001AC6  0E20               	movlw	32
  3888  001AC8  6E39               	movwf	(___fldiv@a+2)^0,c
  3889  001ACA  0E41               	movlw	65
  3890  001ACC  6E3A               	movwf	(___fldiv@a+3)^0,c
  3891  001ACE  EC6F  F015         	call	___fldiv	;wreg free
  3892  001AD2  C033  F0BD         	movff	?___fldiv,efgtoa@u
  3893  001AD6  C034  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  3894  001ADA  C035  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  3895  001ADE  C036  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  3896  001AE2                     
  3897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3898  001AE2  0100               	movlb	0	; () banked
  3899  001AE4  0799               	decf	efgtoa@ne& (0+255),f,b
  3900  001AE6  A0D8               	btfss	status,0,c
  3901  001AE8  079A               	decf	(efgtoa@ne+1)& (0+255),f,b
  3902  001AEA                     
  3903                           ; BSR set to: 0
  3904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3905  001AEA  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  3906  001AEC  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  3907  001AEE                     l7348:
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3911  001AEE  519B               	movf	efgtoa@m& (0+255),w,b
  3912  001AF0  5DB3               	subwf	efgtoa@i& (0+255),w,b
  3913  001AF2  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  3914  001AF4  0A80               	xorlw	128
  3915  001AF6  6F84               	movwf	??_efgtoa& (0+255),b
  3916  001AF8  519C               	movf	(efgtoa@m+1)& (0+255),w,b
  3917  001AFA  0A80               	xorlw	128
  3918  001AFC  5984               	subwfb	??_efgtoa& (0+255),w,b
  3919  001AFE  B0D8               	btfsc	status,0,c
  3920  001B00  EF84  F00D         	goto	u7831
  3921  001B04  EF86  F00D         	goto	u7830
  3922  001B08                     u7831:
  3923  001B08  EF94  F00D         	goto	l7352
  3924  001B0C                     u7830:
  3925  001B0C                     
  3926                           ; BSR set to: 0
  3927  001B0C  BFBC               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3928  001B0E  EF92  F00D         	goto	u7841
  3929  001B12  51BC               	movf	(efgtoa@n+1)& (0+255),w,b
  3930  001B14  E109               	bnz	u7840
  3931  001B16  0E4B               	movlw	75
  3932  001B18  5DBB               	subwf	efgtoa@n& (0+255),w,b
  3933  001B1A  A0D8               	btfss	status,0,c
  3934  001B1C  EF92  F00D         	goto	u7841
  3935  001B20  EF94  F00D         	goto	u7840
  3936  001B24                     u7841:
  3937  001B24  EF8A  F00C         	goto	l7300
  3938  001B28                     u7840:
  3939  001B28                     l7352:
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3943  001B28  5197               	movf	efgtoa@pp& (0+255),w,b
  3944  001B2A  1198               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3945  001B2C  A4D8               	btfss	status,2,c
  3946  001B2E  EF9B  F00D         	goto	u7851
  3947  001B32  EF9D  F00D         	goto	u7850
  3948  001B36                     u7851:
  3949  001B36  EFAE  F00D         	goto	l7360
  3950  001B3A                     u7850:
  3951  001B3A                     
  3952                           ; BSR set to: 0
  3953  001B3A  A9ED               	btfss	_flags& (0+255),4,b
  3954  001B3C  EFA2  F00D         	goto	u7861
  3955  001B40  EFA4  F00D         	goto	u7860
  3956  001B44                     u7861:
  3957  001B44  EFAE  F00D         	goto	l7360
  3958  001B48                     u7860:
  3959  001B48                     
  3960                           ; BSR set to: 0
  3961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3962  001B48  0E5D               	movlw	low _dbuf
  3963  001B4A  25BB               	addwf	efgtoa@n& (0+255),w,b
  3964  001B4C  6ED9               	movwf	fsr2l,c
  3965  001B4E  0E01               	movlw	high _dbuf
  3966  001B50  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3967  001B52  6EDA               	movwf	fsr2h,c
  3968  001B54  0E2E               	movlw	46
  3969  001B56  6EDF               	movwf	indf2,c
  3970  001B58                     
  3971                           ; BSR set to: 0
  3972  001B58  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  3973  001B5A  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  3974  001B5C                     l7360:
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3978  001B5C  0E5D               	movlw	low _dbuf
  3979  001B5E  25BB               	addwf	efgtoa@n& (0+255),w,b
  3980  001B60  6ED9               	movwf	fsr2l,c
  3981  001B62  0E01               	movlw	high _dbuf
  3982  001B64  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3983  001B66  6EDA               	movwf	fsr2h,c
  3984  001B68  0E00               	movlw	0
  3985  001B6A  6EDF               	movwf	indf2,c
  3986  001B6C                     
  3987                           ; BSR set to: 0
  3988                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3989  001B6C  0E65               	movlw	101
  3990  001B6E  19A9               	xorwf	efgtoa@nmode& (0+255),w,b
  3991  001B70  A4D8               	btfss	status,2,c
  3992  001B72  EFBD  F00D         	goto	u7871
  3993  001B76  EFBF  F00D         	goto	u7870
  3994  001B7A                     u7871:
  3995  001B7A  EF8F  F00E         	goto	l7422
  3996  001B7E                     u7870:
  3997  001B7E                     
  3998                           ; BSR set to: 0
  3999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4000  001B7E  0E00               	movlw	0
  4001  001B80  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  4002  001B82  0E4F               	movlw	79
  4003  001B84  6FB3               	movwf	efgtoa@i& (0+255),b
  4004  001B86                     
  4005                           ; BSR set to: 0
  4006                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4007  001B86  0E5D               	movlw	low _dbuf
  4008  001B88  25B3               	addwf	efgtoa@i& (0+255),w,b
  4009  001B8A  6ED9               	movwf	fsr2l,c
  4010  001B8C  0E01               	movlw	high _dbuf
  4011  001B8E  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4012  001B90  6EDA               	movwf	fsr2h,c
  4013  001B92  0E00               	movlw	0
  4014  001B94  6EDF               	movwf	indf2,c
  4015  001B96                     
  4016                           ; BSR set to: 0
  4017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4018  001B96  0E00               	movlw	0
  4019  001B98  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  4020  001B9A  0E00               	movlw	0
  4021  001B9C  6FA3               	movwf	efgtoa@sign& (0+255),b
  4022  001B9E                     
  4023                           ; BSR set to: 0
  4024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4025  001B9E  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4026  001BA0  EFD6  F00D         	goto	u7880
  4027  001BA4  EFD4  F00D         	goto	u7881
  4028  001BA8                     u7881:
  4029  001BA8  EFDE  F00D         	goto	l7376
  4030  001BAC                     u7880:
  4031  001BAC                     
  4032                           ; BSR set to: 0
  4033                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4034  001BAC  0E00               	movlw	0
  4035  001BAE  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  4036  001BB0  0E01               	movlw	1
  4037  001BB2  6FA3               	movwf	efgtoa@sign& (0+255),b
  4038  001BB4                     
  4039                           ; BSR set to: 0
  4040                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4041  001BB4  6DB9               	negf	efgtoa@e& (0+255),b
  4042  001BB6  1FBA               	comf	(efgtoa@e+1)& (0+255),f,b
  4043  001BB8  B0D8               	btfsc	status,0,c
  4044  001BBA  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
  4045  001BBC                     l7376:
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4049  001BBC  0E00               	movlw	0
  4050  001BBE  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
  4051  001BC0  0E02               	movlw	2
  4052  001BC2  6FA5               	movwf	efgtoa@p& (0+255),b
  4053                           
  4054                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4055  001BC4  EF0F  F00E         	goto	l7388
  4056  001BC8                     l7378:
  4057                           
  4058                           ; BSR set to: 0
  4059                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4060  001BC8  07B3               	decf	efgtoa@i& (0+255),f,b
  4061  001BCA  A0D8               	btfss	status,0,c
  4062  001BCC  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
  4063  001BCE                     
  4064                           ; BSR set to: 0
  4065                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4066  001BCE  0E5D               	movlw	low _dbuf
  4067  001BD0  25B3               	addwf	efgtoa@i& (0+255),w,b
  4068  001BD2  6ED9               	movwf	fsr2l,c
  4069  001BD4  0E01               	movlw	high _dbuf
  4070  001BD6  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4071  001BD8  6EDA               	movwf	fsr2h,c
  4072  001BDA  C0B9  F005         	movff	efgtoa@e,___awmod@dividend
  4073  001BDE  C0BA  F006         	movff	efgtoa@e+1,___awmod@dividend+1
  4074  001BE2  0E00               	movlw	0
  4075  001BE4  6E08               	movwf	(___awmod@divisor+1)^0,c
  4076  001BE6  0E0A               	movlw	10
  4077  001BE8  6E07               	movwf	___awmod@divisor^0,c
  4078  001BEA  EC0C  F01E         	call	___awmod	;wreg free
  4079  001BEE  5005               	movf	?___awmod^0,w,c
  4080  001BF0  0F30               	addlw	48
  4081  001BF2  6EDF               	movwf	indf2,c
  4082  001BF4                     
  4083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4084  001BF4  C0B9  F005         	movff	efgtoa@e,___awdiv@dividend
  4085  001BF8  C0BA  F006         	movff	efgtoa@e+1,___awdiv@dividend+1
  4086  001BFC  0E00               	movlw	0
  4087  001BFE  6E08               	movwf	(___awdiv@divisor+1)^0,c
  4088  001C00  0E0A               	movlw	10
  4089  001C02  6E07               	movwf	___awdiv@divisor^0,c
  4090  001C04  ECEA  F01C         	call	___awdiv	;wreg free
  4091  001C08  C005  F0B9         	movff	?___awdiv,efgtoa@e
  4092  001C0C  C006  F0BA         	movff	?___awdiv+1,efgtoa@e+1
  4093  001C10                     
  4094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4095  001C10  0100               	movlb	0	; () banked
  4096  001C12  07A5               	decf	efgtoa@p& (0+255),f,b
  4097  001C14  A0D8               	btfss	status,0,c
  4098  001C16  07A6               	decf	(efgtoa@p+1)& (0+255),f,b
  4099  001C18                     
  4100                           ; BSR set to: 0
  4101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4102  001C18  07A7               	decf	efgtoa@w& (0+255),f,b
  4103  001C1A  A0D8               	btfss	status,0,c
  4104  001C1C  07A8               	decf	(efgtoa@w+1)& (0+255),f,b
  4105  001C1E                     l7388:
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4109  001C1E  51B9               	movf	efgtoa@e& (0+255),w,b
  4110  001C20  11BA               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4111  001C22  A4D8               	btfss	status,2,c
  4112  001C24  EF16  F00E         	goto	u7891
  4113  001C28  EF18  F00E         	goto	u7890
  4114  001C2C                     u7891:
  4115  001C2C  EFE4  F00D         	goto	l7378
  4116  001C30                     u7890:
  4117  001C30                     
  4118                           ; BSR set to: 0
  4119  001C30  BFA6               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4120  001C32  EF25  F00E         	goto	u7900
  4121  001C36  51A6               	movf	(efgtoa@p+1)& (0+255),w,b
  4122  001C38  E106               	bnz	u7901
  4123  001C3A  05A5               	decf	efgtoa@p& (0+255),w,b
  4124  001C3C  B0D8               	btfsc	status,0,c
  4125  001C3E  EF23  F00E         	goto	u7901
  4126  001C42  EF25  F00E         	goto	u7900
  4127  001C46                     u7901:
  4128  001C46  EFE4  F00D         	goto	l7378
  4129  001C4A                     u7900:
  4130  001C4A                     
  4131                           ; BSR set to: 0
  4132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  4133  001C4A  07B3               	decf	efgtoa@i& (0+255),f,b
  4134  001C4C  A0D8               	btfss	status,0,c
  4135  001C4E  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
  4136  001C50                     
  4137                           ; BSR set to: 0
  4138                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4139  001C50  51A3               	movf	efgtoa@sign& (0+255),w,b
  4140  001C52  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4141  001C54  A4D8               	btfss	status,2,c
  4142  001C56  EF2F  F00E         	goto	u7911
  4143  001C5A  EF31  F00E         	goto	u7910
  4144  001C5E                     u7911:
  4145  001C5E  EF37  F00E         	goto	l7398
  4146  001C62                     u7910:
  4147  001C62                     
  4148                           ; BSR set to: 0
  4149  001C62  0E00               	movlw	0
  4150  001C64  6F90               	movwf	(_efgtoa$2192+1)& (0+255),b
  4151  001C66  0E2B               	movlw	43
  4152  001C68  6F8F               	movwf	_efgtoa$2192& (0+255),b
  4153  001C6A  EF3B  F00E         	goto	l7400
  4154  001C6E                     l7398:
  4155                           
  4156                           ; BSR set to: 0
  4157  001C6E  0E00               	movlw	0
  4158  001C70  6F90               	movwf	(_efgtoa$2192+1)& (0+255),b
  4159  001C72  0E2D               	movlw	45
  4160  001C74  6F8F               	movwf	_efgtoa$2192& (0+255),b
  4161  001C76                     l7400:
  4162                           
  4163                           ; BSR set to: 0
  4164  001C76  0E5D               	movlw	low _dbuf
  4165  001C78  25B3               	addwf	efgtoa@i& (0+255),w,b
  4166  001C7A  6ED9               	movwf	fsr2l,c
  4167  001C7C  0E01               	movlw	high _dbuf
  4168  001C7E  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4169  001C80  6EDA               	movwf	fsr2h,c
  4170  001C82  C08F  FFDF         	movff	_efgtoa$2192,indf2
  4171  001C86                     
  4172                           ; BSR set to: 0
  4173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  4174  001C86  07A7               	decf	efgtoa@w& (0+255),f,b
  4175  001C88  A0D8               	btfss	status,0,c
  4176  001C8A  07A8               	decf	(efgtoa@w+1)& (0+255),f,b
  4177  001C8C                     
  4178                           ; BSR set to: 0
  4179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4180  001C8C  07B3               	decf	efgtoa@i& (0+255),f,b
  4181  001C8E  A0D8               	btfss	status,0,c
  4182  001C90  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
  4183  001C92                     
  4184                           ; BSR set to: 0
  4185  001C92  0EBF               	movlw	191
  4186  001C94  6F84               	movwf	??_efgtoa& (0+255),b
  4187  001C96  0EFF               	movlw	255
  4188  001C98  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  4189  001C9A  5183               	movf	efgtoa@c& (0+255),w,b
  4190  001C9C  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  4191  001C9E  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  4192  001CA0  5184               	movf	??_efgtoa& (0+255),w,b
  4193  001CA2  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  4194  001CA4  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  4195  001CA6  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4196  001CA8  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  4197  001CAA  E10A               	bnz	u7920
  4198  001CAC  0E1A               	movlw	26
  4199  001CAE  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  4200  001CB0  A0D8               	btfss	status,0,c
  4201  001CB2  EF5D  F00E         	goto	u7921
  4202  001CB6  EF60  F00E         	goto	u7920
  4203  001CBA                     u7921:
  4204  001CBA  0E01               	movlw	1
  4205  001CBC  EF61  F00E         	goto	u7930
  4206  001CC0                     u7920:
  4207  001CC0  0E00               	movlw	0
  4208  001CC2                     u7930:
  4209  001CC2  6F93               	movwf	_efgtoa$2194& (0+255),b
  4210  001CC4  6B94               	clrf	(_efgtoa$2194+1)& (0+255),b
  4211  001CC6                     
  4212                           ; BSR set to: 0
  4213  001CC6  5193               	movf	_efgtoa$2194& (0+255),w,b
  4214  001CC8  1194               	iorwf	(_efgtoa$2194+1)& (0+255),w,b
  4215  001CCA  A4D8               	btfss	status,2,c
  4216  001CCC  EF6A  F00E         	goto	u7941
  4217  001CD0  EF6C  F00E         	goto	u7940
  4218  001CD4                     u7941:
  4219  001CD4  EF72  F00E         	goto	l7414
  4220  001CD8                     u7940:
  4221  001CD8                     
  4222                           ; BSR set to: 0
  4223  001CD8  0E00               	movlw	0
  4224  001CDA  6F92               	movwf	(_efgtoa$2193+1)& (0+255),b
  4225  001CDC  0E65               	movlw	101
  4226  001CDE  6F91               	movwf	_efgtoa$2193& (0+255),b
  4227  001CE0  EF76  F00E         	goto	l7416
  4228  001CE4                     l7414:
  4229                           
  4230                           ; BSR set to: 0
  4231  001CE4  0E00               	movlw	0
  4232  001CE6  6F92               	movwf	(_efgtoa$2193+1)& (0+255),b
  4233  001CE8  0E45               	movlw	69
  4234  001CEA  6F91               	movwf	_efgtoa$2193& (0+255),b
  4235  001CEC                     l7416:
  4236                           
  4237                           ; BSR set to: 0
  4238  001CEC  0E5D               	movlw	low _dbuf
  4239  001CEE  25B3               	addwf	efgtoa@i& (0+255),w,b
  4240  001CF0  6ED9               	movwf	fsr2l,c
  4241  001CF2  0E01               	movlw	high _dbuf
  4242  001CF4  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4243  001CF6  6EDA               	movwf	fsr2h,c
  4244  001CF8  C091  FFDF         	movff	_efgtoa$2193,indf2
  4245  001CFC                     
  4246                           ; BSR set to: 0
  4247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  4248  001CFC  07A7               	decf	efgtoa@w& (0+255),f,b
  4249  001CFE  A0D8               	btfss	status,0,c
  4250  001D00  07A8               	decf	(efgtoa@w+1)& (0+255),f,b
  4251  001D02                     
  4252                           ; BSR set to: 0
  4253                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4254  001D02  0E5D               	movlw	low _dbuf
  4255  001D04  25BB               	addwf	efgtoa@n& (0+255),w,b
  4256  001D06  6E05               	movwf	strcpy@dest^0,c
  4257  001D08  0E01               	movlw	high _dbuf
  4258  001D0A  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4259  001D0C  6E06               	movwf	(strcpy@dest+1)^0,c
  4260  001D0E  0E5D               	movlw	low _dbuf
  4261  001D10  25B3               	addwf	efgtoa@i& (0+255),w,b
  4262  001D12  6E07               	movwf	strcpy@src^0,c
  4263  001D14  0E01               	movlw	high _dbuf
  4264  001D16  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4265  001D18  6E08               	movwf	(strcpy@src+1)^0,c
  4266  001D1A  EC34  F022         	call	_strcpy	;wreg free
  4267  001D1E                     l7422:
  4268                           
  4269                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  4270  001D1E  C07D  F017         	movff	efgtoa@fp,pad@fp
  4271  001D22  C07E  F018         	movff	efgtoa@fp+1,pad@fp+1
  4272  001D26  0E5D               	movlw	low _dbuf
  4273  001D28  6E19               	movwf	pad@buf^0,c
  4274  001D2A  0E01               	movlw	high _dbuf
  4275  001D2C  6E1A               	movwf	(pad@buf+1)^0,c
  4276  001D2E  C0A7  F01B         	movff	efgtoa@w,pad@p
  4277  001D32  C0A8  F01C         	movff	efgtoa@w+1,pad@p+1
  4278  001D36  EC87  F01C         	call	_pad	;wreg free
  4279  001D3A  C017  F07D         	movff	?_pad,?_efgtoa
  4280  001D3E  C018  F07E         	movff	?_pad+1,?_efgtoa+1
  4281  001D42                     l1521:
  4282  001D42  0012               	return		;funcret
  4283  001D44                     __end_of_efgtoa:
  4284                           	callstack 0
  4285                           
  4286 ;; *************** function _tolower *****************
  4287 ;; Defined at:
  4288 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  c               2   10[COMRAM] int 
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;		None
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  2   10[COMRAM] int 
  4295 ;; Registers used:
  4296 ;;		wreg, status,2, status,0
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4302 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4303 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4304 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4306 ;;Total ram usage:        8 bytes
  4307 ;; Hardware stack levels used: 1
  4308 ;; Hardware stack levels required when called: 5
  4309 ;; This function calls:
  4310 ;;		_isupper
  4311 ;; This function is called by:
  4312 ;;		_efgtoa
  4313 ;;		_vfpfcnvrt
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text6
  4318  004408                     __ptext6:
  4319                           	callstack 0
  4320  004408                     _tolower:
  4321                           	callstack 22
  4322  004408  0EBF               	movlw	191
  4323  00440A  6E0D               	movwf	??_tolower^0,c
  4324  00440C  0EFF               	movlw	255
  4325  00440E  6E0E               	movwf	(??_tolower+1)^0,c
  4326  004410  C00B  F00F         	movff	tolower@c,??_tolower+2
  4327  004414  C00C  F010         	movff	tolower@c+1,??_tolower+3
  4328  004418  500D               	movf	??_tolower^0,w,c
  4329  00441A  260F               	addwf	(??_tolower+2)^0,f,c
  4330  00441C  500E               	movf	(??_tolower+1)^0,w,c
  4331  00441E  2210               	addwfc	(??_tolower+3)^0,f,c
  4332  004420  5010               	movf	(??_tolower+3)^0,w,c
  4333  004422  E10A               	bnz	u7240
  4334  004424  0E1A               	movlw	26
  4335  004426  5C0F               	subwf	(??_tolower+2)^0,w,c
  4336  004428  A0D8               	btfss	status,0,c
  4337  00442A  EF19  F022         	goto	u7241
  4338  00442E  EF1C  F022         	goto	u7240
  4339  004432                     u7241:
  4340  004432  0E01               	movlw	1
  4341  004434  EF1D  F022         	goto	u7250
  4342  004438                     u7240:
  4343  004438  0E00               	movlw	0
  4344  00443A                     u7250:
  4345  00443A  6E11               	movwf	_tolower$2335^0,c
  4346  00443C  6A12               	clrf	(_tolower$2335+1)^0,c
  4347  00443E  5011               	movf	_tolower$2335^0,w,c
  4348  004440  1012               	iorwf	(_tolower$2335+1)^0,w,c
  4349  004442  B4D8               	btfsc	status,2,c
  4350  004444  EF26  F022         	goto	u7261
  4351  004448  EF28  F022         	goto	u7260
  4352  00444C                     u7261:
  4353  00444C  EF2F  F022         	goto	l1748
  4354  004450                     u7260:
  4355  004450  0E20               	movlw	32
  4356  004452  100B               	iorwf	tolower@c^0,w,c
  4357  004454  6E0B               	movwf	?_tolower^0,c
  4358  004456  500C               	movf	(tolower@c+1)^0,w,c
  4359  004458  6E0C               	movwf	(?_tolower+1)^0,c
  4360  00445A  EF33  F022         	goto	l1753
  4361  00445E                     l1748:
  4362  00445E  C00B  F00B         	movff	tolower@c,?_tolower
  4363  004462  C00C  F00C         	movff	tolower@c+1,?_tolower+1
  4364  004466                     l1753:
  4365  004466  0012               	return		;funcret
  4366  004468                     __end_of_tolower:
  4367                           	callstack 0
  4368                           
  4369 ;; *************** function _isupper *****************
  4370 ;; Defined at:
  4371 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;  c               2    4[COMRAM] int 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;		None
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  2    4[COMRAM] int 
  4378 ;; Registers used:
  4379 ;;		wreg, status,2, status,0
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4385 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4387 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4388 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;Total ram usage:        6 bytes
  4390 ;; Hardware stack levels used: 1
  4391 ;; Hardware stack levels required when called: 4
  4392 ;; This function calls:
  4393 ;;		Nothing
  4394 ;; This function is called by:
  4395 ;;		_efgtoa
  4396 ;;		_vfpfcnvrt
  4397 ;;		_tolower
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           	psect	text7
  4402  0047CC                     __ptext7:
  4403                           	callstack 0
  4404  0047CC                     _isupper:
  4405                           	callstack 22
  4406  0047CC  0EBF               	movlw	191
  4407  0047CE  6E07               	movwf	??_isupper^0,c
  4408  0047D0  0EFF               	movlw	255
  4409  0047D2  6E08               	movwf	(??_isupper+1)^0,c
  4410  0047D4  C005  F009         	movff	isupper@c,??_isupper+2
  4411  0047D8  C006  F00A         	movff	isupper@c+1,??_isupper+3
  4412  0047DC  5007               	movf	??_isupper^0,w,c
  4413  0047DE  2609               	addwf	(??_isupper+2)^0,f,c
  4414  0047E0  5008               	movf	(??_isupper+1)^0,w,c
  4415  0047E2  220A               	addwfc	(??_isupper+3)^0,f,c
  4416  0047E4  500A               	movf	(??_isupper+3)^0,w,c
  4417  0047E6  E10A               	bnz	u6390
  4418  0047E8  0E1A               	movlw	26
  4419  0047EA  5C09               	subwf	(??_isupper+2)^0,w,c
  4420  0047EC  A0D8               	btfss	status,0,c
  4421  0047EE  EFFB  F023         	goto	u6391
  4422  0047F2  EFFE  F023         	goto	u6390
  4423  0047F6                     u6391:
  4424  0047F6  0E01               	movlw	1
  4425  0047F8  EFFF  F023         	goto	u6400
  4426  0047FC                     u6390:
  4427  0047FC  0E00               	movlw	0
  4428  0047FE                     u6400:
  4429  0047FE  6E05               	movwf	?_isupper^0,c
  4430  004800  6A06               	clrf	(?_isupper+1)^0,c
  4431  004802  0012               	return		;funcret
  4432  004804                     __end_of_isupper:
  4433                           	callstack 0
  4434                           
  4435 ;; *************** function _strcpy *****************
  4436 ;; Defined at:
  4437 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  dest            2    4[COMRAM] PTR unsigned char 
  4440 ;;		 -> dbuf(80), 
  4441 ;;  src             2    6[COMRAM] PTR const unsigned char 
  4442 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4443 ;;		 -> dbuf(80), 
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;  d               2   12[COMRAM] PTR unsigned char 
  4446 ;;		 -> dbuf(80), 
  4447 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4448 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4449 ;;		 -> dbuf(80), 
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  2    4[COMRAM] PTR unsigned char 
  4452 ;; Registers used:
  4453 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4459 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4460 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4461 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;Total ram usage:       10 bytes
  4464 ;; Hardware stack levels used: 1
  4465 ;; Hardware stack levels required when called: 4
  4466 ;; This function calls:
  4467 ;;		Nothing
  4468 ;; This function is called by:
  4469 ;;		_efgtoa
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473                           	psect	text8
  4474  004468                     __ptext8:
  4475                           	callstack 0
  4476  004468                     _strcpy:
  4477                           	callstack 22
  4478  004468  C007  F00B         	movff	strcpy@src,strcpy@s
  4479  00446C  C008  F00C         	movff	strcpy@src+1,strcpy@s+1
  4480  004470  C005  F00D         	movff	strcpy@dest,strcpy@d
  4481  004474  C006  F00E         	movff	strcpy@dest+1,strcpy@d+1
  4482  004478                     l7062:
  4483  004478  500B               	movf	strcpy@s^0,w,c
  4484  00447A  6E09               	movwf	??_strcpy^0,c
  4485  00447C  500C               	movf	(strcpy@s+1)^0,w,c
  4486  00447E  6E0A               	movwf	(??_strcpy+1)^0,c
  4487  004480  4A0B               	infsnz	strcpy@s^0,f,c
  4488  004482  2A0C               	incf	(strcpy@s+1)^0,f,c
  4489  004484  C009  FFF6         	movff	??_strcpy,tblptrl
  4490  004488  C00A  FFF7         	movff	??_strcpy+1,tblptrh
  4491  00448C  0E00               	movlw	low (__smallconst shr (0+16))
  4492  00448E  6EF8               	movwf	tblptru,c
  4493  004490  C00D  FFD9         	movff	strcpy@d,fsr2l
  4494  004494  C00E  FFDA         	movff	strcpy@d+1,fsr2h
  4495  004498  4A0D               	infsnz	strcpy@d^0,f,c
  4496  00449A  2A0E               	incf	(strcpy@d+1)^0,f,c
  4497  00449C  0E0F               	movlw	(high __ramtop+-1)
  4498  00449E  64F7               	cpfsgt	tblptrh,c
  4499  0044A0  D003               	bra	u7227
  4500  0044A2  0008               	tblrd		*
  4501  0044A4  50F5               	movf	tablat,w,c
  4502  0044A6  D005               	bra	u7220
  4503  0044A8                     u7227:
  4504  0044A8  CFF6 FFE9          	movff	tblptrl,fsr0l
  4505  0044AC  CFF7 FFEA          	movff	tblptrh,fsr0h
  4506  0044B0  50EF               	movf	indf0,w,c
  4507  0044B2                     u7220:
  4508  0044B2  6EDF               	movwf	indf2,c
  4509  0044B4  50DF               	movf	indf2,w,c
  4510  0044B6  A4D8               	btfss	status,2,c
  4511  0044B8  EF60  F022         	goto	u7231
  4512  0044BC  EF62  F022         	goto	u7230
  4513  0044C0                     u7231:
  4514  0044C0  EF3C  F022         	goto	l7062
  4515  0044C4                     u7230:
  4516  0044C4  0012               	return		;funcret
  4517  0044C6                     __end_of_strcpy:
  4518                           	callstack 0
  4519                           
  4520 ;; *************** function _pad *****************
  4521 ;; Defined at:
  4522 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4523 ;; Parameters:    Size  Location     Type
  4524 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4525 ;;		 -> NULL(0), 
  4526 ;;  buf             2   24[COMRAM] PTR unsigned char 
  4527 ;;		 -> dbuf(80), 
  4528 ;;  p               2   26[COMRAM] int 
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;  w               2   31[COMRAM] int 
  4531 ;;  i               2   29[COMRAM] int 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  2   22[COMRAM] int 
  4534 ;; Registers used:
  4535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4541 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4542 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4543 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4544 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;Total ram usage:       11 bytes
  4546 ;; Hardware stack levels used: 1
  4547 ;; Hardware stack levels required when called: 8
  4548 ;; This function calls:
  4549 ;;		_fputc
  4550 ;;		_fputs
  4551 ;;		_strlen
  4552 ;; This function is called by:
  4553 ;;		_efgtoa
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557                           	psect	text9
  4558  00390E                     __ptext9:
  4559                           	callstack 0
  4560  00390E                     _pad:
  4561                           	callstack 18
  4562  00390E                     
  4563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4564  00390E  0100               	movlb	0	; () banked
  4565  003910  A1ED               	btfss	_flags& (0+255),0,b
  4566  003912  EF8D  F01C         	goto	u7111
  4567  003916  EF8F  F01C         	goto	u7110
  4568  00391A                     u7111:
  4569  00391A  EF99  F01C         	goto	l7020
  4570  00391E                     u7110:
  4571  00391E                     
  4572                           ; BSR set to: 0
  4573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4574  00391E  C019  F010         	movff	pad@buf,fputs@s
  4575  003922  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4576  003926  C017  F012         	movff	pad@fp,fputs@fp
  4577  00392A  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4578  00392E  EC61  F023         	call	_fputs	;wreg free
  4579  003932                     l7020:
  4580                           
  4581                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4582  003932  BE1C               	btfsc	(pad@p+1)^0,7,c
  4583  003934  EF9E  F01C         	goto	u7121
  4584  003938  EFA0  F01C         	goto	u7120
  4585  00393C                     u7121:
  4586  00393C  EFA6  F01C         	goto	l7024
  4587  003940                     u7120:
  4588  003940  C01B  F020         	movff	pad@p,pad@w
  4589  003944  C01C  F021         	movff	pad@p+1,pad@w+1
  4590  003948  EFAA  F01C         	goto	l1498
  4591  00394C                     l7024:
  4592  00394C  0E00               	movlw	0
  4593  00394E  6E21               	movwf	(pad@w+1)^0,c
  4594  003950  0E00               	movlw	0
  4595  003952  6E20               	movwf	pad@w^0,c
  4596  003954                     l1498:
  4597                           
  4598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4599  003954  0E00               	movlw	0
  4600  003956  6E1F               	movwf	(pad@i+1)^0,c
  4601  003958  0E00               	movlw	0
  4602  00395A  6E1E               	movwf	pad@i^0,c
  4603                           
  4604                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4605  00395C  EFBC  F01C         	goto	l7030
  4606  003960                     l7026:
  4607                           
  4608                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4609  003960  0E00               	movlw	0
  4610  003962  6E08               	movwf	(fputc@c+1)^0,c
  4611  003964  0E20               	movlw	32
  4612  003966  6E07               	movwf	fputc@c^0,c
  4613  003968  C017  F009         	movff	pad@fp,fputc@fp
  4614  00396C  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  4615  003970  EC60  F01F         	call	_fputc	;wreg free
  4616  003974                     
  4617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4618  003974  4A1E               	infsnz	pad@i^0,f,c
  4619  003976  2A1F               	incf	(pad@i+1)^0,f,c
  4620  003978                     l7030:
  4621                           
  4622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4623  003978  5020               	movf	pad@w^0,w,c
  4624  00397A  5C1E               	subwf	pad@i^0,w,c
  4625  00397C  501F               	movf	(pad@i+1)^0,w,c
  4626  00397E  0A80               	xorlw	128
  4627  003980  6E1D               	movwf	??_pad^0,c
  4628  003982  5021               	movf	(pad@w+1)^0,w,c
  4629  003984  0A80               	xorlw	128
  4630  003986  581D               	subwfb	??_pad^0,w,c
  4631  003988  A0D8               	btfss	status,0,c
  4632  00398A  EFC9  F01C         	goto	u7131
  4633  00398E  EFCB  F01C         	goto	u7130
  4634  003992                     u7131:
  4635  003992  EFB0  F01C         	goto	l7026
  4636  003996                     u7130:
  4637  003996                     
  4638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4639  003996  0100               	movlb	0	; () banked
  4640  003998  B1ED               	btfsc	_flags& (0+255),0,b
  4641  00399A  EFD1  F01C         	goto	u7141
  4642  00399E  EFD3  F01C         	goto	u7140
  4643  0039A2                     u7141:
  4644  0039A2  EFDD  F01C         	goto	l7034
  4645  0039A6                     u7140:
  4646  0039A6                     
  4647                           ; BSR set to: 0
  4648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4649  0039A6  C019  F010         	movff	pad@buf,fputs@s
  4650  0039AA  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4651  0039AE  C017  F012         	movff	pad@fp,fputs@fp
  4652  0039B2  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4653  0039B6  EC61  F023         	call	_fputs	;wreg free
  4654  0039BA                     l7034:
  4655                           
  4656                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4657  0039BA  C019  F005         	movff	pad@buf,strlen@s
  4658  0039BE  C01A  F006         	movff	pad@buf+1,strlen@s+1
  4659  0039C2  EC56  F024         	call	_strlen	;wreg free
  4660  0039C6  5020               	movf	pad@w^0,w,c
  4661  0039C8  2405               	addwf	?_strlen^0,w,c
  4662  0039CA  6E17               	movwf	?_pad^0,c
  4663  0039CC  5021               	movf	(pad@w+1)^0,w,c
  4664  0039CE  2006               	addwfc	(?_strlen+1)^0,w,c
  4665  0039D0  6E18               	movwf	(?_pad+1)^0,c
  4666  0039D2  0012               	return		;funcret
  4667  0039D4                     __end_of_pad:
  4668                           	callstack 0
  4669                           
  4670 ;; *************** function _strlen *****************
  4671 ;; Defined at:
  4672 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4675 ;;		 -> dbuf(80), 
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4678 ;;		 -> dbuf(80), 
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  2    4[COMRAM] unsigned int 
  4681 ;; Registers used:
  4682 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 0/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4688 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4689 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4691 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4692 ;;Total ram usage:        4 bytes
  4693 ;; Hardware stack levels used: 1
  4694 ;; Hardware stack levels required when called: 4
  4695 ;; This function calls:
  4696 ;;		Nothing
  4697 ;; This function is called by:
  4698 ;;		_pad
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           	psect	text10
  4703  0048AC                     __ptext10:
  4704                           	callstack 0
  4705  0048AC                     _strlen:
  4706                           	callstack 21
  4707  0048AC  C005  F007         	movff	strlen@s,strlen@a
  4708  0048B0  C006  F008         	movff	strlen@s+1,strlen@a+1
  4709  0048B4  EF5E  F024         	goto	l6556
  4710  0048B8                     l6554:
  4711  0048B8  4A05               	infsnz	strlen@s^0,f,c
  4712  0048BA  2A06               	incf	(strlen@s+1)^0,f,c
  4713  0048BC                     l6556:
  4714  0048BC  C005  FFD9         	movff	strlen@s,fsr2l
  4715  0048C0  C006  FFDA         	movff	strlen@s+1,fsr2h
  4716  0048C4  50DF               	movf	indf2,w,c
  4717  0048C6  A4D8               	btfss	status,2,c
  4718  0048C8  EF68  F024         	goto	u6381
  4719  0048CC  EF6A  F024         	goto	u6380
  4720  0048D0                     u6381:
  4721  0048D0  EF5C  F024         	goto	l6554
  4722  0048D4                     u6380:
  4723  0048D4  5007               	movf	strlen@a^0,w,c
  4724  0048D6  5C05               	subwf	strlen@s^0,w,c
  4725  0048D8  6E05               	movwf	?_strlen^0,c
  4726  0048DA  5008               	movf	(strlen@a+1)^0,w,c
  4727  0048DC  5806               	subwfb	(strlen@s+1)^0,w,c
  4728  0048DE  6E06               	movwf	(?_strlen+1)^0,c
  4729  0048E0  0012               	return		;funcret
  4730  0048E2                     __end_of_strlen:
  4731                           	callstack 0
  4732                           
  4733 ;; *************** function _fputs *****************
  4734 ;; Defined at:
  4735 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4738 ;;		 -> dbuf(80), 
  4739 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4740 ;;		 -> NULL(0), 
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;  i               2   20[COMRAM] int 
  4743 ;;  c               1   19[COMRAM] unsigned char 
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  2   15[COMRAM] int 
  4746 ;; Registers used:
  4747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4753 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4756 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4757 ;;Total ram usage:        7 bytes
  4758 ;; Hardware stack levels used: 1
  4759 ;; Hardware stack levels required when called: 7
  4760 ;; This function calls:
  4761 ;;		_fputc
  4762 ;; This function is called by:
  4763 ;;		_pad
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text11
  4768  0046C2                     __ptext11:
  4769                           	callstack 0
  4770  0046C2                     _fputs:
  4771                           	callstack 18
  4772  0046C2  0E00               	movlw	0
  4773  0046C4  6E16               	movwf	(fputs@i+1)^0,c
  4774  0046C6  0E00               	movlw	0
  4775  0046C8  6E15               	movwf	fputs@i^0,c
  4776  0046CA  EF72  F023         	goto	l6550
  4777  0046CE                     l6546:
  4778  0046CE  C014  F007         	movff	fputs@c,fputc@c
  4779  0046D2  6A08               	clrf	(fputc@c+1)^0,c
  4780  0046D4  C012  F009         	movff	fputs@fp,fputc@fp
  4781  0046D8  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  4782  0046DC  EC60  F01F         	call	_fputc	;wreg free
  4783  0046E0  4A15               	infsnz	fputs@i^0,f,c
  4784  0046E2  2A16               	incf	(fputs@i+1)^0,f,c
  4785  0046E4                     l6550:
  4786  0046E4  5015               	movf	fputs@i^0,w,c
  4787  0046E6  2410               	addwf	fputs@s^0,w,c
  4788  0046E8  6ED9               	movwf	fsr2l,c
  4789  0046EA  5016               	movf	(fputs@i+1)^0,w,c
  4790  0046EC  2011               	addwfc	(fputs@s+1)^0,w,c
  4791  0046EE  6EDA               	movwf	fsr2h,c
  4792  0046F0  50DF               	movf	indf2,w,c
  4793  0046F2  6E14               	movwf	fputs@c^0,c
  4794  0046F4  5014               	movf	fputs@c^0,w,c
  4795  0046F6  A4D8               	btfss	status,2,c
  4796  0046F8  EF80  F023         	goto	u6371
  4797  0046FC  EF82  F023         	goto	u6370
  4798  004700                     u6371:
  4799  004700  EF67  F023         	goto	l6546
  4800  004704                     u6370:
  4801  004704  0012               	return		;funcret
  4802  004706                     __end_of_fputs:
  4803                           	callstack 0
  4804                           
  4805 ;; *************** function _fputc *****************
  4806 ;; Defined at:
  4807 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;  c               2    6[COMRAM] int 
  4810 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  4811 ;;		 -> NULL(0), 
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;		None
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  2    6[COMRAM] int 
  4816 ;; Registers used:
  4817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4823 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4825 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4826 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;Total ram usage:        9 bytes
  4828 ;; Hardware stack levels used: 1
  4829 ;; Hardware stack levels required when called: 6
  4830 ;; This function calls:
  4831 ;;		_putch
  4832 ;; This function is called by:
  4833 ;;		_pad
  4834 ;;		_vfpfcnvrt
  4835 ;;		_fputs
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           	psect	text12
  4840  003EC0                     __ptext12:
  4841                           	callstack 0
  4842  003EC0                     _fputc:
  4843                           	callstack 21
  4844  003EC0  5009               	movf	fputc@fp^0,w,c
  4845  003EC2  100A               	iorwf	(fputc@fp+1)^0,w,c
  4846  003EC4  B4D8               	btfsc	status,2,c
  4847  003EC6  EF67  F01F         	goto	u5941
  4848  003ECA  EF69  F01F         	goto	u5940
  4849  003ECE                     u5941:
  4850  003ECE  EF72  F01F         	goto	l6332
  4851  003ED2                     u5940:
  4852  003ED2  5009               	movf	fputc@fp^0,w,c
  4853  003ED4  100A               	iorwf	(fputc@fp+1)^0,w,c
  4854  003ED6  A4D8               	btfss	status,2,c
  4855  003ED8  EF70  F01F         	goto	u5951
  4856  003EDC  EF72  F01F         	goto	u5950
  4857  003EE0                     u5951:
  4858  003EE0  EF77  F01F         	goto	l6334
  4859  003EE4                     u5950:
  4860  003EE4                     l6332:
  4861  003EE4  5007               	movf	fputc@c^0,w,c
  4862  003EE6  EC18  F026         	call	_putch
  4863  003EEA  EFAA  F01F         	goto	l1714
  4864  003EEE                     l6334:
  4865  003EEE  EE20 F004          	lfsr	2,4
  4866  003EF2  5009               	movf	fputc@fp^0,w,c
  4867  003EF4  26D9               	addwf	fsr2l,f,c
  4868  003EF6  500A               	movf	(fputc@fp+1)^0,w,c
  4869  003EF8  22DA               	addwfc	fsr2h,f,c
  4870  003EFA  50DE               	movf	postinc2,w,c
  4871  003EFC  10DE               	iorwf	postinc2,w,c
  4872  003EFE  B4D8               	btfsc	status,2,c
  4873  003F00  EF84  F01F         	goto	u5961
  4874  003F04  EF86  F01F         	goto	u5960
  4875  003F08                     u5961:
  4876  003F08  EFA1  F01F         	goto	l6338
  4877  003F0C                     u5960:
  4878  003F0C  EE20 F004          	lfsr	2,4
  4879  003F10  5009               	movf	fputc@fp^0,w,c
  4880  003F12  26D9               	addwf	fsr2l,f,c
  4881  003F14  500A               	movf	(fputc@fp+1)^0,w,c
  4882  003F16  22DA               	addwfc	fsr2h,f,c
  4883  003F18  EE10 F002          	lfsr	1,2
  4884  003F1C  5009               	movf	fputc@fp^0,w,c
  4885  003F1E  26E1               	addwf	fsr1l,f,c
  4886  003F20  500A               	movf	(fputc@fp+1)^0,w,c
  4887  003F22  22E2               	addwfc	fsr1h,f,c
  4888  003F24  50DE               	movf	postinc2,w,c
  4889  003F26  5CE6               	subwf	postinc1,w,c
  4890  003F28  50E6               	movf	postinc1,w,c
  4891  003F2A  0A80               	xorlw	128
  4892  003F2C  6E0F               	movwf	(??_fputc+4)^0,c
  4893  003F2E  50DE               	movf	postinc2,w,c
  4894  003F30  0A80               	xorlw	128
  4895  003F32  580F               	subwfb	(??_fputc+4)^0,w,c
  4896  003F34  B0D8               	btfsc	status,0,c
  4897  003F36  EF9F  F01F         	goto	u5971
  4898  003F3A  EFA1  F01F         	goto	u5970
  4899  003F3E                     u5971:
  4900  003F3E  EFAA  F01F         	goto	l1714
  4901  003F42                     u5970:
  4902  003F42                     l6338:
  4903  003F42  EE20 F002          	lfsr	2,2
  4904  003F46  5009               	movf	fputc@fp^0,w,c
  4905  003F48  26D9               	addwf	fsr2l,f,c
  4906  003F4A  500A               	movf	(fputc@fp+1)^0,w,c
  4907  003F4C  22DA               	addwfc	fsr2h,f,c
  4908  003F4E  2ADE               	incf	postinc2,f,c
  4909  003F50  0E00               	movlw	0
  4910  003F52  22DD               	addwfc	postdec2,f,c
  4911  003F54                     l1714:
  4912  003F54  0012               	return		;funcret
  4913  003F56                     __end_of_fputc:
  4914                           	callstack 0
  4915                           
  4916 ;; *************** function _putch *****************
  4917 ;; Defined at:
  4918 ;;		line 201 in file "mcc_generated_files/eusart.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;  txData          1    wreg     unsigned char 
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;  txData          1    5[COMRAM] unsigned char 
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  1    wreg      void 
  4925 ;; Registers used:
  4926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4935 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4936 ;;Total ram usage:        1 bytes
  4937 ;; Hardware stack levels used: 1
  4938 ;; Hardware stack levels required when called: 5
  4939 ;; This function calls:
  4940 ;;		_EUSART_Write
  4941 ;; This function is called by:
  4942 ;;		_fputc
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           	psect	text13
  4947  004C30                     __ptext13:
  4948                           	callstack 0
  4949  004C30                     _putch:
  4950                           	callstack 21
  4951                           
  4952                           ;incstack = 0
  4953                           ;putch@txData stored from wreg
  4954  004C30  6E06               	movwf	putch@txData^0,c
  4955  004C32                     
  4956                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  4957  004C32  5006               	movf	putch@txData^0,w,c
  4958  004C34  ECBE  F022         	call	_EUSART_Write
  4959  004C38  0012               	return		;funcret
  4960  004C3A                     __end_of_putch:
  4961                           	callstack 0
  4962                           
  4963 ;; *************** function _EUSART_Write *****************
  4964 ;; Defined at:
  4965 ;;		line 173 in file "mcc_generated_files/eusart.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  txData          1    wreg     unsigned char 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;  txData          1    4[COMRAM] unsigned char 
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;Total ram usage:        1 bytes
  4984 ;; Hardware stack levels used: 1
  4985 ;; Hardware stack levels required when called: 4
  4986 ;; This function calls:
  4987 ;;		Nothing
  4988 ;; This function is called by:
  4989 ;;		_putch
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text14
  4994  00457C                     __ptext14:
  4995                           	callstack 0
  4996  00457C                     _EUSART_Write:
  4997                           	callstack 21
  4998                           
  4999                           ;incstack = 0
  5000                           ;EUSART_Write@txData stored from wreg
  5001  00457C  6E05               	movwf	EUSART_Write@txData^0,c
  5002  00457E                     l6310:
  5003                           
  5004                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  5005  00457E  0100               	movlb	0	; () banked
  5006  004580  51FE               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
  5007  004582  B4D8               	btfsc	status,2,c
  5008  004584  EFC6  F022         	goto	u5911
  5009  004588  EFC8  F022         	goto	u5910
  5010  00458C                     u5911:
  5011  00458C  EFBF  F022         	goto	l6310
  5012  004590                     u5910:
  5013  004590                     
  5014                           ; BSR set to: 0
  5015                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TX1IE)
  5016  004590  B89D               	btfsc	157,4,c	;volatile
  5017  004592  EFCD  F022         	goto	u5921
  5018  004596  EFCF  F022         	goto	u5920
  5019  00459A                     u5921:
  5020  00459A  EFD3  F022         	goto	l595
  5021  00459E                     u5920:
  5022  00459E                     
  5023                           ; BSR set to: 0
  5024                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  5025  00459E  C005  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  5026                           
  5027                           ;mcc_generated_files/eusart.c: 182:     }
  5028  0045A2  EFE8  F022         	goto	l6324
  5029  0045A6                     l595:
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TX1IE = 0;
  5033  0045A6  989D               	bcf	157,4,c	;volatile
  5034  0045A8                     
  5035                           ; BSR set to: 0
  5036                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  5037  0045A8  0E3E               	movlw	low _eusartTxBuffer
  5038  0045AA  245A               	addwf	_eusartTxHead^0,w,c	;volatile
  5039  0045AC  6ED9               	movwf	fsr2l,c
  5040  0045AE  6ADA               	clrf	fsr2h,c
  5041  0045B0  0E01               	movlw	high _eusartTxBuffer
  5042  0045B2  22DA               	addwfc	fsr2h,f,c
  5043  0045B4  C005  FFDF         	movff	EUSART_Write@txData,indf2
  5044  0045B8                     
  5045                           ; BSR set to: 0
  5046  0045B8  2A5A               	incf	_eusartTxHead^0,f,c	;volatile
  5047  0045BA                     
  5048                           ; BSR set to: 0
  5049                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  5050  0045BA  0E07               	movlw	7
  5051  0045BC  645A               	cpfsgt	_eusartTxHead^0,c	;volatile
  5052  0045BE  EFE3  F022         	goto	u5931
  5053  0045C2  EFE5  F022         	goto	u5930
  5054  0045C6                     u5931:
  5055  0045C6  EFE7  F022         	goto	l6322
  5056  0045CA                     u5930:
  5057  0045CA                     
  5058                           ; BSR set to: 0
  5059                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  5060  0045CA  0E00               	movlw	0
  5061  0045CC  6E5A               	movwf	_eusartTxHead^0,c	;volatile
  5062  0045CE                     l6322:
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  5066  0045CE  07FE               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
  5067  0045D0                     l6324:
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TX1IE = 1;
  5071  0045D0  889D               	bsf	157,4,c	;volatile
  5072  0045D2                     
  5073                           ; BSR set to: 0
  5074  0045D2  0012               	return		;funcret
  5075  0045D4                     __end_of_EUSART_Write:
  5076                           	callstack 0
  5077                           
  5078 ;; *************** function _floorf *****************
  5079 ;; Defined at:
  5080 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;  x               4   75[COMRAM] float 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;  u               4    6[BANK0 ] struct .
  5085 ;;  m               4    0[BANK0 ] unsigned long 
  5086 ;;  e               2    4[BANK0 ] int 
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  4   75[COMRAM] float 
  5089 ;; Registers used:
  5090 ;;		wreg, status,2, status,0
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5096 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5097 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5098 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5099 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5100 ;;Total ram usage:       20 bytes
  5101 ;; Hardware stack levels used: 1
  5102 ;; Hardware stack levels required when called: 4
  5103 ;; This function calls:
  5104 ;;		Nothing
  5105 ;; This function is called by:
  5106 ;;		_efgtoa
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           	psect	text15
  5111  002E78                     __ptext15:
  5112                           	callstack 0
  5113  002E78                     _floorf:
  5114                           	callstack 22
  5115  002E78  C146  F066         	movff	floorf@F527,floorf@u
  5116  002E7C  C147  F067         	movff	floorf@F527+1,floorf@u+1
  5117  002E80  C148  F068         	movff	floorf@F527+2,floorf@u+2
  5118  002E84  C149  F069         	movff	floorf@F527+3,floorf@u+3
  5119  002E88  C04C  F066         	movff	floorf@x,floorf@u
  5120  002E8C  C04D  F067         	movff	floorf@x+1,floorf@u+1
  5121  002E90  C04E  F068         	movff	floorf@x+2,floorf@u+2
  5122  002E94  C04F  F069         	movff	floorf@x+3,floorf@u+3
  5123  002E98  0E81               	movlw	129
  5124  002E9A  6E50               	movwf	??_floorf^0,c
  5125  002E9C  0EFF               	movlw	255
  5126  002E9E  6E51               	movwf	(??_floorf+1)^0,c
  5127  002EA0  C066  F052         	movff	floorf@u,??_floorf+2
  5128  002EA4  C067  F053         	movff	floorf@u+1,??_floorf+3
  5129  002EA8  C068  F054         	movff	floorf@u+2,??_floorf+4
  5130  002EAC  C069  F055         	movff	floorf@u+3,??_floorf+5
  5131  002EB0  0E18               	movlw	24
  5132  002EB2  EF60  F017         	goto	u7270
  5133  002EB6                     u7275:
  5134  002EB6  90D8               	bcf	status,0,c
  5135  002EB8  3255               	rrcf	(??_floorf+5)^0,f,c
  5136  002EBA  3254               	rrcf	(??_floorf+4)^0,f,c
  5137  002EBC  3253               	rrcf	(??_floorf+3)^0,f,c
  5138  002EBE  3252               	rrcf	(??_floorf+2)^0,f,c
  5139  002EC0                     u7270:
  5140  002EC0  2EE8               	decfsz	wreg,f,c
  5141  002EC2  EF5B  F017         	goto	u7275
  5142  002EC6  5052               	movf	(??_floorf+2)^0,w,c
  5143  002EC8  2450               	addwf	??_floorf^0,w,c
  5144  002ECA  0100               	movlb	0	; () banked
  5145  002ECC  6F64               	movwf	floorf@e& (0+255),b
  5146  002ECE  0E00               	movlw	0
  5147  002ED0  2051               	addwfc	(??_floorf+1)^0,w,c
  5148  002ED2  6F65               	movwf	(floorf@e+1)& (0+255),b
  5149  002ED4  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  5150  002ED6  EF76  F017         	goto	u7281
  5151  002EDA  5165               	movf	(floorf@e+1)& (0+255),w,b
  5152  002EDC  E109               	bnz	u7280
  5153  002EDE  0E17               	movlw	23
  5154  002EE0  5D64               	subwf	floorf@e& (0+255),w,b
  5155  002EE2  A0D8               	btfss	status,0,c
  5156  002EE4  EF76  F017         	goto	u7281
  5157  002EE8  EF78  F017         	goto	u7280
  5158  002EEC                     u7281:
  5159  002EEC  EF82  F017         	goto	l7080
  5160  002EF0                     u7280:
  5161  002EF0                     l7078:
  5162                           
  5163                           ; BSR set to: 0
  5164  002EF0  C04C  F04C         	movff	floorf@x,?_floorf
  5165  002EF4  C04D  F04D         	movff	floorf@x+1,?_floorf+1
  5166  002EF8  C04E  F04E         	movff	floorf@x+2,?_floorf+2
  5167  002EFC  C04F  F04F         	movff	floorf@x+3,?_floorf+3
  5168  002F00  EF46  F018         	goto	l1675
  5169  002F04                     l7080:
  5170                           
  5171                           ; BSR set to: 0
  5172  002F04  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  5173  002F06  EF87  F017         	goto	u7291
  5174  002F0A  EF89  F017         	goto	u7290
  5175  002F0E                     u7291:
  5176  002F0E  EFFA  F017         	goto	l7090
  5177  002F12                     u7290:
  5178  002F12                     
  5179                           ; BSR set to: 0
  5180  002F12  C064  F050         	movff	floorf@e,??_floorf
  5181  002F16  0EFF               	movlw	255
  5182  002F18  6E51               	movwf	(??_floorf+1)^0,c
  5183  002F1A  0EFF               	movlw	255
  5184  002F1C  6E52               	movwf	(??_floorf+2)^0,c
  5185  002F1E  0E7F               	movlw	127
  5186  002F20  6E53               	movwf	(??_floorf+3)^0,c
  5187  002F22  0E00               	movlw	0
  5188  002F24  6E54               	movwf	(??_floorf+4)^0,c
  5189  002F26                     u7305:
  5190  002F26  6650               	tstfsz	??_floorf^0,c
  5191  002F28  EF98  F017         	goto	u7306
  5192  002F2C  EFA0  F017         	goto	u7307
  5193  002F30                     u7306:
  5194  002F30  3454               	rlcf	(??_floorf+4)^0,w,c
  5195  002F32  3254               	rrcf	(??_floorf+4)^0,f,c
  5196  002F34  3253               	rrcf	(??_floorf+3)^0,f,c
  5197  002F36  3252               	rrcf	(??_floorf+2)^0,f,c
  5198  002F38  3251               	rrcf	(??_floorf+1)^0,f,c
  5199  002F3A  2E50               	decfsz	??_floorf^0,f,c
  5200  002F3C  EF93  F017         	goto	u7305
  5201  002F40                     u7307:
  5202  002F40  C051  F060         	movff	??_floorf+1,floorf@m
  5203  002F44  C052  F061         	movff	??_floorf+2,floorf@m+1
  5204  002F48  C053  F062         	movff	??_floorf+3,floorf@m+2
  5205  002F4C  C054  F063         	movff	??_floorf+4,floorf@m+3
  5206  002F50  0100               	movlb	0	; () banked
  5207  002F52  5160               	movf	floorf@m& (0+255),w,b
  5208  002F54  1566               	andwf	floorf@u& (0+255),w,b
  5209  002F56  6E50               	movwf	??_floorf^0,c
  5210  002F58  5161               	movf	(floorf@m+1)& (0+255),w,b
  5211  002F5A  1567               	andwf	(floorf@u+1)& (0+255),w,b
  5212  002F5C  6E51               	movwf	(??_floorf+1)^0,c
  5213  002F5E  5162               	movf	(floorf@m+2)& (0+255),w,b
  5214  002F60  1568               	andwf	(floorf@u+2)& (0+255),w,b
  5215  002F62  6E52               	movwf	(??_floorf+2)^0,c
  5216  002F64  5163               	movf	(floorf@m+3)& (0+255),w,b
  5217  002F66  1569               	andwf	(floorf@u+3)& (0+255),w,b
  5218  002F68  6E53               	movwf	(??_floorf+3)^0,c
  5219  002F6A  5050               	movf	??_floorf^0,w,c
  5220  002F6C  1051               	iorwf	(??_floorf+1)^0,w,c
  5221  002F6E  1052               	iorwf	(??_floorf+2)^0,w,c
  5222  002F70  1053               	iorwf	(??_floorf+3)^0,w,c
  5223  002F72  A4D8               	btfss	status,2,c
  5224  002F74  EFBE  F017         	goto	u7311
  5225  002F78  EFC0  F017         	goto	u7310
  5226  002F7C                     u7311:
  5227  002F7C  EFC2  F017         	goto	l7086
  5228  002F80                     u7310:
  5229  002F80  EF78  F017         	goto	l7078
  5230  002F84                     l7086:
  5231                           
  5232                           ; BSR set to: 0
  5233  002F84  C066  F050         	movff	floorf@u,??_floorf
  5234  002F88  C067  F051         	movff	floorf@u+1,??_floorf+1
  5235  002F8C  C068  F052         	movff	floorf@u+2,??_floorf+2
  5236  002F90  C069  F053         	movff	floorf@u+3,??_floorf+3
  5237  002F94  0E20               	movlw	32
  5238  002F96  EFD2  F017         	goto	u7320
  5239  002F9A                     u7325:
  5240  002F9A  90D8               	bcf	status,0,c
  5241  002F9C  3253               	rrcf	(??_floorf+3)^0,f,c
  5242  002F9E  3252               	rrcf	(??_floorf+2)^0,f,c
  5243  002FA0  3251               	rrcf	(??_floorf+1)^0,f,c
  5244  002FA2  3250               	rrcf	??_floorf^0,f,c
  5245  002FA4                     u7320:
  5246  002FA4  2EE8               	decfsz	wreg,f,c
  5247  002FA6  EFCD  F017         	goto	u7325
  5248  002FAA  5050               	movf	??_floorf^0,w,c
  5249  002FAC  1051               	iorwf	(??_floorf+1)^0,w,c
  5250  002FAE  1052               	iorwf	(??_floorf+2)^0,w,c
  5251  002FB0  1053               	iorwf	(??_floorf+3)^0,w,c
  5252  002FB2  B4D8               	btfsc	status,2,c
  5253  002FB4  EFDE  F017         	goto	u7331
  5254  002FB8  EFE0  F017         	goto	u7330
  5255  002FBC                     u7331:
  5256  002FBC  EFE8  F017         	goto	l1678
  5257  002FC0                     u7330:
  5258  002FC0                     
  5259                           ; BSR set to: 0
  5260  002FC0  5160               	movf	floorf@m& (0+255),w,b
  5261  002FC2  2766               	addwf	floorf@u& (0+255),f,b
  5262  002FC4  5161               	movf	(floorf@m+1)& (0+255),w,b
  5263  002FC6  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  5264  002FC8  5162               	movf	(floorf@m+2)& (0+255),w,b
  5265  002FCA  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  5266  002FCC  5163               	movf	(floorf@m+3)& (0+255),w,b
  5267  002FCE  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  5268  002FD0                     l1678:
  5269                           
  5270                           ; BSR set to: 0
  5271  002FD0  1D60               	comf	floorf@m& (0+255),w,b
  5272  002FD2  6E50               	movwf	??_floorf^0,c
  5273  002FD4  1D61               	comf	(floorf@m+1)& (0+255),w,b
  5274  002FD6  6E51               	movwf	(??_floorf+1)^0,c
  5275  002FD8  1D62               	comf	(floorf@m+2)& (0+255),w,b
  5276  002FDA  6E52               	movwf	(??_floorf+2)^0,c
  5277  002FDC  1D63               	comf	(floorf@m+3)& (0+255),w,b
  5278  002FDE  6E53               	movwf	(??_floorf+3)^0,c
  5279  002FE0  5050               	movf	??_floorf^0,w,c
  5280  002FE2  1766               	andwf	floorf@u& (0+255),f,b
  5281  002FE4  5051               	movf	(??_floorf+1)^0,w,c
  5282  002FE6  1767               	andwf	(floorf@u+1)& (0+255),f,b
  5283  002FE8  5052               	movf	(??_floorf+2)^0,w,c
  5284  002FEA  1768               	andwf	(floorf@u+2)& (0+255),f,b
  5285  002FEC  5053               	movf	(??_floorf+3)^0,w,c
  5286  002FEE  1769               	andwf	(floorf@u+3)& (0+255),f,b
  5287  002FF0  EF3E  F018         	goto	l7098
  5288  002FF4                     l7090:
  5289                           
  5290                           ; BSR set to: 0
  5291  002FF4  C066  F050         	movff	floorf@u,??_floorf
  5292  002FF8  C067  F051         	movff	floorf@u+1,??_floorf+1
  5293  002FFC  C068  F052         	movff	floorf@u+2,??_floorf+2
  5294  003000  C069  F053         	movff	floorf@u+3,??_floorf+3
  5295  003004  0E20               	movlw	32
  5296  003006  EF0A  F018         	goto	u7340
  5297  00300A                     u7345:
  5298  00300A  90D8               	bcf	status,0,c
  5299  00300C  3253               	rrcf	(??_floorf+3)^0,f,c
  5300  00300E  3252               	rrcf	(??_floorf+2)^0,f,c
  5301  003010  3251               	rrcf	(??_floorf+1)^0,f,c
  5302  003012  3250               	rrcf	??_floorf^0,f,c
  5303  003014                     u7340:
  5304  003014  2EE8               	decfsz	wreg,f,c
  5305  003016  EF05  F018         	goto	u7345
  5306  00301A  5050               	movf	??_floorf^0,w,c
  5307  00301C  1051               	iorwf	(??_floorf+1)^0,w,c
  5308  00301E  1052               	iorwf	(??_floorf+2)^0,w,c
  5309  003020  1053               	iorwf	(??_floorf+3)^0,w,c
  5310  003022  A4D8               	btfss	status,2,c
  5311  003024  EF16  F018         	goto	u7351
  5312  003028  EF18  F018         	goto	u7350
  5313  00302C                     u7351:
  5314  00302C  EF22  F018         	goto	l7094
  5315  003030                     u7350:
  5316  003030                     
  5317                           ; BSR set to: 0
  5318  003030  0E00               	movlw	0
  5319  003032  6F66               	movwf	floorf@u& (0+255),b
  5320  003034  0E00               	movlw	0
  5321  003036  6F67               	movwf	(floorf@u+1)& (0+255),b
  5322  003038  0E00               	movlw	0
  5323  00303A  6F68               	movwf	(floorf@u+2)& (0+255),b
  5324  00303C  0E00               	movlw	0
  5325  00303E  6F69               	movwf	(floorf@u+3)& (0+255),b
  5326  003040  EF3E  F018         	goto	l7098
  5327  003044                     l7094:
  5328                           
  5329                           ; BSR set to: 0
  5330  003044  90D8               	bcf	status,0,c
  5331  003046  3566               	rlcf	floorf@u& (0+255),w,b
  5332  003048  6E50               	movwf	??_floorf^0,c
  5333  00304A  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  5334  00304C  6E51               	movwf	(??_floorf+1)^0,c
  5335  00304E  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  5336  003050  6E52               	movwf	(??_floorf+2)^0,c
  5337  003052  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  5338  003054  6E53               	movwf	(??_floorf+3)^0,c
  5339  003056  5050               	movf	??_floorf^0,w,c
  5340  003058  1051               	iorwf	(??_floorf+1)^0,w,c
  5341  00305A  1052               	iorwf	(??_floorf+2)^0,w,c
  5342  00305C  1053               	iorwf	(??_floorf+3)^0,w,c
  5343  00305E  B4D8               	btfsc	status,2,c
  5344  003060  EF34  F018         	goto	u7361
  5345  003064  EF36  F018         	goto	u7360
  5346  003068                     u7361:
  5347  003068  EF3E  F018         	goto	l7098
  5348  00306C                     u7360:
  5349  00306C                     
  5350                           ; BSR set to: 0
  5351  00306C  0E00               	movlw	0
  5352  00306E  6F66               	movwf	floorf@u& (0+255),b
  5353  003070  0E00               	movlw	0
  5354  003072  6F67               	movwf	(floorf@u+1)& (0+255),b
  5355  003074  0E80               	movlw	128
  5356  003076  6F68               	movwf	(floorf@u+2)& (0+255),b
  5357  003078  0EBF               	movlw	191
  5358  00307A  6F69               	movwf	(floorf@u+3)& (0+255),b
  5359  00307C                     l7098:
  5360                           
  5361                           ; BSR set to: 0
  5362  00307C  C066  F04C         	movff	floorf@u,?_floorf
  5363  003080  C067  F04D         	movff	floorf@u+1,?_floorf+1
  5364  003084  C068  F04E         	movff	floorf@u+2,?_floorf+2
  5365  003088  C069  F04F         	movff	floorf@u+3,?_floorf+3
  5366  00308C                     l1675:
  5367                           
  5368                           ; BSR set to: 0
  5369  00308C  0012               	return		;funcret
  5370  00308E                     __end_of_floorf:
  5371                           	callstack 0
  5372                           
  5373 ;; *************** function ___fpclassifyf *****************
  5374 ;; Defined at:
  5375 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;  x               4    4[COMRAM] float 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  u               4   14[COMRAM] struct .
  5380 ;;  e               2   12[COMRAM] int 
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  2    4[COMRAM] int 
  5383 ;; Registers used:
  5384 ;;		wreg, status,2, status,0
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5390 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5391 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5392 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5393 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5394 ;;Total ram usage:       14 bytes
  5395 ;; Hardware stack levels used: 1
  5396 ;; Hardware stack levels required when called: 4
  5397 ;; This function calls:
  5398 ;;		Nothing
  5399 ;; This function is called by:
  5400 ;;		_efgtoa
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404                           	psect	text16
  5405  003734                     __ptext16:
  5406                           	callstack 0
  5407  003734                     ___fpclassifyf:
  5408                           	callstack 22
  5409  003734  C14A  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5410  003738  C14B  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5411  00373C  C14C  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5412  003740  C14D  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5413  003744  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  5414  003748  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5415  00374C  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5416  003750  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5417  003754  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5418  003758  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5419  00375C  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5420  003760  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5421  003764  0E18               	movlw	24
  5422  003766  EFBA  F01B         	goto	u7150
  5423  00376A                     u7155:
  5424  00376A  90D8               	bcf	status,0,c
  5425  00376C  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  5426  00376E  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  5427  003770  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  5428  003772  3209               	rrcf	??___fpclassifyf^0,f,c
  5429  003774                     u7150:
  5430  003774  2EE8               	decfsz	wreg,f,c
  5431  003776  EFB5  F01B         	goto	u7155
  5432  00377A  5009               	movf	??___fpclassifyf^0,w,c
  5433  00377C  6E0D               	movwf	___fpclassifyf@e^0,c
  5434  00377E  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  5435  003780  500D               	movf	___fpclassifyf@e^0,w,c
  5436  003782  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5437  003784  A4D8               	btfss	status,2,c
  5438  003786  EFC7  F01B         	goto	u7161
  5439  00378A  EFC9  F01B         	goto	u7160
  5440  00378E                     u7161:
  5441  00378E  EFE9  F01B         	goto	l7050
  5442  003792                     u7160:
  5443  003792  90D8               	bcf	status,0,c
  5444  003794  340F               	rlcf	___fpclassifyf@u^0,w,c
  5445  003796  6E09               	movwf	??___fpclassifyf^0,c
  5446  003798  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5447  00379A  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  5448  00379C  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5449  00379E  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  5450  0037A0  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5451  0037A2  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  5452  0037A4  5009               	movf	??___fpclassifyf^0,w,c
  5453  0037A6  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5454  0037A8  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5455  0037AA  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5456  0037AC  A4D8               	btfss	status,2,c
  5457  0037AE  EFDB  F01B         	goto	u7171
  5458  0037B2  EFDD  F01B         	goto	u7170
  5459  0037B6                     u7171:
  5460  0037B6  EFE3  F01B         	goto	l7046
  5461  0037BA                     u7170:
  5462  0037BA  0E00               	movlw	0
  5463  0037BC  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5464  0037BE  0E02               	movlw	2
  5465  0037C0  6E05               	movwf	?___fpclassifyf^0,c
  5466  0037C2  EF18  F01C         	goto	l1637
  5467  0037C6                     l7046:
  5468  0037C6  0E00               	movlw	0
  5469  0037C8  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5470  0037CA  0E03               	movlw	3
  5471  0037CC  6E05               	movwf	?___fpclassifyf^0,c
  5472  0037CE  EF18  F01C         	goto	l1637
  5473  0037D2                     l7050:
  5474  0037D2  280D               	incf	___fpclassifyf@e^0,w,c
  5475  0037D4  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5476  0037D6  A4D8               	btfss	status,2,c
  5477  0037D8  EFF0  F01B         	goto	u7181
  5478  0037DC  EFF2  F01B         	goto	u7180
  5479  0037E0                     u7181:
  5480  0037E0  EF14  F01C         	goto	l7056
  5481  0037E4                     u7180:
  5482  0037E4  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5483  0037E8  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5484  0037EC  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5485  0037F0  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5486  0037F4  0E09               	movlw	9
  5487  0037F6                     u7195:
  5488  0037F6  90D8               	bcf	status,0,c
  5489  0037F8  3609               	rlcf	??___fpclassifyf^0,f,c
  5490  0037FA  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  5491  0037FC  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  5492  0037FE  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  5493  003800  2EE8               	decfsz	wreg,f,c
  5494  003802  EFFB  F01B         	goto	u7195
  5495  003806  5009               	movf	??___fpclassifyf^0,w,c
  5496  003808  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5497  00380A  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5498  00380C  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5499  00380E  B4D8               	btfsc	status,2,c
  5500  003810  EF0C  F01C         	goto	u7201
  5501  003814  EF0F  F01C         	goto	u7200
  5502  003818                     u7201:
  5503  003818  0E01               	movlw	1
  5504  00381A  EF10  F01C         	goto	u7210
  5505  00381E                     u7200:
  5506  00381E  0E00               	movlw	0
  5507  003820                     u7210:
  5508  003820  6E05               	movwf	?___fpclassifyf^0,c
  5509  003822  6A06               	clrf	(?___fpclassifyf+1)^0,c
  5510  003824  EF18  F01C         	goto	l1637
  5511  003828                     l7056:
  5512  003828  0E00               	movlw	0
  5513  00382A  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5514  00382C  0E04               	movlw	4
  5515  00382E  6E05               	movwf	?___fpclassifyf^0,c
  5516  003830                     l1637:
  5517  003830  0012               	return		;funcret
  5518  003832                     __end_of___fpclassifyf:
  5519                           	callstack 0
  5520                           
  5521 ;; *************** function ___fltol *****************
  5522 ;; Defined at:
  5523 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;  f1              4    4[COMRAM] int 
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;  exp1            1   13[COMRAM] unsigned char 
  5528 ;;  sign1           1   12[COMRAM] unsigned char 
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  4    4[COMRAM] long 
  5531 ;; Registers used:
  5532 ;;		wreg, status,2, status,0
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5538 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5540 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5542 ;;Total ram usage:       10 bytes
  5543 ;; Hardware stack levels used: 1
  5544 ;; Hardware stack levels required when called: 4
  5545 ;; This function calls:
  5546 ;;		Nothing
  5547 ;; This function is called by:
  5548 ;;		_efgtoa
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           	psect	text17
  5553  003528                     __ptext17:
  5554                           	callstack 0
  5555  003528                     ___fltol:
  5556                           	callstack 22
  5557  003528  3407               	rlcf	(___fltol@f1+2)^0,w,c
  5558  00352A  3408               	rlcf	(___fltol@f1+3)^0,w,c
  5559  00352C  6E0E               	movwf	___fltol@exp1^0,c
  5560  00352E  500E               	movf	___fltol@exp1^0,w,c
  5561  003530  A4D8               	btfss	status,2,c
  5562  003532  EF9D  F01A         	goto	u7041
  5563  003536  EF9F  F01A         	goto	u7040
  5564  00353A                     u7041:
  5565  00353A  EFA9  F01A         	goto	l6978
  5566  00353E                     u7040:
  5567  00353E                     l6974:
  5568  00353E  0E00               	movlw	0
  5569  003540  6E05               	movwf	?___fltol^0,c
  5570  003542  0E00               	movlw	0
  5571  003544  6E06               	movwf	(?___fltol+1)^0,c
  5572  003546  0E00               	movlw	0
  5573  003548  6E07               	movwf	(?___fltol+2)^0,c
  5574  00354A  0E00               	movlw	0
  5575  00354C  6E08               	movwf	(?___fltol+3)^0,c
  5576  00354E  EF16  F01B         	goto	l1076
  5577  003552                     l6978:
  5578  003552  C005  F009         	movff	___fltol@f1,??___fltol
  5579  003556  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  5580  00355A  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  5581  00355E  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  5582  003562  0E20               	movlw	32
  5583  003564  EFB9  F01A         	goto	u7050
  5584  003568                     u7055:
  5585  003568  90D8               	bcf	status,0,c
  5586  00356A  320C               	rrcf	(??___fltol+3)^0,f,c
  5587  00356C  320B               	rrcf	(??___fltol+2)^0,f,c
  5588  00356E  320A               	rrcf	(??___fltol+1)^0,f,c
  5589  003570  3209               	rrcf	??___fltol^0,f,c
  5590  003572                     u7050:
  5591  003572  2EE8               	decfsz	wreg,f,c
  5592  003574  EFB4  F01A         	goto	u7055
  5593  003578  5009               	movf	??___fltol^0,w,c
  5594  00357A  6E0D               	movwf	___fltol@sign1^0,c
  5595  00357C  8E07               	bsf	(___fltol@f1+2)^0,7,c
  5596  00357E  0EFF               	movlw	255
  5597  003580  1605               	andwf	___fltol@f1^0,f,c
  5598  003582  0EFF               	movlw	255
  5599  003584  1606               	andwf	(___fltol@f1+1)^0,f,c
  5600  003586  0EFF               	movlw	255
  5601  003588  1607               	andwf	(___fltol@f1+2)^0,f,c
  5602  00358A  0E00               	movlw	0
  5603  00358C  1608               	andwf	(___fltol@f1+3)^0,f,c
  5604  00358E  0E96               	movlw	150
  5605  003590  5E0E               	subwf	___fltol@exp1^0,f,c
  5606  003592  BE0E               	btfsc	___fltol@exp1^0,7,c
  5607  003594  EFD0  F01A         	goto	u7060
  5608  003598  EFCE  F01A         	goto	u7061
  5609  00359C                     u7061:
  5610  00359C  EFE6  F01A         	goto	l6998
  5611  0035A0                     u7060:
  5612  0035A0  500E               	movf	___fltol@exp1^0,w,c
  5613  0035A2  0A80               	xorlw	128
  5614  0035A4  0F97               	addlw	151
  5615  0035A6  B0D8               	btfsc	status,0,c
  5616  0035A8  EFD8  F01A         	goto	u7071
  5617  0035AC  EFDA  F01A         	goto	u7070
  5618  0035B0                     u7071:
  5619  0035B0  EFDC  F01A         	goto	l6994
  5620  0035B4                     u7070:
  5621  0035B4  EF9F  F01A         	goto	l6974
  5622  0035B8                     l6994:
  5623  0035B8  90D8               	bcf	status,0,c
  5624  0035BA  3208               	rrcf	(___fltol@f1+3)^0,f,c
  5625  0035BC  3207               	rrcf	(___fltol@f1+2)^0,f,c
  5626  0035BE  3206               	rrcf	(___fltol@f1+1)^0,f,c
  5627  0035C0  3205               	rrcf	___fltol@f1^0,f,c
  5628  0035C2  3E0E               	incfsz	___fltol@exp1^0,f,c
  5629  0035C4  EFDC  F01A         	goto	l6994
  5630  0035C8  EFFE  F01A         	goto	l7008
  5631  0035CC                     l6998:
  5632  0035CC  0E1F               	movlw	31
  5633  0035CE  640E               	cpfsgt	___fltol@exp1^0,c
  5634  0035D0  EFEC  F01A         	goto	u7081
  5635  0035D4  EFEE  F01A         	goto	u7080
  5636  0035D8                     u7081:
  5637  0035D8  EFF6  F01A         	goto	l7006
  5638  0035DC                     u7080:
  5639  0035DC  EF9F  F01A         	goto	l6974
  5640  0035E0                     l7004:
  5641  0035E0  90D8               	bcf	status,0,c
  5642  0035E2  3605               	rlcf	___fltol@f1^0,f,c
  5643  0035E4  3606               	rlcf	(___fltol@f1+1)^0,f,c
  5644  0035E6  3607               	rlcf	(___fltol@f1+2)^0,f,c
  5645  0035E8  3608               	rlcf	(___fltol@f1+3)^0,f,c
  5646  0035EA  060E               	decf	___fltol@exp1^0,f,c
  5647  0035EC                     l7006:
  5648  0035EC  500E               	movf	___fltol@exp1^0,w,c
  5649  0035EE  A4D8               	btfss	status,2,c
  5650  0035F0  EFFC  F01A         	goto	u7091
  5651  0035F4  EFFE  F01A         	goto	u7090
  5652  0035F8                     u7091:
  5653  0035F8  EFF0  F01A         	goto	l7004
  5654  0035FC                     u7090:
  5655  0035FC                     l7008:
  5656  0035FC  500D               	movf	___fltol@sign1^0,w,c
  5657  0035FE  B4D8               	btfsc	status,2,c
  5658  003600  EF04  F01B         	goto	u7101
  5659  003604  EF06  F01B         	goto	u7100
  5660  003608                     u7101:
  5661  003608  EF0E  F01B         	goto	l7012
  5662  00360C                     u7100:
  5663  00360C  1E08               	comf	(___fltol@f1+3)^0,f,c
  5664  00360E  1E07               	comf	(___fltol@f1+2)^0,f,c
  5665  003610  1E06               	comf	(___fltol@f1+1)^0,f,c
  5666  003612  6C05               	negf	___fltol@f1^0,c
  5667  003614  0E00               	movlw	0
  5668  003616  2206               	addwfc	(___fltol@f1+1)^0,f,c
  5669  003618  2207               	addwfc	(___fltol@f1+2)^0,f,c
  5670  00361A  2208               	addwfc	(___fltol@f1+3)^0,f,c
  5671  00361C                     l7012:
  5672  00361C  C005  F005         	movff	___fltol@f1,?___fltol
  5673  003620  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  5674  003624  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  5675  003628  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  5676  00362C                     l1076:
  5677  00362C  0012               	return		;funcret
  5678  00362E                     __end_of___fltol:
  5679                           	callstack 0
  5680                           
  5681 ;; *************** function ___flsub *****************
  5682 ;; Defined at:
  5683 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;  b               4   17[BANK0 ] long 
  5686 ;;  a               4   21[BANK0 ] long 
  5687 ;; Auto vars:     Size  Location     Type
  5688 ;;		None
  5689 ;; Return value:  Size  Location     Type
  5690 ;;                  4   17[BANK0 ] long 
  5691 ;; Registers used:
  5692 ;;		wreg, status,2, status,0, cstack
  5693 ;; Tracked objects:
  5694 ;;		On entry : 0/0
  5695 ;;		On exit  : 0/0
  5696 ;;		Unchanged: 0/0
  5697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5698 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5701 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5702 ;;Total ram usage:        8 bytes
  5703 ;; Hardware stack levels used: 1
  5704 ;; Hardware stack levels required when called: 5
  5705 ;; This function calls:
  5706 ;;		___fladd
  5707 ;; This function is called by:
  5708 ;;		_efgtoa
  5709 ;; This function uses a non-reentrant model
  5710 ;;
  5711                           
  5712                           	psect	text18
  5713  00467A                     __ptext18:
  5714                           	callstack 0
  5715  00467A                     ___flsub:
  5716                           	callstack 21
  5717  00467A  0E00               	movlw	0
  5718  00467C  0100               	movlb	0	; () banked
  5719  00467E  1B75               	xorwf	___flsub@a& (0+255),f,b
  5720  004680  0E00               	movlw	0
  5721  004682  1B76               	xorwf	(___flsub@a+1)& (0+255),f,b
  5722  004684  0E00               	movlw	0
  5723  004686  1B77               	xorwf	(___flsub@a+2)& (0+255),f,b
  5724  004688  0E80               	movlw	128
  5725  00468A  1B78               	xorwf	(___flsub@a+3)& (0+255),f,b
  5726  00468C                     
  5727                           ; BSR set to: 0
  5728  00468C  C071  F005         	movff	___flsub@b,___fladd@b
  5729  004690  C072  F006         	movff	___flsub@b+1,___fladd@b+1
  5730  004694  C073  F007         	movff	___flsub@b+2,___fladd@b+2
  5731  004698  C074  F008         	movff	___flsub@b+3,___fladd@b+3
  5732  00469C  C075  F009         	movff	___flsub@a,___fladd@a
  5733  0046A0  C076  F00A         	movff	___flsub@a+1,___fladd@a+1
  5734  0046A4  C077  F00B         	movff	___flsub@a+2,___fladd@a+2
  5735  0046A8  C078  F00C         	movff	___flsub@a+3,___fladd@a+3
  5736  0046AC  ECA2  F00E         	call	___fladd	;wreg free
  5737  0046B0  C005  F071         	movff	?___fladd,?___flsub
  5738  0046B4  C006  F072         	movff	?___fladd+1,?___flsub+1
  5739  0046B8  C007  F073         	movff	?___fladd+2,?___flsub+2
  5740  0046BC  C008  F074         	movff	?___fladd+3,?___flsub+3
  5741  0046C0  0012               	return		;funcret
  5742  0046C2                     __end_of___flsub:
  5743                           	callstack 0
  5744                           
  5745 ;; *************** function ___fladd *****************
  5746 ;; Defined at:
  5747 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;  b               4    4[COMRAM] long 
  5750 ;;  a               4    8[COMRAM] long 
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;  grs             1   19[COMRAM] unsigned char 
  5753 ;;  bexp            1   18[COMRAM] unsigned char 
  5754 ;;  aexp            1   17[COMRAM] unsigned char 
  5755 ;;  signs           1   16[COMRAM] unsigned char 
  5756 ;; Return value:  Size  Location     Type
  5757 ;;                  4    4[COMRAM] unsigned char 
  5758 ;; Registers used:
  5759 ;;		wreg, status,2, status,0
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5765 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5766 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5767 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5768 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5769 ;;Total ram usage:       16 bytes
  5770 ;; Hardware stack levels used: 1
  5771 ;; Hardware stack levels required when called: 4
  5772 ;; This function calls:
  5773 ;;		Nothing
  5774 ;; This function is called by:
  5775 ;;		___flsub
  5776 ;;		_efgtoa
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           	psect	text19
  5781  001D44                     __ptext19:
  5782                           	callstack 0
  5783  001D44                     ___fladd:
  5784                           	callstack 21
  5785  001D44  5008               	movf	(___fladd@b+3)^0,w,c
  5786  001D46  0B80               	andlw	128
  5787  001D48  6E11               	movwf	___fladd@signs^0,c
  5788  001D4A  5008               	movf	(___fladd@b+3)^0,w,c
  5789  001D4C  2408               	addwf	(___fladd@b+3)^0,w,c
  5790  001D4E  6E13               	movwf	___fladd@bexp^0,c
  5791  001D50  AE07               	btfss	(___fladd@b+2)^0,7,c
  5792  001D52  EFAD  F00E         	goto	u5981
  5793  001D56  EFAF  F00E         	goto	u5980
  5794  001D5A                     u5981:
  5795  001D5A  EFB0  F00E         	goto	l6348
  5796  001D5E                     u5980:
  5797  001D5E  8013               	bsf	___fladd@bexp^0,0,c
  5798  001D60                     l6348:
  5799  001D60  5013               	movf	___fladd@bexp^0,w,c
  5800  001D62  B4D8               	btfsc	status,2,c
  5801  001D64  EFB6  F00E         	goto	u5991
  5802  001D68  EFB8  F00E         	goto	u5990
  5803  001D6C                     u5991:
  5804  001D6C  EFCD  F00E         	goto	l6358
  5805  001D70                     u5990:
  5806  001D70  2813               	incf	___fladd@bexp^0,w,c
  5807  001D72  A4D8               	btfss	status,2,c
  5808  001D74  EFBE  F00E         	goto	u6001
  5809  001D78  EFC0  F00E         	goto	u6000
  5810  001D7C                     u6001:
  5811  001D7C  EFC8  F00E         	goto	l6354
  5812  001D80                     u6000:
  5813  001D80  0E00               	movlw	0
  5814  001D82  6E05               	movwf	___fladd@b^0,c
  5815  001D84  0E00               	movlw	0
  5816  001D86  6E06               	movwf	(___fladd@b+1)^0,c
  5817  001D88  0E00               	movlw	0
  5818  001D8A  6E07               	movwf	(___fladd@b+2)^0,c
  5819  001D8C  0E00               	movlw	0
  5820  001D8E  6E08               	movwf	(___fladd@b+3)^0,c
  5821  001D90                     l6354:
  5822  001D90  8E07               	bsf	(___fladd@b+2)^0,7,c
  5823  001D92  0E00               	movlw	0
  5824  001D94  6E08               	movwf	(___fladd@b+3)^0,c
  5825  001D96  EFD5  F00E         	goto	l6360
  5826  001D9A                     l6358:
  5827  001D9A  0E00               	movlw	0
  5828  001D9C  6E05               	movwf	___fladd@b^0,c
  5829  001D9E  0E00               	movlw	0
  5830  001DA0  6E06               	movwf	(___fladd@b+1)^0,c
  5831  001DA2  0E00               	movlw	0
  5832  001DA4  6E07               	movwf	(___fladd@b+2)^0,c
  5833  001DA6  0E00               	movlw	0
  5834  001DA8  6E08               	movwf	(___fladd@b+3)^0,c
  5835  001DAA                     l6360:
  5836  001DAA  500C               	movf	(___fladd@a+3)^0,w,c
  5837  001DAC  0B80               	andlw	128
  5838  001DAE  6E12               	movwf	___fladd@aexp^0,c
  5839  001DB0  5011               	movf	___fladd@signs^0,w,c
  5840  001DB2  1812               	xorwf	___fladd@aexp^0,w,c
  5841  001DB4  B4D8               	btfsc	status,2,c
  5842  001DB6  EFDF  F00E         	goto	u6011
  5843  001DBA  EFE1  F00E         	goto	u6010
  5844  001DBE                     u6011:
  5845  001DBE  EFE2  F00E         	goto	l6366
  5846  001DC2                     u6010:
  5847  001DC2  8C11               	bsf	___fladd@signs^0,6,c
  5848  001DC4                     l6366:
  5849  001DC4  500C               	movf	(___fladd@a+3)^0,w,c
  5850  001DC6  240C               	addwf	(___fladd@a+3)^0,w,c
  5851  001DC8  6E12               	movwf	___fladd@aexp^0,c
  5852  001DCA  AE0B               	btfss	(___fladd@a+2)^0,7,c
  5853  001DCC  EFEA  F00E         	goto	u6021
  5854  001DD0  EFEC  F00E         	goto	u6020
  5855  001DD4                     u6021:
  5856  001DD4  EFED  F00E         	goto	l6372
  5857  001DD8                     u6020:
  5858  001DD8  8012               	bsf	___fladd@aexp^0,0,c
  5859  001DDA                     l6372:
  5860  001DDA  5012               	movf	___fladd@aexp^0,w,c
  5861  001DDC  B4D8               	btfsc	status,2,c
  5862  001DDE  EFF3  F00E         	goto	u6031
  5863  001DE2  EFF5  F00E         	goto	u6030
  5864  001DE6                     u6031:
  5865  001DE6  EF0A  F00F         	goto	l6382
  5866  001DEA                     u6030:
  5867  001DEA  2812               	incf	___fladd@aexp^0,w,c
  5868  001DEC  A4D8               	btfss	status,2,c
  5869  001DEE  EFFB  F00E         	goto	u6041
  5870  001DF2  EFFD  F00E         	goto	u6040
  5871  001DF6                     u6041:
  5872  001DF6  EF05  F00F         	goto	l6378
  5873  001DFA                     u6040:
  5874  001DFA  0E00               	movlw	0
  5875  001DFC  6E09               	movwf	___fladd@a^0,c
  5876  001DFE  0E00               	movlw	0
  5877  001E00  6E0A               	movwf	(___fladd@a+1)^0,c
  5878  001E02  0E00               	movlw	0
  5879  001E04  6E0B               	movwf	(___fladd@a+2)^0,c
  5880  001E06  0E00               	movlw	0
  5881  001E08  6E0C               	movwf	(___fladd@a+3)^0,c
  5882  001E0A                     l6378:
  5883  001E0A  8E0B               	bsf	(___fladd@a+2)^0,7,c
  5884  001E0C  0E00               	movlw	0
  5885  001E0E  6E0C               	movwf	(___fladd@a+3)^0,c
  5886  001E10  EF12  F00F         	goto	l6384
  5887  001E14                     l6382:
  5888  001E14  0E00               	movlw	0
  5889  001E16  6E09               	movwf	___fladd@a^0,c
  5890  001E18  0E00               	movlw	0
  5891  001E1A  6E0A               	movwf	(___fladd@a+1)^0,c
  5892  001E1C  0E00               	movlw	0
  5893  001E1E  6E0B               	movwf	(___fladd@a+2)^0,c
  5894  001E20  0E00               	movlw	0
  5895  001E22  6E0C               	movwf	(___fladd@a+3)^0,c
  5896  001E24                     l6384:
  5897  001E24  5013               	movf	___fladd@bexp^0,w,c
  5898  001E26  5C12               	subwf	___fladd@aexp^0,w,c
  5899  001E28  B0D8               	btfsc	status,0,c
  5900  001E2A  EF19  F00F         	goto	u6051
  5901  001E2E  EF1B  F00F         	goto	u6050
  5902  001E32                     u6051:
  5903  001E32  EF42  F00F         	goto	l6420
  5904  001E36                     u6050:
  5905  001E36  AC11               	btfss	___fladd@signs^0,6,c
  5906  001E38  EF20  F00F         	goto	u6061
  5907  001E3C  EF22  F00F         	goto	u6060
  5908  001E40                     u6061:
  5909  001E40  EF24  F00F         	goto	l6390
  5910  001E44                     u6060:
  5911  001E44  0E80               	movlw	128
  5912  001E46  1A11               	xorwf	___fladd@signs^0,f,c
  5913  001E48                     l6390:
  5914  001E48  C013  F014         	movff	___fladd@bexp,___fladd@grs
  5915  001E4C  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5916  001E50  C014  F012         	movff	___fladd@grs,___fladd@aexp
  5917  001E54  C005  F014         	movff	___fladd@b,___fladd@grs
  5918  001E58  C009  F005         	movff	___fladd@a,___fladd@b
  5919  001E5C  C014  F009         	movff	___fladd@grs,___fladd@a
  5920  001E60  C006  F014         	movff	___fladd@b+1,___fladd@grs
  5921  001E64  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  5922  001E68  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  5923  001E6C  C007  F014         	movff	___fladd@b+2,___fladd@grs
  5924  001E70  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  5925  001E74  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  5926  001E78  C008  F014         	movff	___fladd@b+3,___fladd@grs
  5927  001E7C  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  5928  001E80  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  5929  001E84                     l6420:
  5930  001E84  0E00               	movlw	0
  5931  001E86  6E14               	movwf	___fladd@grs^0,c
  5932  001E88  5013               	movf	___fladd@bexp^0,w,c
  5933  001E8A  C012  F00D         	movff	___fladd@aexp,??___fladd
  5934  001E8E  6A0E               	clrf	(??___fladd+1)^0,c
  5935  001E90  5E0D               	subwf	??___fladd^0,f,c
  5936  001E92  0E00               	movlw	0
  5937  001E94  5A0E               	subwfb	(??___fladd+1)^0,f,c
  5938  001E96  BE0E               	btfsc	(??___fladd+1)^0,7,c
  5939  001E98  EF57  F00F         	goto	u6071
  5940  001E9C  500E               	movf	(??___fladd+1)^0,w,c
  5941  001E9E  E109               	bnz	u6070
  5942  001EA0  0E1A               	movlw	26
  5943  001EA2  5C0D               	subwf	??___fladd^0,w,c
  5944  001EA4  A0D8               	btfss	status,0,c
  5945  001EA6  EF57  F00F         	goto	u6071
  5946  001EAA  EF59  F00F         	goto	u6070
  5947  001EAE                     u6071:
  5948  001EAE  EF90  F00F         	goto	l1308
  5949  001EB2                     u6070:
  5950  001EB2  5005               	movf	___fladd@b^0,w,c
  5951  001EB4  1006               	iorwf	(___fladd@b+1)^0,w,c
  5952  001EB6  1007               	iorwf	(___fladd@b+2)^0,w,c
  5953  001EB8  1008               	iorwf	(___fladd@b+3)^0,w,c
  5954  001EBA  A4D8               	btfss	status,2,c
  5955  001EBC  EF62  F00F         	goto	u6081
  5956  001EC0  EF65  F00F         	goto	u6080
  5957  001EC4                     u6081:
  5958  001EC4  0E01               	movlw	1
  5959  001EC6  EF66  F00F         	goto	u6090
  5960  001ECA                     u6080:
  5961  001ECA  0E00               	movlw	0
  5962  001ECC                     u6090:
  5963  001ECC  6E14               	movwf	___fladd@grs^0,c
  5964  001ECE  0E00               	movlw	0
  5965  001ED0  6E05               	movwf	___fladd@b^0,c
  5966  001ED2  0E00               	movlw	0
  5967  001ED4  6E06               	movwf	(___fladd@b+1)^0,c
  5968  001ED6  0E00               	movlw	0
  5969  001ED8  6E07               	movwf	(___fladd@b+2)^0,c
  5970  001EDA  0E00               	movlw	0
  5971  001EDC  6E08               	movwf	(___fladd@b+3)^0,c
  5972  001EDE  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5973  001EE2  EF99  F00F         	goto	l1307
  5974  001EE6                     l1309:
  5975  001EE6  A014               	btfss	___fladd@grs^0,0,c
  5976  001EE8  EF78  F00F         	goto	u6101
  5977  001EEC  EF7A  F00F         	goto	u6100
  5978  001EF0                     u6101:
  5979  001EF0  EF80  F00F         	goto	l6432
  5980  001EF4                     u6100:
  5981  001EF4  90D8               	bcf	status,0,c
  5982  001EF6  3014               	rrcf	___fladd@grs^0,w,c
  5983  001EF8  0901               	iorlw	1
  5984  001EFA  6E14               	movwf	___fladd@grs^0,c
  5985  001EFC  EF82  F00F         	goto	l6434
  5986  001F00                     l6432:
  5987  001F00  90D8               	bcf	status,0,c
  5988  001F02  3214               	rrcf	___fladd@grs^0,f,c
  5989  001F04                     l6434:
  5990  001F04  A005               	btfss	___fladd@b^0,0,c
  5991  001F06  EF87  F00F         	goto	u6111
  5992  001F0A  EF89  F00F         	goto	u6110
  5993  001F0E                     u6111:
  5994  001F0E  EF8A  F00F         	goto	l6438
  5995  001F12                     u6110:
  5996  001F12  8E14               	bsf	___fladd@grs^0,7,c
  5997  001F14                     l6438:
  5998  001F14  3408               	rlcf	(___fladd@b+3)^0,w,c
  5999  001F16  3208               	rrcf	(___fladd@b+3)^0,f,c
  6000  001F18  3207               	rrcf	(___fladd@b+2)^0,f,c
  6001  001F1A  3206               	rrcf	(___fladd@b+1)^0,f,c
  6002  001F1C  3205               	rrcf	___fladd@b^0,f,c
  6003  001F1E  2A13               	incf	___fladd@bexp^0,f,c
  6004  001F20                     l1308:
  6005  001F20  5012               	movf	___fladd@aexp^0,w,c
  6006  001F22  5C13               	subwf	___fladd@bexp^0,w,c
  6007  001F24  A0D8               	btfss	status,0,c
  6008  001F26  EF97  F00F         	goto	u6121
  6009  001F2A  EF99  F00F         	goto	u6120
  6010  001F2E                     u6121:
  6011  001F2E  EF73  F00F         	goto	l1309
  6012  001F32                     u6120:
  6013  001F32                     l1307:
  6014  001F32  BC11               	btfsc	___fladd@signs^0,6,c
  6015  001F34  EF9E  F00F         	goto	u6131
  6016  001F38  EFA0  F00F         	goto	u6130
  6017  001F3C                     u6131:
  6018  001F3C  EFE0  F00F         	goto	l6466
  6019  001F40                     u6130:
  6020  001F40  5013               	movf	___fladd@bexp^0,w,c
  6021  001F42  A4D8               	btfss	status,2,c
  6022  001F44  EFA6  F00F         	goto	u6141
  6023  001F48  EFA8  F00F         	goto	u6140
  6024  001F4C                     u6141:
  6025  001F4C  EFB2  F00F         	goto	l6448
  6026  001F50                     u6140:
  6027  001F50  0E00               	movlw	0
  6028  001F52  6E05               	movwf	?___fladd^0,c
  6029  001F54  0E00               	movlw	0
  6030  001F56  6E06               	movwf	(?___fladd+1)^0,c
  6031  001F58  0E00               	movlw	0
  6032  001F5A  6E07               	movwf	(?___fladd+2)^0,c
  6033  001F5C  0E00               	movlw	0
  6034  001F5E  6E08               	movwf	(?___fladd+3)^0,c
  6035  001F60  EF01  F011         	goto	l1316
  6036  001F64                     l6448:
  6037  001F64  5009               	movf	___fladd@a^0,w,c
  6038  001F66  2605               	addwf	___fladd@b^0,f,c
  6039  001F68  500A               	movf	(___fladd@a+1)^0,w,c
  6040  001F6A  2206               	addwfc	(___fladd@b+1)^0,f,c
  6041  001F6C  500B               	movf	(___fladd@a+2)^0,w,c
  6042  001F6E  2207               	addwfc	(___fladd@b+2)^0,f,c
  6043  001F70  500C               	movf	(___fladd@a+3)^0,w,c
  6044  001F72  2208               	addwfc	(___fladd@b+3)^0,f,c
  6045  001F74  A008               	btfss	(___fladd@b+3)^0,0,c
  6046  001F76  EFBF  F00F         	goto	u6151
  6047  001F7A  EFC1  F00F         	goto	u6150
  6048  001F7E                     u6151:
  6049  001F7E  EF6D  F010         	goto	l6502
  6050  001F82                     u6150:
  6051  001F82  A014               	btfss	___fladd@grs^0,0,c
  6052  001F84  EFC6  F00F         	goto	u6161
  6053  001F88  EFC8  F00F         	goto	u6160
  6054  001F8C                     u6161:
  6055  001F8C  EFCE  F00F         	goto	l6456
  6056  001F90                     u6160:
  6057  001F90  90D8               	bcf	status,0,c
  6058  001F92  3014               	rrcf	___fladd@grs^0,w,c
  6059  001F94  0901               	iorlw	1
  6060  001F96  6E14               	movwf	___fladd@grs^0,c
  6061  001F98  EFD0  F00F         	goto	l6458
  6062  001F9C                     l6456:
  6063  001F9C  90D8               	bcf	status,0,c
  6064  001F9E  3214               	rrcf	___fladd@grs^0,f,c
  6065  001FA0                     l6458:
  6066  001FA0  A005               	btfss	___fladd@b^0,0,c
  6067  001FA2  EFD5  F00F         	goto	u6171
  6068  001FA6  EFD7  F00F         	goto	u6170
  6069  001FAA                     u6171:
  6070  001FAA  EFD8  F00F         	goto	l6462
  6071  001FAE                     u6170:
  6072  001FAE  8E14               	bsf	___fladd@grs^0,7,c
  6073  001FB0                     l6462:
  6074  001FB0  3408               	rlcf	(___fladd@b+3)^0,w,c
  6075  001FB2  3208               	rrcf	(___fladd@b+3)^0,f,c
  6076  001FB4  3207               	rrcf	(___fladd@b+2)^0,f,c
  6077  001FB6  3206               	rrcf	(___fladd@b+1)^0,f,c
  6078  001FB8  3205               	rrcf	___fladd@b^0,f,c
  6079  001FBA  2A13               	incf	___fladd@bexp^0,f,c
  6080  001FBC  EF6D  F010         	goto	l6502
  6081  001FC0                     l6466:
  6082  001FC0  5009               	movf	___fladd@a^0,w,c
  6083  001FC2  5C05               	subwf	___fladd@b^0,w,c
  6084  001FC4  500A               	movf	(___fladd@a+1)^0,w,c
  6085  001FC6  5806               	subwfb	(___fladd@b+1)^0,w,c
  6086  001FC8  500B               	movf	(___fladd@a+2)^0,w,c
  6087  001FCA  5807               	subwfb	(___fladd@b+2)^0,w,c
  6088  001FCC  5008               	movf	(___fladd@b+3)^0,w,c
  6089  001FCE  0A80               	xorlw	128
  6090  001FD0  6E0D               	movwf	??___fladd^0,c
  6091  001FD2  500C               	movf	(___fladd@a+3)^0,w,c
  6092  001FD4  0A80               	xorlw	128
  6093  001FD6  580D               	subwfb	??___fladd^0,w,c
  6094  001FD8  B0D8               	btfsc	status,0,c
  6095  001FDA  EFF1  F00F         	goto	u6181
  6096  001FDE  EFF3  F00F         	goto	u6180
  6097  001FE2                     u6181:
  6098  001FE2  EF1E  F010         	goto	l6476
  6099  001FE6                     u6180:
  6100  001FE6  5005               	movf	___fladd@b^0,w,c
  6101  001FE8  5C09               	subwf	___fladd@a^0,w,c
  6102  001FEA  6E0D               	movwf	??___fladd^0,c
  6103  001FEC  5006               	movf	(___fladd@b+1)^0,w,c
  6104  001FEE  580A               	subwfb	(___fladd@a+1)^0,w,c
  6105  001FF0  6E0E               	movwf	(??___fladd+1)^0,c
  6106  001FF2  5007               	movf	(___fladd@b+2)^0,w,c
  6107  001FF4  580B               	subwfb	(___fladd@a+2)^0,w,c
  6108  001FF6  6E0F               	movwf	(??___fladd+2)^0,c
  6109  001FF8  5008               	movf	(___fladd@b+3)^0,w,c
  6110  001FFA  580C               	subwfb	(___fladd@a+3)^0,w,c
  6111  001FFC  6E10               	movwf	(??___fladd+3)^0,c
  6112  001FFE  0EFF               	movlw	255
  6113  002000  240D               	addwf	??___fladd^0,w,c
  6114  002002  6E05               	movwf	___fladd@b^0,c
  6115  002004  0EFF               	movlw	255
  6116  002006  200E               	addwfc	(??___fladd+1)^0,w,c
  6117  002008  6E06               	movwf	(___fladd@b+1)^0,c
  6118  00200A  0EFF               	movlw	255
  6119  00200C  200F               	addwfc	(??___fladd+2)^0,w,c
  6120  00200E  6E07               	movwf	(___fladd@b+2)^0,c
  6121  002010  0EFF               	movlw	255
  6122  002012  2010               	addwfc	(??___fladd+3)^0,w,c
  6123  002014  6E08               	movwf	(___fladd@b+3)^0,c
  6124  002016  0E80               	movlw	128
  6125  002018  1A11               	xorwf	___fladd@signs^0,f,c
  6126  00201A  6C14               	negf	___fladd@grs^0,c
  6127  00201C  5014               	movf	___fladd@grs^0,w,c
  6128  00201E  A4D8               	btfss	status,2,c
  6129  002020  EF14  F010         	goto	u6191
  6130  002024  EF16  F010         	goto	u6190
  6131  002028                     u6191:
  6132  002028  EF26  F010         	goto	l1324
  6133  00202C                     u6190:
  6134  00202C  0E01               	movlw	1
  6135  00202E  2605               	addwf	___fladd@b^0,f,c
  6136  002030  0E00               	movlw	0
  6137  002032  2206               	addwfc	(___fladd@b+1)^0,f,c
  6138  002034  2207               	addwfc	(___fladd@b+2)^0,f,c
  6139  002036  2208               	addwfc	(___fladd@b+3)^0,f,c
  6140  002038  EF26  F010         	goto	l1324
  6141  00203C                     l6476:
  6142  00203C  5009               	movf	___fladd@a^0,w,c
  6143  00203E  5E05               	subwf	___fladd@b^0,f,c
  6144  002040  500A               	movf	(___fladd@a+1)^0,w,c
  6145  002042  5A06               	subwfb	(___fladd@b+1)^0,f,c
  6146  002044  500B               	movf	(___fladd@a+2)^0,w,c
  6147  002046  5A07               	subwfb	(___fladd@b+2)^0,f,c
  6148  002048  500C               	movf	(___fladd@a+3)^0,w,c
  6149  00204A  5A08               	subwfb	(___fladd@b+3)^0,f,c
  6150  00204C                     l1324:
  6151  00204C  5005               	movf	___fladd@b^0,w,c
  6152  00204E  1006               	iorwf	(___fladd@b+1)^0,w,c
  6153  002050  1007               	iorwf	(___fladd@b+2)^0,w,c
  6154  002052  1008               	iorwf	(___fladd@b+3)^0,w,c
  6155  002054  A4D8               	btfss	status,2,c
  6156  002056  EF2F  F010         	goto	u6201
  6157  00205A  EF31  F010         	goto	u6200
  6158  00205E                     u6201:
  6159  00205E  EF66  F010         	goto	l6500
  6160  002062                     u6200:
  6161  002062  5014               	movf	___fladd@grs^0,w,c
  6162  002064  A4D8               	btfss	status,2,c
  6163  002066  EF37  F010         	goto	u6211
  6164  00206A  EF39  F010         	goto	u6210
  6165  00206E                     u6211:
  6166  00206E  EF66  F010         	goto	l6500
  6167  002072                     u6210:
  6168  002072  0E00               	movlw	0
  6169  002074  6E05               	movwf	?___fladd^0,c
  6170  002076  0E00               	movlw	0
  6171  002078  6E06               	movwf	(?___fladd+1)^0,c
  6172  00207A  0E00               	movlw	0
  6173  00207C  6E07               	movwf	(?___fladd+2)^0,c
  6174  00207E  0E00               	movlw	0
  6175  002080  6E08               	movwf	(?___fladd+3)^0,c
  6176  002082  EF01  F011         	goto	l1316
  6177  002086                     l6484:
  6178  002086  90D8               	bcf	status,0,c
  6179  002088  3605               	rlcf	___fladd@b^0,f,c
  6180  00208A  3606               	rlcf	(___fladd@b+1)^0,f,c
  6181  00208C  3607               	rlcf	(___fladd@b+2)^0,f,c
  6182  00208E  3608               	rlcf	(___fladd@b+3)^0,f,c
  6183  002090  AE14               	btfss	___fladd@grs^0,7,c
  6184  002092  EF4D  F010         	goto	u6221
  6185  002096  EF4F  F010         	goto	u6220
  6186  00209A                     u6221:
  6187  00209A  EF50  F010         	goto	l6490
  6188  00209E                     u6220:
  6189  00209E  8005               	bsf	___fladd@b^0,0,c
  6190  0020A0                     l6490:
  6191  0020A0  A014               	btfss	___fladd@grs^0,0,c
  6192  0020A2  EF55  F010         	goto	u6231
  6193  0020A6  EF57  F010         	goto	u6230
  6194  0020AA                     u6231:
  6195  0020AA  EF5B  F010         	goto	l6494
  6196  0020AE                     u6230:
  6197  0020AE  80D8               	bsf	status,0,c
  6198  0020B0  3614               	rlcf	___fladd@grs^0,f,c
  6199  0020B2  EF5D  F010         	goto	l6496
  6200  0020B6                     l6494:
  6201  0020B6  90D8               	bcf	status,0,c
  6202  0020B8  3614               	rlcf	___fladd@grs^0,f,c
  6203  0020BA                     l6496:
  6204  0020BA  5013               	movf	___fladd@bexp^0,w,c
  6205  0020BC  B4D8               	btfsc	status,2,c
  6206  0020BE  EF63  F010         	goto	u6241
  6207  0020C2  EF65  F010         	goto	u6240
  6208  0020C6                     u6241:
  6209  0020C6  EF66  F010         	goto	l6500
  6210  0020CA                     u6240:
  6211  0020CA  0613               	decf	___fladd@bexp^0,f,c
  6212  0020CC                     l6500:
  6213  0020CC  AE07               	btfss	(___fladd@b+2)^0,7,c
  6214  0020CE  EF6B  F010         	goto	u6251
  6215  0020D2  EF6D  F010         	goto	u6250
  6216  0020D6                     u6251:
  6217  0020D6  EF43  F010         	goto	l6484
  6218  0020DA                     u6250:
  6219  0020DA                     l6502:
  6220  0020DA  0E00               	movlw	0
  6221  0020DC  6E12               	movwf	___fladd@aexp^0,c
  6222  0020DE  AE14               	btfss	___fladd@grs^0,7,c
  6223  0020E0  EF74  F010         	goto	u6261
  6224  0020E4  EF76  F010         	goto	u6260
  6225  0020E8                     u6261:
  6226  0020E8  EF8E  F010         	goto	l1333
  6227  0020EC                     u6260:
  6228  0020EC  C014  F00D         	movff	___fladd@grs,??___fladd
  6229  0020F0  0E7F               	movlw	127
  6230  0020F2  160D               	andwf	??___fladd^0,f,c
  6231  0020F4  B4D8               	btfsc	status,2,c
  6232  0020F6  EF7F  F010         	goto	u6271
  6233  0020FA  EF81  F010         	goto	u6270
  6234  0020FE                     u6271:
  6235  0020FE  EF85  F010         	goto	l1334
  6236  002102                     u6270:
  6237  002102                     l6508:
  6238  002102  0E01               	movlw	1
  6239  002104  6E12               	movwf	___fladd@aexp^0,c
  6240  002106  EF8E  F010         	goto	l1333
  6241  00210A                     l1334:
  6242  00210A  A005               	btfss	___fladd@b^0,0,c
  6243  00210C  EF8A  F010         	goto	u6281
  6244  002110  EF8C  F010         	goto	u6280
  6245  002114                     u6281:
  6246  002114  EF8E  F010         	goto	l1333
  6247  002118                     u6280:
  6248  002118  EF81  F010         	goto	l6508
  6249  00211C                     l1333:
  6250  00211C  5012               	movf	___fladd@aexp^0,w,c
  6251  00211E  B4D8               	btfsc	status,2,c
  6252  002120  EF94  F010         	goto	u6291
  6253  002124  EF96  F010         	goto	u6290
  6254  002128                     u6291:
  6255  002128  EFC1  F010         	goto	l6520
  6256  00212C                     u6290:
  6257  00212C  0E01               	movlw	1
  6258  00212E  2605               	addwf	___fladd@b^0,f,c
  6259  002130  0E00               	movlw	0
  6260  002132  2206               	addwfc	(___fladd@b+1)^0,f,c
  6261  002134  2207               	addwfc	(___fladd@b+2)^0,f,c
  6262  002136  2208               	addwfc	(___fladd@b+3)^0,f,c
  6263  002138  A008               	btfss	(___fladd@b+3)^0,0,c
  6264  00213A  EFA1  F010         	goto	u6301
  6265  00213E  EFA3  F010         	goto	u6300
  6266  002142                     u6301:
  6267  002142  EFC1  F010         	goto	l6520
  6268  002146                     u6300:
  6269  002146  C005  F00D         	movff	___fladd@b,??___fladd
  6270  00214A  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  6271  00214E  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  6272  002152  C008  F010         	movff	___fladd@b+3,??___fladd+3
  6273  002156  3410               	rlcf	(??___fladd+3)^0,w,c
  6274  002158  3210               	rrcf	(??___fladd+3)^0,f,c
  6275  00215A  320F               	rrcf	(??___fladd+2)^0,f,c
  6276  00215C  320E               	rrcf	(??___fladd+1)^0,f,c
  6277  00215E  320D               	rrcf	??___fladd^0,f,c
  6278  002160  C00D  F005         	movff	??___fladd,___fladd@b
  6279  002164  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  6280  002168  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  6281  00216C  C010  F008         	movff	??___fladd+3,___fladd@b+3
  6282  002170  2813               	incf	___fladd@bexp^0,w,c
  6283  002172  B4D8               	btfsc	status,2,c
  6284  002174  EFBE  F010         	goto	u6311
  6285  002178  EFC0  F010         	goto	u6310
  6286  00217C                     u6311:
  6287  00217C  EFC1  F010         	goto	l6520
  6288  002180                     u6310:
  6289  002180  2A13               	incf	___fladd@bexp^0,f,c
  6290  002182                     l6520:
  6291  002182  2813               	incf	___fladd@bexp^0,w,c
  6292  002184  B4D8               	btfsc	status,2,c
  6293  002186  EFC7  F010         	goto	u6321
  6294  00218A  EFC9  F010         	goto	u6320
  6295  00218E                     u6321:
  6296  00218E  EFD1  F010         	goto	l6524
  6297  002192                     u6320:
  6298  002192  5013               	movf	___fladd@bexp^0,w,c
  6299  002194  A4D8               	btfss	status,2,c
  6300  002196  EFCF  F010         	goto	u6331
  6301  00219A  EFD1  F010         	goto	u6330
  6302  00219E                     u6331:
  6303  00219E  EFE3  F010         	goto	l6528
  6304  0021A2                     u6330:
  6305  0021A2                     l6524:
  6306  0021A2  0E00               	movlw	0
  6307  0021A4  6E05               	movwf	___fladd@b^0,c
  6308  0021A6  0E00               	movlw	0
  6309  0021A8  6E06               	movwf	(___fladd@b+1)^0,c
  6310  0021AA  0E00               	movlw	0
  6311  0021AC  6E07               	movwf	(___fladd@b+2)^0,c
  6312  0021AE  0E00               	movlw	0
  6313  0021B0  6E08               	movwf	(___fladd@b+3)^0,c
  6314  0021B2  5013               	movf	___fladd@bexp^0,w,c
  6315  0021B4  A4D8               	btfss	status,2,c
  6316  0021B6  EFDF  F010         	goto	u6341
  6317  0021BA  EFE1  F010         	goto	u6340
  6318  0021BE                     u6341:
  6319  0021BE  EFE3  F010         	goto	l6528
  6320  0021C2                     u6340:
  6321  0021C2  0E00               	movlw	0
  6322  0021C4  6E11               	movwf	___fladd@signs^0,c
  6323  0021C6                     l6528:
  6324  0021C6  A013               	btfss	___fladd@bexp^0,0,c
  6325  0021C8  EFE8  F010         	goto	u6351
  6326  0021CC  EFEA  F010         	goto	u6350
  6327  0021D0                     u6351:
  6328  0021D0  EFED  F010         	goto	l6532
  6329  0021D4                     u6350:
  6330  0021D4  8E07               	bsf	(___fladd@b+2)^0,7,c
  6331  0021D6  EFEE  F010         	goto	l6534
  6332  0021DA                     l6532:
  6333  0021DA  9E07               	bcf	(___fladd@b+2)^0,7,c
  6334  0021DC                     l6534:
  6335  0021DC  90D8               	bcf	status,0,c
  6336  0021DE  3013               	rrcf	___fladd@bexp^0,w,c
  6337  0021E0  6E08               	movwf	(___fladd@b+3)^0,c
  6338  0021E2  AE11               	btfss	___fladd@signs^0,7,c
  6339  0021E4  EFF6  F010         	goto	u6361
  6340  0021E8  EFF8  F010         	goto	u6360
  6341  0021EC                     u6361:
  6342  0021EC  EFF9  F010         	goto	l6540
  6343  0021F0                     u6360:
  6344  0021F0  8E08               	bsf	(___fladd@b+3)^0,7,c
  6345  0021F2                     l6540:
  6346  0021F2  C005  F005         	movff	___fladd@b,?___fladd
  6347  0021F6  C006  F006         	movff	___fladd@b+1,?___fladd+1
  6348  0021FA  C007  F007         	movff	___fladd@b+2,?___fladd+2
  6349  0021FE  C008  F008         	movff	___fladd@b+3,?___fladd+3
  6350  002202                     l1316:
  6351  002202  0012               	return		;funcret
  6352  002204                     __end_of___fladd:
  6353                           	callstack 0
  6354                           
  6355 ;; *************** function ___flneg *****************
  6356 ;; Defined at:
  6357 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6358 ;; Parameters:    Size  Location     Type
  6359 ;;  f1              4    4[COMRAM] unsigned char 
  6360 ;; Auto vars:     Size  Location     Type
  6361 ;;		None
  6362 ;; Return value:  Size  Location     Type
  6363 ;;                  4    4[COMRAM] unsigned char 
  6364 ;; Registers used:
  6365 ;;		wreg, status,2, status,0
  6366 ;; Tracked objects:
  6367 ;;		On entry : 0/0
  6368 ;;		On exit  : 0/0
  6369 ;;		Unchanged: 0/0
  6370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6371 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6374 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6375 ;;Total ram usage:        4 bytes
  6376 ;; Hardware stack levels used: 1
  6377 ;; Hardware stack levels required when called: 4
  6378 ;; This function calls:
  6379 ;;		Nothing
  6380 ;; This function is called by:
  6381 ;;		_efgtoa
  6382 ;; This function uses a non-reentrant model
  6383 ;;
  6384                           
  6385                           	psect	text20
  6386  004804                     __ptext20:
  6387                           	callstack 0
  6388  004804                     ___flneg:
  6389                           	callstack 22
  6390  004804  5005               	movf	___flneg@f1^0,w,c
  6391  004806  1006               	iorwf	(___flneg@f1+1)^0,w,c
  6392  004808  1007               	iorwf	(___flneg@f1+2)^0,w,c
  6393  00480A  1008               	iorwf	(___flneg@f1+3)^0,w,c
  6394  00480C  B4D8               	btfsc	status,2,c
  6395  00480E  EF0B  F024         	goto	u7031
  6396  004812  EF0D  F024         	goto	u7030
  6397  004816                     u7031:
  6398  004816  EF15  F024         	goto	l6968
  6399  00481A                     u7030:
  6400  00481A  0E00               	movlw	0
  6401  00481C  1A05               	xorwf	___flneg@f1^0,f,c
  6402  00481E  0E00               	movlw	0
  6403  004820  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  6404  004822  0E00               	movlw	0
  6405  004824  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  6406  004826  0E80               	movlw	128
  6407  004828  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  6408  00482A                     l6968:
  6409  00482A  C005  F005         	movff	___flneg@f1,?___flneg
  6410  00482E  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  6411  004832  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  6412  004836  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  6413  00483A  0012               	return		;funcret
  6414  00483C                     __end_of___flneg:
  6415                           	callstack 0
  6416                           
  6417 ;; *************** function ___flge *****************
  6418 ;; Defined at:
  6419 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6420 ;; Parameters:    Size  Location     Type
  6421 ;;  ff1             4   17[BANK0 ] unsigned char 
  6422 ;;  ff2             4   21[BANK0 ] unsigned char 
  6423 ;; Auto vars:     Size  Location     Type
  6424 ;;		None
  6425 ;; Return value:  Size  Location     Type
  6426 ;;		None               void
  6427 ;; Registers used:
  6428 ;;		wreg, status,2, status,0
  6429 ;; Tracked objects:
  6430 ;;		On entry : 0/0
  6431 ;;		On exit  : 0/0
  6432 ;;		Unchanged: 0/0
  6433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6434 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6436 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6437 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6438 ;;Total ram usage:       12 bytes
  6439 ;; Hardware stack levels used: 1
  6440 ;; Hardware stack levels required when called: 4
  6441 ;; This function calls:
  6442 ;;		Nothing
  6443 ;; This function is called by:
  6444 ;;		_efgtoa
  6445 ;; This function uses a non-reentrant model
  6446 ;;
  6447                           
  6448                           	psect	text21
  6449  00362E                     __ptext21:
  6450                           	callstack 0
  6451  00362E                     ___flge:
  6452                           	callstack 22
  6453  00362E  0E00               	movlw	0
  6454  003630  0100               	movlb	0	; () banked
  6455  003632  1571               	andwf	___flge@ff1& (0+255),w,b
  6456  003634  6F79               	movwf	??___flge& (0+255),b
  6457  003636  0E00               	movlw	0
  6458  003638  1572               	andwf	(___flge@ff1+1)& (0+255),w,b
  6459  00363A  6F7A               	movwf	(??___flge+1)& (0+255),b
  6460  00363C  0E80               	movlw	128
  6461  00363E  1573               	andwf	(___flge@ff1+2)& (0+255),w,b
  6462  003640  6F7B               	movwf	(??___flge+2)& (0+255),b
  6463  003642  0E7F               	movlw	127
  6464  003644  1574               	andwf	(___flge@ff1+3)& (0+255),w,b
  6465  003646  6F7C               	movwf	(??___flge+3)& (0+255),b
  6466  003648  5179               	movf	??___flge& (0+255),w,b
  6467  00364A  117A               	iorwf	(??___flge+1)& (0+255),w,b
  6468  00364C  117B               	iorwf	(??___flge+2)& (0+255),w,b
  6469  00364E  117C               	iorwf	(??___flge+3)& (0+255),w,b
  6470  003650  A4D8               	btfss	status,2,c
  6471  003652  EF2D  F01B         	goto	u6981
  6472  003656  EF2F  F01B         	goto	u6980
  6473  00365A                     u6981:
  6474  00365A  EF37  F01B         	goto	l6946
  6475  00365E                     u6980:
  6476  00365E                     
  6477                           ; BSR set to: 0
  6478  00365E  0E00               	movlw	0
  6479  003660  6F71               	movwf	___flge@ff1& (0+255),b
  6480  003662  0E00               	movlw	0
  6481  003664  6F72               	movwf	(___flge@ff1+1)& (0+255),b
  6482  003666  0E00               	movlw	0
  6483  003668  6F73               	movwf	(___flge@ff1+2)& (0+255),b
  6484  00366A  0E00               	movlw	0
  6485  00366C  6F74               	movwf	(___flge@ff1+3)& (0+255),b
  6486  00366E                     l6946:
  6487                           
  6488                           ; BSR set to: 0
  6489  00366E  0E00               	movlw	0
  6490  003670  1575               	andwf	___flge@ff2& (0+255),w,b
  6491  003672  6F79               	movwf	??___flge& (0+255),b
  6492  003674  0E00               	movlw	0
  6493  003676  1576               	andwf	(___flge@ff2+1)& (0+255),w,b
  6494  003678  6F7A               	movwf	(??___flge+1)& (0+255),b
  6495  00367A  0E80               	movlw	128
  6496  00367C  1577               	andwf	(___flge@ff2+2)& (0+255),w,b
  6497  00367E  6F7B               	movwf	(??___flge+2)& (0+255),b
  6498  003680  0E7F               	movlw	127
  6499  003682  1578               	andwf	(___flge@ff2+3)& (0+255),w,b
  6500  003684  6F7C               	movwf	(??___flge+3)& (0+255),b
  6501  003686  5179               	movf	??___flge& (0+255),w,b
  6502  003688  117A               	iorwf	(??___flge+1)& (0+255),w,b
  6503  00368A  117B               	iorwf	(??___flge+2)& (0+255),w,b
  6504  00368C  117C               	iorwf	(??___flge+3)& (0+255),w,b
  6505  00368E  A4D8               	btfss	status,2,c
  6506  003690  EF4C  F01B         	goto	u6991
  6507  003694  EF4E  F01B         	goto	u6990
  6508  003698                     u6991:
  6509  003698  EF56  F01B         	goto	l6950
  6510  00369C                     u6990:
  6511  00369C                     
  6512                           ; BSR set to: 0
  6513  00369C  0E00               	movlw	0
  6514  00369E  6F75               	movwf	___flge@ff2& (0+255),b
  6515  0036A0  0E00               	movlw	0
  6516  0036A2  6F76               	movwf	(___flge@ff2+1)& (0+255),b
  6517  0036A4  0E00               	movlw	0
  6518  0036A6  6F77               	movwf	(___flge@ff2+2)& (0+255),b
  6519  0036A8  0E00               	movlw	0
  6520  0036AA  6F78               	movwf	(___flge@ff2+3)& (0+255),b
  6521  0036AC                     l6950:
  6522                           
  6523                           ; BSR set to: 0
  6524  0036AC  AF74               	btfss	(___flge@ff1+3)& (0+255),7,b
  6525  0036AE  EF5B  F01B         	goto	u7001
  6526  0036B2  EF5D  F01B         	goto	u7000
  6527  0036B6                     u7001:
  6528  0036B6  EF66  F01B         	goto	l6954
  6529  0036BA                     u7000:
  6530  0036BA                     
  6531                           ; BSR set to: 0
  6532  0036BA  6D71               	negf	___flge@ff1& (0+255),b
  6533  0036BC  1F72               	comf	(___flge@ff1+1)& (0+255),f,b
  6534  0036BE  B0D8               	btfsc	status,0,c
  6535  0036C0  2B72               	incf	(___flge@ff1+1)& (0+255),f,b
  6536  0036C2  1F73               	comf	(___flge@ff1+2)& (0+255),f,b
  6537  0036C4  B0D8               	btfsc	status,0,c
  6538  0036C6  2B73               	incf	(___flge@ff1+2)& (0+255),f,b
  6539  0036C8  0E80               	movlw	128
  6540  0036CA  5774               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6541  0036CC                     l6954:
  6542                           
  6543                           ; BSR set to: 0
  6544  0036CC  AF78               	btfss	(___flge@ff2+3)& (0+255),7,b
  6545  0036CE  EF6B  F01B         	goto	u7011
  6546  0036D2  EF6D  F01B         	goto	u7010
  6547  0036D6                     u7011:
  6548  0036D6  EF76  F01B         	goto	l1044
  6549  0036DA                     u7010:
  6550  0036DA                     
  6551                           ; BSR set to: 0
  6552  0036DA  6D75               	negf	___flge@ff2& (0+255),b
  6553  0036DC  1F76               	comf	(___flge@ff2+1)& (0+255),f,b
  6554  0036DE  B0D8               	btfsc	status,0,c
  6555  0036E0  2B76               	incf	(___flge@ff2+1)& (0+255),f,b
  6556  0036E2  1F77               	comf	(___flge@ff2+2)& (0+255),f,b
  6557  0036E4  B0D8               	btfsc	status,0,c
  6558  0036E6  2B77               	incf	(___flge@ff2+2)& (0+255),f,b
  6559  0036E8  0E80               	movlw	128
  6560  0036EA  5778               	subfwb	(___flge@ff2+3)& (0+255),f,b
  6561  0036EC                     l1044:
  6562                           
  6563                           ; BSR set to: 0
  6564  0036EC  0E00               	movlw	0
  6565  0036EE  1B71               	xorwf	___flge@ff1& (0+255),f,b
  6566  0036F0  0E00               	movlw	0
  6567  0036F2  1B72               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6568  0036F4  0E00               	movlw	0
  6569  0036F6  1B73               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6570  0036F8  0E80               	movlw	128
  6571  0036FA  1B74               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6572  0036FC  0E00               	movlw	0
  6573  0036FE  1B75               	xorwf	___flge@ff2& (0+255),f,b
  6574  003700  0E00               	movlw	0
  6575  003702  1B76               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6576  003704  0E00               	movlw	0
  6577  003706  1B77               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6578  003708  0E80               	movlw	128
  6579  00370A  1B78               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6580  00370C  5175               	movf	___flge@ff2& (0+255),w,b
  6581  00370E  5D71               	subwf	___flge@ff1& (0+255),w,b
  6582  003710  5176               	movf	(___flge@ff2+1)& (0+255),w,b
  6583  003712  5972               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6584  003714  5177               	movf	(___flge@ff2+2)& (0+255),w,b
  6585  003716  5973               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6586  003718  5178               	movf	(___flge@ff2+3)& (0+255),w,b
  6587  00371A  5974               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6588  00371C  B0D8               	btfsc	status,0,c
  6589  00371E  EF93  F01B         	goto	u7021
  6590  003722  EF95  F01B         	goto	u7020
  6591  003726                     u7021:
  6592  003726  EF98  F01B         	goto	l6960
  6593  00372A                     u7020:
  6594  00372A                     
  6595                           ; BSR set to: 0
  6596  00372A  90D8               	bcf	status,0,c
  6597  00372C  EF99  F01B         	goto	l1049
  6598  003730                     l6960:
  6599                           
  6600                           ; BSR set to: 0
  6601  003730  80D8               	bsf	status,0,c
  6602  003732                     l1049:
  6603                           
  6604                           ; BSR set to: 0
  6605  003732  0012               	return		;funcret
  6606  003734                     __end_of___flge:
  6607                           	callstack 0
  6608                           
  6609 ;; *************** function ___fleq *****************
  6610 ;; Defined at:
  6611 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6612 ;; Parameters:    Size  Location     Type
  6613 ;;  ff1             4    4[COMRAM] unsigned char 
  6614 ;;  ff2             4    8[COMRAM] unsigned char 
  6615 ;; Auto vars:     Size  Location     Type
  6616 ;;		None
  6617 ;; Return value:  Size  Location     Type
  6618 ;;		None               void
  6619 ;; Registers used:
  6620 ;;		wreg, status,2, status,0
  6621 ;; Tracked objects:
  6622 ;;		On entry : 0/0
  6623 ;;		On exit  : 0/0
  6624 ;;		Unchanged: 0/0
  6625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6626 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6628 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6629 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6630 ;;Total ram usage:       12 bytes
  6631 ;; Hardware stack levels used: 1
  6632 ;; Hardware stack levels required when called: 4
  6633 ;; This function calls:
  6634 ;;		Nothing
  6635 ;; This function is called by:
  6636 ;;		_efgtoa
  6637 ;; This function uses a non-reentrant model
  6638 ;;
  6639                           
  6640                           	psect	text22
  6641  003CC8                     __ptext22:
  6642                           	callstack 0
  6643  003CC8                     ___fleq:
  6644                           	callstack 22
  6645  003CC8  0E00               	movlw	0
  6646  003CCA  1405               	andwf	___fleq@ff1^0,w,c
  6647  003CCC  6E0D               	movwf	??___fleq^0,c
  6648  003CCE  0E00               	movlw	0
  6649  003CD0  1406               	andwf	(___fleq@ff1+1)^0,w,c
  6650  003CD2  6E0E               	movwf	(??___fleq+1)^0,c
  6651  003CD4  0E80               	movlw	128
  6652  003CD6  1407               	andwf	(___fleq@ff1+2)^0,w,c
  6653  003CD8  6E0F               	movwf	(??___fleq+2)^0,c
  6654  003CDA  0E7F               	movlw	127
  6655  003CDC  1408               	andwf	(___fleq@ff1+3)^0,w,c
  6656  003CDE  6E10               	movwf	(??___fleq+3)^0,c
  6657  003CE0  500D               	movf	??___fleq^0,w,c
  6658  003CE2  100E               	iorwf	(??___fleq+1)^0,w,c
  6659  003CE4  100F               	iorwf	(??___fleq+2)^0,w,c
  6660  003CE6  1010               	iorwf	(??___fleq+3)^0,w,c
  6661  003CE8  A4D8               	btfss	status,2,c
  6662  003CEA  EF79  F01E         	goto	u6951
  6663  003CEE  EF7B  F01E         	goto	u6950
  6664  003CF2                     u6951:
  6665  003CF2  EF83  F01E         	goto	l6930
  6666  003CF6                     u6950:
  6667  003CF6  0E00               	movlw	0
  6668  003CF8  6E05               	movwf	___fleq@ff1^0,c
  6669  003CFA  0E00               	movlw	0
  6670  003CFC  6E06               	movwf	(___fleq@ff1+1)^0,c
  6671  003CFE  0E00               	movlw	0
  6672  003D00  6E07               	movwf	(___fleq@ff1+2)^0,c
  6673  003D02  0E00               	movlw	0
  6674  003D04  6E08               	movwf	(___fleq@ff1+3)^0,c
  6675  003D06                     l6930:
  6676  003D06  0E00               	movlw	0
  6677  003D08  1409               	andwf	___fleq@ff2^0,w,c
  6678  003D0A  6E0D               	movwf	??___fleq^0,c
  6679  003D0C  0E00               	movlw	0
  6680  003D0E  140A               	andwf	(___fleq@ff2+1)^0,w,c
  6681  003D10  6E0E               	movwf	(??___fleq+1)^0,c
  6682  003D12  0E80               	movlw	128
  6683  003D14  140B               	andwf	(___fleq@ff2+2)^0,w,c
  6684  003D16  6E0F               	movwf	(??___fleq+2)^0,c
  6685  003D18  0E7F               	movlw	127
  6686  003D1A  140C               	andwf	(___fleq@ff2+3)^0,w,c
  6687  003D1C  6E10               	movwf	(??___fleq+3)^0,c
  6688  003D1E  500D               	movf	??___fleq^0,w,c
  6689  003D20  100E               	iorwf	(??___fleq+1)^0,w,c
  6690  003D22  100F               	iorwf	(??___fleq+2)^0,w,c
  6691  003D24  1010               	iorwf	(??___fleq+3)^0,w,c
  6692  003D26  A4D8               	btfss	status,2,c
  6693  003D28  EF98  F01E         	goto	u6961
  6694  003D2C  EF9A  F01E         	goto	u6960
  6695  003D30                     u6961:
  6696  003D30  EFA2  F01E         	goto	l6934
  6697  003D34                     u6960:
  6698  003D34  0E00               	movlw	0
  6699  003D36  6E09               	movwf	___fleq@ff2^0,c
  6700  003D38  0E00               	movlw	0
  6701  003D3A  6E0A               	movwf	(___fleq@ff2+1)^0,c
  6702  003D3C  0E00               	movlw	0
  6703  003D3E  6E0B               	movwf	(___fleq@ff2+2)^0,c
  6704  003D40  0E00               	movlw	0
  6705  003D42  6E0C               	movwf	(___fleq@ff2+3)^0,c
  6706  003D44                     l6934:
  6707  003D44  5009               	movf	___fleq@ff2^0,w,c
  6708  003D46  1805               	xorwf	___fleq@ff1^0,w,c
  6709  003D48  E10F               	bnz	u6970
  6710  003D4A  500A               	movf	(___fleq@ff2+1)^0,w,c
  6711  003D4C  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  6712  003D4E  E10C               	bnz	u6970
  6713  003D50  500B               	movf	(___fleq@ff2+2)^0,w,c
  6714  003D52  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  6715  003D54  E109               	bnz	u6970
  6716  003D56  500C               	movf	(___fleq@ff2+3)^0,w,c
  6717  003D58  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  6718  003D5A  B4D8               	btfsc	status,2,c
  6719  003D5C  EFB2  F01E         	goto	u6971
  6720  003D60  EFB4  F01E         	goto	u6970
  6721  003D64                     u6971:
  6722  003D64  EFB7  F01E         	goto	l6938
  6723  003D68                     u6970:
  6724  003D68  90D8               	bcf	status,0,c
  6725  003D6A  EFB8  F01E         	goto	l1038
  6726  003D6E                     l6938:
  6727  003D6E  80D8               	bsf	status,0,c
  6728  003D70                     l1038:
  6729  003D70  0012               	return		;funcret
  6730  003D72                     __end_of___fleq:
  6731                           	callstack 0
  6732                           
  6733 ;; *************** function ___awmod *****************
  6734 ;; Defined at:
  6735 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  6736 ;; Parameters:    Size  Location     Type
  6737 ;;  dividend        2    4[COMRAM] int 
  6738 ;;  divisor         2    6[COMRAM] int 
  6739 ;; Auto vars:     Size  Location     Type
  6740 ;;  sign            1    9[COMRAM] unsigned char 
  6741 ;;  counter         1    8[COMRAM] unsigned char 
  6742 ;; Return value:  Size  Location     Type
  6743 ;;                  2    4[COMRAM] int 
  6744 ;; Registers used:
  6745 ;;		wreg, status,2, status,0
  6746 ;; Tracked objects:
  6747 ;;		On entry : 0/0
  6748 ;;		On exit  : 0/0
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6751 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6752 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6754 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6755 ;;Total ram usage:        6 bytes
  6756 ;; Hardware stack levels used: 1
  6757 ;; Hardware stack levels required when called: 4
  6758 ;; This function calls:
  6759 ;;		Nothing
  6760 ;; This function is called by:
  6761 ;;		_efgtoa
  6762 ;; This function uses a non-reentrant model
  6763 ;;
  6764                           
  6765                           	psect	text23
  6766  003C18                     __ptext23:
  6767                           	callstack 0
  6768  003C18                     ___awmod:
  6769                           	callstack 22
  6770  003C18  0E00               	movlw	0
  6771  003C1A  6E0A               	movwf	___awmod@sign^0,c
  6772  003C1C  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  6773  003C1E  EF15  F01E         	goto	u6890
  6774  003C22  EF13  F01E         	goto	u6891
  6775  003C26                     u6891:
  6776  003C26  EF1B  F01E         	goto	l6898
  6777  003C2A                     u6890:
  6778  003C2A  6C05               	negf	___awmod@dividend^0,c
  6779  003C2C  1E06               	comf	(___awmod@dividend+1)^0,f,c
  6780  003C2E  B0D8               	btfsc	status,0,c
  6781  003C30  2A06               	incf	(___awmod@dividend+1)^0,f,c
  6782  003C32  0E01               	movlw	1
  6783  003C34  6E0A               	movwf	___awmod@sign^0,c
  6784  003C36                     l6898:
  6785  003C36  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  6786  003C38  EF22  F01E         	goto	u6900
  6787  003C3C  EF20  F01E         	goto	u6901
  6788  003C40                     u6901:
  6789  003C40  EF26  F01E         	goto	l6902
  6790  003C44                     u6900:
  6791  003C44  6C07               	negf	___awmod@divisor^0,c
  6792  003C46  1E08               	comf	(___awmod@divisor+1)^0,f,c
  6793  003C48  B0D8               	btfsc	status,0,c
  6794  003C4A  2A08               	incf	(___awmod@divisor+1)^0,f,c
  6795  003C4C                     l6902:
  6796  003C4C  5007               	movf	___awmod@divisor^0,w,c
  6797  003C4E  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  6798  003C50  B4D8               	btfsc	status,2,c
  6799  003C52  EF2D  F01E         	goto	u6911
  6800  003C56  EF2F  F01E         	goto	u6910
  6801  003C5A                     u6911:
  6802  003C5A  EF53  F01E         	goto	l6918
  6803  003C5E                     u6910:
  6804  003C5E  0E01               	movlw	1
  6805  003C60  6E09               	movwf	___awmod@counter^0,c
  6806  003C62  EF37  F01E         	goto	l6908
  6807  003C66                     l6906:
  6808  003C66  90D8               	bcf	status,0,c
  6809  003C68  3607               	rlcf	___awmod@divisor^0,f,c
  6810  003C6A  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  6811  003C6C  2A09               	incf	___awmod@counter^0,f,c
  6812  003C6E                     l6908:
  6813  003C6E  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  6814  003C70  EF3C  F01E         	goto	u6921
  6815  003C74  EF3E  F01E         	goto	u6920
  6816  003C78                     u6921:
  6817  003C78  EF33  F01E         	goto	l6906
  6818  003C7C                     u6920:
  6819  003C7C                     l6910:
  6820  003C7C  5007               	movf	___awmod@divisor^0,w,c
  6821  003C7E  5C05               	subwf	___awmod@dividend^0,w,c
  6822  003C80  5008               	movf	(___awmod@divisor+1)^0,w,c
  6823  003C82  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  6824  003C84  A0D8               	btfss	status,0,c
  6825  003C86  EF47  F01E         	goto	u6931
  6826  003C8A  EF49  F01E         	goto	u6930
  6827  003C8E                     u6931:
  6828  003C8E  EF4D  F01E         	goto	l6914
  6829  003C92                     u6930:
  6830  003C92  5007               	movf	___awmod@divisor^0,w,c
  6831  003C94  5E05               	subwf	___awmod@dividend^0,f,c
  6832  003C96  5008               	movf	(___awmod@divisor+1)^0,w,c
  6833  003C98  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  6834  003C9A                     l6914:
  6835  003C9A  90D8               	bcf	status,0,c
  6836  003C9C  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  6837  003C9E  3207               	rrcf	___awmod@divisor^0,f,c
  6838  003CA0  2E09               	decfsz	___awmod@counter^0,f,c
  6839  003CA2  EF3E  F01E         	goto	l6910
  6840  003CA6                     l6918:
  6841  003CA6  500A               	movf	___awmod@sign^0,w,c
  6842  003CA8  B4D8               	btfsc	status,2,c
  6843  003CAA  EF59  F01E         	goto	u6941
  6844  003CAE  EF5B  F01E         	goto	u6940
  6845  003CB2                     u6941:
  6846  003CB2  EF5F  F01E         	goto	l6922
  6847  003CB6                     u6940:
  6848  003CB6  6C05               	negf	___awmod@dividend^0,c
  6849  003CB8  1E06               	comf	(___awmod@dividend+1)^0,f,c
  6850  003CBA  B0D8               	btfsc	status,0,c
  6851  003CBC  2A06               	incf	(___awmod@dividend+1)^0,f,c
  6852  003CBE                     l6922:
  6853  003CBE  C005  F005         	movff	___awmod@dividend,?___awmod
  6854  003CC2  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  6855  003CC6  0012               	return		;funcret
  6856  003CC8                     __end_of___awmod:
  6857                           	callstack 0
  6858                           
  6859 ;; *************** function ___awdiv *****************
  6860 ;; Defined at:
  6861 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  dividend        2    4[COMRAM] int 
  6864 ;;  divisor         2    6[COMRAM] int 
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;  quotient        2   10[COMRAM] int 
  6867 ;;  sign            1    9[COMRAM] unsigned char 
  6868 ;;  counter         1    8[COMRAM] unsigned char 
  6869 ;; Return value:  Size  Location     Type
  6870 ;;                  2    4[COMRAM] int 
  6871 ;; Registers used:
  6872 ;;		wreg, status,2, status,0
  6873 ;; Tracked objects:
  6874 ;;		On entry : 0/0
  6875 ;;		On exit  : 0/0
  6876 ;;		Unchanged: 0/0
  6877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6878 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6879 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6881 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6882 ;;Total ram usage:        8 bytes
  6883 ;; Hardware stack levels used: 1
  6884 ;; Hardware stack levels required when called: 4
  6885 ;; This function calls:
  6886 ;;		Nothing
  6887 ;; This function is called by:
  6888 ;;		_efgtoa
  6889 ;; This function uses a non-reentrant model
  6890 ;;
  6891                           
  6892                           	psect	text24
  6893  0039D4                     __ptext24:
  6894                           	callstack 0
  6895  0039D4                     ___awdiv:
  6896                           	callstack 22
  6897  0039D4  0E00               	movlw	0
  6898  0039D6  6E0A               	movwf	___awdiv@sign^0,c
  6899  0039D8  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  6900  0039DA  EFF3  F01C         	goto	u6830
  6901  0039DE  EFF1  F01C         	goto	u6831
  6902  0039E2                     u6831:
  6903  0039E2  EFF9  F01C         	goto	l6854
  6904  0039E6                     u6830:
  6905  0039E6  6C07               	negf	___awdiv@divisor^0,c
  6906  0039E8  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  6907  0039EA  B0D8               	btfsc	status,0,c
  6908  0039EC  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  6909  0039EE  0E01               	movlw	1
  6910  0039F0  6E0A               	movwf	___awdiv@sign^0,c
  6911  0039F2                     l6854:
  6912  0039F2  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  6913  0039F4  EF00  F01D         	goto	u6840
  6914  0039F8  EFFE  F01C         	goto	u6841
  6915  0039FC                     u6841:
  6916  0039FC  EF06  F01D         	goto	l6860
  6917  003A00                     u6840:
  6918  003A00  6C05               	negf	___awdiv@dividend^0,c
  6919  003A02  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  6920  003A04  B0D8               	btfsc	status,0,c
  6921  003A06  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  6922  003A08  0E01               	movlw	1
  6923  003A0A  1A0A               	xorwf	___awdiv@sign^0,f,c
  6924  003A0C                     l6860:
  6925  003A0C  0E00               	movlw	0
  6926  003A0E  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  6927  003A10  0E00               	movlw	0
  6928  003A12  6E0B               	movwf	___awdiv@quotient^0,c
  6929  003A14  5007               	movf	___awdiv@divisor^0,w,c
  6930  003A16  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  6931  003A18  B4D8               	btfsc	status,2,c
  6932  003A1A  EF11  F01D         	goto	u6851
  6933  003A1E  EF13  F01D         	goto	u6850
  6934  003A22                     u6851:
  6935  003A22  EF3B  F01D         	goto	l6882
  6936  003A26                     u6850:
  6937  003A26  0E01               	movlw	1
  6938  003A28  6E09               	movwf	___awdiv@counter^0,c
  6939  003A2A  EF1B  F01D         	goto	l6868
  6940  003A2E                     l6866:
  6941  003A2E  90D8               	bcf	status,0,c
  6942  003A30  3607               	rlcf	___awdiv@divisor^0,f,c
  6943  003A32  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  6944  003A34  2A09               	incf	___awdiv@counter^0,f,c
  6945  003A36                     l6868:
  6946  003A36  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  6947  003A38  EF20  F01D         	goto	u6861
  6948  003A3C  EF22  F01D         	goto	u6860
  6949  003A40                     u6861:
  6950  003A40  EF17  F01D         	goto	l6866
  6951  003A44                     u6860:
  6952  003A44                     l6870:
  6953  003A44  90D8               	bcf	status,0,c
  6954  003A46  360B               	rlcf	___awdiv@quotient^0,f,c
  6955  003A48  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  6956  003A4A  5007               	movf	___awdiv@divisor^0,w,c
  6957  003A4C  5C05               	subwf	___awdiv@dividend^0,w,c
  6958  003A4E  5008               	movf	(___awdiv@divisor+1)^0,w,c
  6959  003A50  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  6960  003A52  A0D8               	btfss	status,0,c
  6961  003A54  EF2E  F01D         	goto	u6871
  6962  003A58  EF30  F01D         	goto	u6870
  6963  003A5C                     u6871:
  6964  003A5C  EF35  F01D         	goto	l6878
  6965  003A60                     u6870:
  6966  003A60  5007               	movf	___awdiv@divisor^0,w,c
  6967  003A62  5E05               	subwf	___awdiv@dividend^0,f,c
  6968  003A64  5008               	movf	(___awdiv@divisor+1)^0,w,c
  6969  003A66  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  6970  003A68  800B               	bsf	___awdiv@quotient^0,0,c
  6971  003A6A                     l6878:
  6972  003A6A  90D8               	bcf	status,0,c
  6973  003A6C  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  6974  003A6E  3207               	rrcf	___awdiv@divisor^0,f,c
  6975  003A70  2E09               	decfsz	___awdiv@counter^0,f,c
  6976  003A72  EF22  F01D         	goto	l6870
  6977  003A76                     l6882:
  6978  003A76  500A               	movf	___awdiv@sign^0,w,c
  6979  003A78  B4D8               	btfsc	status,2,c
  6980  003A7A  EF41  F01D         	goto	u6881
  6981  003A7E  EF43  F01D         	goto	u6880
  6982  003A82                     u6881:
  6983  003A82  EF47  F01D         	goto	l6886
  6984  003A86                     u6880:
  6985  003A86  6C0B               	negf	___awdiv@quotient^0,c
  6986  003A88  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  6987  003A8A  B0D8               	btfsc	status,0,c
  6988  003A8C  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  6989  003A8E                     l6886:
  6990  003A8E  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  6991  003A92  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  6992  003A96  0012               	return		;funcret
  6993  003A98                     __end_of___awdiv:
  6994                           	callstack 0
  6995                           
  6996 ;; *************** function _atoi *****************
  6997 ;; Defined at:
  6998 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  6999 ;; Parameters:    Size  Location     Type
  7000 ;;  s               2   11[COMRAM] PTR const unsigned char 
  7001 ;;		 -> STR_4(26), STR_3(26), STR_2(25), STR_1(26), 
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;  n               2   24[COMRAM] int 
  7004 ;;  neg             2   17[COMRAM] int 
  7005 ;; Return value:  Size  Location     Type
  7006 ;;                  2   11[COMRAM] int 
  7007 ;; Registers used:
  7008 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7009 ;; Tracked objects:
  7010 ;;		On entry : 0/0
  7011 ;;		On exit  : 0/0
  7012 ;;		Unchanged: 0/0
  7013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7015 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7016 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7017 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7018 ;;Total ram usage:       15 bytes
  7019 ;; Hardware stack levels used: 1
  7020 ;; Hardware stack levels required when called: 5
  7021 ;; This function calls:
  7022 ;;		___wmul
  7023 ;;		_isdigit
  7024 ;;		_isspace
  7025 ;; This function is called by:
  7026 ;;		_vfpfcnvrt
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           	psect	text25
  7031  003242                     __ptext25:
  7032                           	callstack 0
  7033  003242                     _atoi:
  7034                           	callstack 22
  7035  003242  0E00               	movlw	0
  7036  003244  6E1A               	movwf	(atoi@n+1)^0,c
  7037  003246  0E00               	movlw	0
  7038  003248  6E19               	movwf	atoi@n^0,c
  7039  00324A  0E00               	movlw	0
  7040  00324C  6E13               	movwf	(atoi@neg+1)^0,c
  7041  00324E  0E00               	movlw	0
  7042  003250  6E12               	movwf	atoi@neg^0,c
  7043  003252  EF2D  F019         	goto	l7430
  7044  003256                     l7428:
  7045  003256  4A0C               	infsnz	atoi@s^0,f,c
  7046  003258  2A0D               	incf	(atoi@s+1)^0,f,c
  7047  00325A                     l7430:
  7048  00325A  0E01               	movlw	1
  7049  00325C  6E18               	movwf	_atoi$2247^0,c
  7050  00325E  C00C  FFF6         	movff	atoi@s,tblptrl
  7051  003262  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7052  003266                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7053  003266  6AF8               	clrf	tblptru,c
  7054  003268                     	endif
  7055  003268                     	if	0	;tblptru may be non-zero
  7056  003268                     	endif
  7057  003268  0008               	tblrd		*
  7058  00326A  50F5               	movf	tablat,w,c
  7059  00326C  0A20               	xorlw	32
  7060  00326E  B4D8               	btfsc	status,2,c
  7061  003270  EF3C  F019         	goto	u7951
  7062  003274  EF3E  F019         	goto	u7950
  7063  003278                     u7951:
  7064  003278  EF5C  F019         	goto	l7438
  7065  00327C                     u7950:
  7066  00327C  0EF7               	movlw	247
  7067  00327E  6E0E               	movwf	??_atoi^0,c
  7068  003280  0EFF               	movlw	255
  7069  003282  6E0F               	movwf	(??_atoi+1)^0,c
  7070  003284  C00C  FFF6         	movff	atoi@s,tblptrl
  7071  003288  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7072  00328C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7073  00328C  6AF8               	clrf	tblptru,c
  7074  00328E                     	endif
  7075  00328E                     	if	0	;tblptru may be non-zero
  7076  00328E                     	endif
  7077  00328E  0008               	tblrd		*
  7078  003290  50F5               	movf	tablat,w,c
  7079  003292  6E10               	movwf	(??_atoi+2)^0,c
  7080  003294  6A11               	clrf	(??_atoi+3)^0,c
  7081  003296  500E               	movf	??_atoi^0,w,c
  7082  003298  2610               	addwf	(??_atoi+2)^0,f,c
  7083  00329A  500F               	movf	(??_atoi+1)^0,w,c
  7084  00329C  2211               	addwfc	(??_atoi+3)^0,f,c
  7085  00329E  5011               	movf	(??_atoi+3)^0,w,c
  7086  0032A0  E109               	bnz	u7960
  7087  0032A2  0E05               	movlw	5
  7088  0032A4  5C10               	subwf	(??_atoi+2)^0,w,c
  7089  0032A6  A0D8               	btfss	status,0,c
  7090  0032A8  EF58  F019         	goto	u7961
  7091  0032AC  EF5A  F019         	goto	u7960
  7092  0032B0                     u7961:
  7093  0032B0  EF5C  F019         	goto	l7438
  7094  0032B4                     u7960:
  7095  0032B4  0E00               	movlw	0
  7096  0032B6  6E18               	movwf	_atoi$2247^0,c
  7097  0032B8                     l7438:
  7098  0032B8  C018  F014         	movff	_atoi$2247,_atoi$2246
  7099  0032BC  6A15               	clrf	(_atoi$2246+1)^0,c
  7100  0032BE  5014               	movf	_atoi$2246^0,w,c
  7101  0032C0  1015               	iorwf	(_atoi$2246+1)^0,w,c
  7102  0032C2  A4D8               	btfss	status,2,c
  7103  0032C4  EF66  F019         	goto	u7971
  7104  0032C8  EF68  F019         	goto	u7970
  7105  0032CC                     u7971:
  7106  0032CC  EF2B  F019         	goto	l7428
  7107  0032D0                     u7970:
  7108  0032D0  EF72  F019         	goto	l7448
  7109  0032D4                     l7444:
  7110  0032D4  0E00               	movlw	0
  7111  0032D6  6E13               	movwf	(atoi@neg+1)^0,c
  7112  0032D8  0E01               	movlw	1
  7113  0032DA  6E12               	movwf	atoi@neg^0,c
  7114  0032DC                     l7446:
  7115  0032DC  4A0C               	infsnz	atoi@s^0,f,c
  7116  0032DE  2A0D               	incf	(atoi@s+1)^0,f,c
  7117  0032E0  EFA9  F019         	goto	l7454
  7118  0032E4                     l7448:
  7119  0032E4  C00C  FFF6         	movff	atoi@s,tblptrl
  7120  0032E8  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7121  0032EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7122  0032EC  6AF8               	clrf	tblptru,c
  7123  0032EE                     	endif
  7124  0032EE                     	if	0	;tblptru may be non-zero
  7125  0032EE                     	endif
  7126  0032EE  0008               	tblrd		*
  7127  0032F0  50F5               	movf	tablat,w,c
  7128  0032F2  6E0E               	movwf	??_atoi^0,c
  7129  0032F4  6A0F               	clrf	(??_atoi+1)^0,c
  7130                           
  7131                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7132                           ; Switch size 1, requested type "simple"
  7133                           ; Number of cases is 1, Range of values is 0 to 0
  7134                           ; switch strategies available:
  7135                           ; Name         Instructions Cycles
  7136                           ; simple_byte            4     3 (average)
  7137                           ;	Chosen strategy is simple_byte
  7138  0032F6  500F               	movf	(??_atoi+1)^0,w,c
  7139  0032F8  0A00               	xorlw	0	; case 0
  7140  0032FA  B4D8               	btfsc	status,2,c
  7141  0032FC  EF82  F019         	goto	l7782
  7142  003300  EFA9  F019         	goto	l7454
  7143  003304                     l7782:
  7144                           
  7145                           ; Switch size 1, requested type "simple"
  7146                           ; Number of cases is 2, Range of values is 43 to 45
  7147                           ; switch strategies available:
  7148                           ; Name         Instructions Cycles
  7149                           ; simple_byte            7     4 (average)
  7150                           ;	Chosen strategy is simple_byte
  7151  003304  500E               	movf	??_atoi^0,w,c
  7152  003306  0A2B               	xorlw	43	; case 43
  7153  003308  B4D8               	btfsc	status,2,c
  7154  00330A  EF6E  F019         	goto	l7446
  7155  00330E  0A06               	xorlw	6	; case 45
  7156  003310  B4D8               	btfsc	status,2,c
  7157  003312  EF6A  F019         	goto	l7444
  7158  003316  EFA9  F019         	goto	l7454
  7159  00331A                     l7450:
  7160  00331A  C019  F005         	movff	atoi@n,___wmul@multiplier
  7161  00331E  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  7162  003322  0E00               	movlw	0
  7163  003324  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  7164  003326  0E0A               	movlw	10
  7165  003328  6E07               	movwf	___wmul@multiplicand^0,c
  7166  00332A  EC20  F025         	call	___wmul	;wreg free
  7167  00332E  C00C  FFF6         	movff	atoi@s,tblptrl
  7168  003332  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7169  003336                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7170  003336  6AF8               	clrf	tblptru,c
  7171  003338                     	endif
  7172  003338                     	if	0	;tblptru may be non-zero
  7173  003338                     	endif
  7174  003338  0008               	tblrd		*
  7175  00333A  50F5               	movf	tablat,w,c
  7176  00333C  5E05               	subwf	?___wmul^0,f,c
  7177  00333E  0E00               	movlw	0
  7178  003340  5A06               	subwfb	(?___wmul+1)^0,f,c
  7179  003342  0E30               	movlw	48
  7180  003344  2405               	addwf	?___wmul^0,w,c
  7181  003346  6E19               	movwf	atoi@n^0,c
  7182  003348  0E00               	movlw	0
  7183  00334A  2006               	addwfc	(?___wmul+1)^0,w,c
  7184  00334C  6E1A               	movwf	(atoi@n+1)^0,c
  7185  00334E  EF6E  F019         	goto	l7446
  7186  003352                     l7454:
  7187  003352  0ED0               	movlw	208
  7188  003354  6E0E               	movwf	??_atoi^0,c
  7189  003356  0EFF               	movlw	255
  7190  003358  6E0F               	movwf	(??_atoi+1)^0,c
  7191  00335A  C00C  FFF6         	movff	atoi@s,tblptrl
  7192  00335E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7193  003362                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7194  003362  6AF8               	clrf	tblptru,c
  7195  003364                     	endif
  7196  003364                     	if	0	;tblptru may be non-zero
  7197  003364                     	endif
  7198  003364  0008               	tblrd		*
  7199  003366  50F5               	movf	tablat,w,c
  7200  003368  6E10               	movwf	(??_atoi+2)^0,c
  7201  00336A  6A11               	clrf	(??_atoi+3)^0,c
  7202  00336C  500E               	movf	??_atoi^0,w,c
  7203  00336E  2610               	addwf	(??_atoi+2)^0,f,c
  7204  003370  500F               	movf	(??_atoi+1)^0,w,c
  7205  003372  2211               	addwfc	(??_atoi+3)^0,f,c
  7206  003374  5011               	movf	(??_atoi+3)^0,w,c
  7207  003376  E10A               	bnz	u7980
  7208  003378  0E0A               	movlw	10
  7209  00337A  5C10               	subwf	(??_atoi+2)^0,w,c
  7210  00337C  A0D8               	btfss	status,0,c
  7211  00337E  EFC3  F019         	goto	u7981
  7212  003382  EFC6  F019         	goto	u7980
  7213  003386                     u7981:
  7214  003386  0E01               	movlw	1
  7215  003388  EFC7  F019         	goto	u7990
  7216  00338C                     u7980:
  7217  00338C  0E00               	movlw	0
  7218  00338E                     u7990:
  7219  00338E  6E16               	movwf	_atoi$2248^0,c
  7220  003390  6A17               	clrf	(_atoi$2248+1)^0,c
  7221  003392  5016               	movf	_atoi$2248^0,w,c
  7222  003394  1017               	iorwf	(_atoi$2248+1)^0,w,c
  7223  003396  A4D8               	btfss	status,2,c
  7224  003398  EFD0  F019         	goto	u8001
  7225  00339C  EFD2  F019         	goto	u8000
  7226  0033A0                     u8001:
  7227  0033A0  EF8D  F019         	goto	l7450
  7228  0033A4                     u8000:
  7229  0033A4  5012               	movf	atoi@neg^0,w,c
  7230  0033A6  1013               	iorwf	(atoi@neg+1)^0,w,c
  7231  0033A8  A4D8               	btfss	status,2,c
  7232  0033AA  EFD9  F019         	goto	u8011
  7233  0033AE  EFDB  F019         	goto	u8010
  7234  0033B2                     u8011:
  7235  0033B2  EFE9  F019         	goto	l1666
  7236  0033B6                     u8010:
  7237  0033B6  C019  F00E         	movff	atoi@n,??_atoi
  7238  0033BA  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  7239  0033BE  1E0E               	comf	??_atoi^0,f,c
  7240  0033C0  1E0F               	comf	(??_atoi+1)^0,f,c
  7241  0033C2  4A0E               	infsnz	??_atoi^0,f,c
  7242  0033C4  2A0F               	incf	(??_atoi+1)^0,f,c
  7243  0033C6  C00E  F00C         	movff	??_atoi,?_atoi
  7244  0033CA  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  7245  0033CE  EFED  F019         	goto	l1669
  7246  0033D2                     l1666:
  7247  0033D2  C019  F00C         	movff	atoi@n,?_atoi
  7248  0033D6  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  7249  0033DA                     l1669:
  7250  0033DA  0012               	return		;funcret
  7251  0033DC                     __end_of_atoi:
  7252                           	callstack 0
  7253                           
  7254 ;; *************** function _isspace *****************
  7255 ;; Defined at:
  7256 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;  c               2    4[COMRAM] int 
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;		None
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  2    4[COMRAM] int 
  7263 ;; Registers used:
  7264 ;;		wreg, status,2, status,0
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7270 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7271 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7272 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7273 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7274 ;;Total ram usage:        7 bytes
  7275 ;; Hardware stack levels used: 1
  7276 ;; Hardware stack levels required when called: 4
  7277 ;; This function calls:
  7278 ;;		Nothing
  7279 ;; This function is called by:
  7280 ;;		_atoi
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           
  7284                           	psect	text26
  7285  004628                     __ptext26:
  7286                           	callstack 0
  7287  004628                     _isspace:
  7288                           	callstack 22
  7289  004628  0E01               	movlw	1
  7290  00462A  6E0B               	movwf	_isspace$2277^0,c
  7291  00462C  0E20               	movlw	32
  7292  00462E  1805               	xorwf	isspace@c^0,w,c
  7293  004630  1006               	iorwf	(isspace@c+1)^0,w,c
  7294  004632  B4D8               	btfsc	status,2,c
  7295  004634  EF1E  F023         	goto	u7391
  7296  004638  EF20  F023         	goto	u7390
  7297  00463C                     u7391:
  7298  00463C  EF39  F023         	goto	l7114
  7299  004640                     u7390:
  7300  004640  0EF7               	movlw	247
  7301  004642  6E07               	movwf	??_isspace^0,c
  7302  004644  0EFF               	movlw	255
  7303  004646  6E08               	movwf	(??_isspace+1)^0,c
  7304  004648  C005  F009         	movff	isspace@c,??_isspace+2
  7305  00464C  C006  F00A         	movff	isspace@c+1,??_isspace+3
  7306  004650  5007               	movf	??_isspace^0,w,c
  7307  004652  2609               	addwf	(??_isspace+2)^0,f,c
  7308  004654  5008               	movf	(??_isspace+1)^0,w,c
  7309  004656  220A               	addwfc	(??_isspace+3)^0,f,c
  7310  004658  500A               	movf	(??_isspace+3)^0,w,c
  7311  00465A  E109               	bnz	u7400
  7312  00465C  0E05               	movlw	5
  7313  00465E  5C09               	subwf	(??_isspace+2)^0,w,c
  7314  004660  A0D8               	btfss	status,0,c
  7315  004662  EF35  F023         	goto	u7401
  7316  004666  EF37  F023         	goto	u7400
  7317  00466A                     u7401:
  7318  00466A  EF39  F023         	goto	l7114
  7319  00466E                     u7400:
  7320  00466E  0E00               	movlw	0
  7321  004670  6E0B               	movwf	_isspace$2277^0,c
  7322  004672                     l7114:
  7323  004672  C00B  F005         	movff	_isspace$2277,?_isspace
  7324  004676  6A06               	clrf	(?_isspace+1)^0,c
  7325  004678  0012               	return		;funcret
  7326  00467A                     __end_of_isspace:
  7327                           	callstack 0
  7328                           
  7329 ;; *************** function _isdigit *****************
  7330 ;; Defined at:
  7331 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;  c               2    4[COMRAM] int 
  7334 ;; Auto vars:     Size  Location     Type
  7335 ;;		None
  7336 ;; Return value:  Size  Location     Type
  7337 ;;                  2    4[COMRAM] int 
  7338 ;; Registers used:
  7339 ;;		wreg, status,2, status,0
  7340 ;; Tracked objects:
  7341 ;;		On entry : 0/0
  7342 ;;		On exit  : 0/0
  7343 ;;		Unchanged: 0/0
  7344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7345 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7347 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7348 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7349 ;;Total ram usage:        6 bytes
  7350 ;; Hardware stack levels used: 1
  7351 ;; Hardware stack levels required when called: 4
  7352 ;; This function calls:
  7353 ;;		Nothing
  7354 ;; This function is called by:
  7355 ;;		_vfpfcnvrt
  7356 ;;		_atoi
  7357 ;; This function uses a non-reentrant model
  7358 ;;
  7359                           
  7360                           	psect	text27
  7361  00483C                     __ptext27:
  7362                           	callstack 0
  7363  00483C                     _isdigit:
  7364                           	callstack 23
  7365  00483C  0ED0               	movlw	208
  7366  00483E  6E07               	movwf	??_isdigit^0,c
  7367  004840  0EFF               	movlw	255
  7368  004842  6E08               	movwf	(??_isdigit+1)^0,c
  7369  004844  C005  F009         	movff	isdigit@c,??_isdigit+2
  7370  004848  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  7371  00484C  5007               	movf	??_isdigit^0,w,c
  7372  00484E  2609               	addwf	(??_isdigit+2)^0,f,c
  7373  004850  5008               	movf	(??_isdigit+1)^0,w,c
  7374  004852  220A               	addwfc	(??_isdigit+3)^0,f,c
  7375  004854  500A               	movf	(??_isdigit+3)^0,w,c
  7376  004856  E10A               	bnz	u7370
  7377  004858  0E0A               	movlw	10
  7378  00485A  5C09               	subwf	(??_isdigit+2)^0,w,c
  7379  00485C  A0D8               	btfss	status,0,c
  7380  00485E  EF33  F024         	goto	u7371
  7381  004862  EF36  F024         	goto	u7370
  7382  004866                     u7371:
  7383  004866  0E01               	movlw	1
  7384  004868  EF37  F024         	goto	u7380
  7385  00486C                     u7370:
  7386  00486C  0E00               	movlw	0
  7387  00486E                     u7380:
  7388  00486E  6E05               	movwf	?_isdigit^0,c
  7389  004870  6A06               	clrf	(?_isdigit+1)^0,c
  7390  004872  0012               	return		;funcret
  7391  004874                     __end_of_isdigit:
  7392                           	callstack 0
  7393                           
  7394 ;; *************** function ___wmul *****************
  7395 ;; Defined at:
  7396 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  7397 ;; Parameters:    Size  Location     Type
  7398 ;;  multiplier      2    4[COMRAM] unsigned int 
  7399 ;;  multiplicand    2    6[COMRAM] unsigned int 
  7400 ;; Auto vars:     Size  Location     Type
  7401 ;;  product         2    8[COMRAM] unsigned int 
  7402 ;; Return value:  Size  Location     Type
  7403 ;;                  2    4[COMRAM] unsigned int 
  7404 ;; Registers used:
  7405 ;;		wreg, status,2, status,0, prodl, prodh
  7406 ;; Tracked objects:
  7407 ;;		On entry : 0/0
  7408 ;;		On exit  : 0/0
  7409 ;;		Unchanged: 0/0
  7410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7411 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7414 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7415 ;;Total ram usage:        6 bytes
  7416 ;; Hardware stack levels used: 1
  7417 ;; Hardware stack levels required when called: 4
  7418 ;; This function calls:
  7419 ;;		Nothing
  7420 ;; This function is called by:
  7421 ;;		_atoi
  7422 ;; This function uses a non-reentrant model
  7423 ;;
  7424                           
  7425                           	psect	text28
  7426  004A40                     __ptext28:
  7427                           	callstack 0
  7428  004A40                     ___wmul:
  7429                           	callstack 22
  7430  004A40  5005               	movf	___wmul@multiplier^0,w,c
  7431  004A42  0207               	mulwf	___wmul@multiplicand^0,c
  7432  004A44  CFF3 F009          	movff	prodl,___wmul@product
  7433  004A48  CFF4 F00A          	movff	prodh,___wmul@product+1
  7434  004A4C  5005               	movf	___wmul@multiplier^0,w,c
  7435  004A4E  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  7436  004A50  50F3               	movf	243,w,c
  7437  004A52  260A               	addwf	(___wmul@product+1)^0,f,c
  7438  004A54  5006               	movf	(___wmul@multiplier+1)^0,w,c
  7439  004A56  0207               	mulwf	___wmul@multiplicand^0,c
  7440  004A58  50F3               	movf	243,w,c
  7441  004A5A  260A               	addwf	(___wmul@product+1)^0,f,c
  7442  004A5C  C009  F005         	movff	___wmul@product,?___wmul
  7443  004A60  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  7444  004A64  0012               	return		;funcret
  7445  004A66                     __end_of___wmul:
  7446                           	callstack 0
  7447                           
  7448 ;; *************** function _SYSTEM_Initialize *****************
  7449 ;; Defined at:
  7450 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7451 ;; Parameters:    Size  Location     Type
  7452 ;;		None
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;		None
  7455 ;; Return value:  Size  Location     Type
  7456 ;;                  1    wreg      void 
  7457 ;; Registers used:
  7458 ;;		wreg, status,2, status,0, cstack
  7459 ;; Tracked objects:
  7460 ;;		On entry : 0/0
  7461 ;;		On exit  : 0/0
  7462 ;;		Unchanged: 0/0
  7463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7468 ;;Total ram usage:        0 bytes
  7469 ;; Hardware stack levels used: 1
  7470 ;; Hardware stack levels required when called: 6
  7471 ;; This function calls:
  7472 ;;		_EUSART_Initialize
  7473 ;;		_I2C_Initialize
  7474 ;;		_INTERRUPT_Initialize
  7475 ;;		_OSCILLATOR_Initialize
  7476 ;;		_PIN_MANAGER_Initialize
  7477 ;; This function is called by:
  7478 ;;		_main
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           
  7482                           	psect	text29
  7483  004B9E                     __ptext29:
  7484                           	callstack 0
  7485  004B9E                     _SYSTEM_Initialize:
  7486                           	callstack 24
  7487  004B9E                     
  7488                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  7489  004B9E  EC6B  F026         	call	_INTERRUPT_Initialize	;wreg free
  7490  004BA2                     
  7491                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
  7492  004BA2  ECDA  F025         	call	_I2C_Initialize	;wreg free
  7493  004BA6                     
  7494                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  7495  004BA6  EC71  F024         	call	_PIN_MANAGER_Initialize	;wreg free
  7496  004BAA                     
  7497                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  7498  004BAA  EC1D  F026         	call	_OSCILLATOR_Initialize	;wreg free
  7499  004BAE                     
  7500                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  7501  004BAE  ECF2  F020         	call	_EUSART_Initialize	;wreg free
  7502  004BB2  0012               	return		;funcret
  7503  004BB4                     __end_of_SYSTEM_Initialize:
  7504                           	callstack 0
  7505                           
  7506 ;; *************** function _PIN_MANAGER_Initialize *****************
  7507 ;; Defined at:
  7508 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;		None
  7511 ;; Auto vars:     Size  Location     Type
  7512 ;;		None
  7513 ;; Return value:  Size  Location     Type
  7514 ;;                  1    wreg      void 
  7515 ;; Registers used:
  7516 ;;		wreg, status,2
  7517 ;; Tracked objects:
  7518 ;;		On entry : 0/0
  7519 ;;		On exit  : 0/0
  7520 ;;		Unchanged: 0/0
  7521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7526 ;;Total ram usage:        0 bytes
  7527 ;; Hardware stack levels used: 1
  7528 ;; Hardware stack levels required when called: 4
  7529 ;; This function calls:
  7530 ;;		Nothing
  7531 ;; This function is called by:
  7532 ;;		_SYSTEM_Initialize
  7533 ;; This function uses a non-reentrant model
  7534 ;;
  7535                           
  7536                           	psect	text30
  7537  0048E2                     __ptext30:
  7538                           	callstack 0
  7539  0048E2                     _PIN_MANAGER_Initialize:
  7540                           	callstack 25
  7541  0048E2                     
  7542                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  7543  0048E2  0E00               	movlw	0
  7544  0048E4  6E8D               	movwf	141,c	;volatile
  7545                           
  7546                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  7547  0048E6  0E00               	movlw	0
  7548  0048E8  6E8C               	movwf	140,c	;volatile
  7549                           
  7550                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  7551  0048EA  0E00               	movlw	0
  7552  0048EC  6E89               	movwf	137,c	;volatile
  7553                           
  7554                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7555  0048EE  0E00               	movlw	0
  7556  0048F0  6E8A               	movwf	138,c	;volatile
  7557                           
  7558                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  7559  0048F2  0E00               	movlw	0
  7560  0048F4  6E8B               	movwf	139,c	;volatile
  7561                           
  7562                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  7563  0048F6  0E07               	movlw	7
  7564  0048F8  6E96               	movwf	150,c	;volatile
  7565  0048FA                     
  7566                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  7567  0048FA  6892               	setf	146,c	;volatile
  7568  0048FC                     
  7569                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  7570  0048FC  6893               	setf	147,c	;volatile
  7571                           
  7572                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  7573  0048FE  0EBF               	movlw	191
  7574  004900  6E94               	movwf	148,c	;volatile
  7575  004902                     
  7576                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  7577  004902  6895               	setf	149,c	;volatile
  7578  004904                     
  7579                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  7580  004904  687E               	setf	126,c	;volatile
  7581                           
  7582                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
  7583  004906  0E1F               	movlw	31
  7584  004908  6E7F               	movwf	127,c	;volatile
  7585                           
  7586                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  7587  00490A  0E00               	movlw	0
  7588  00490C  6E7C               	movwf	124,c	;volatile
  7589  00490E                     
  7590                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  7591  00490E  8EF1               	bsf	241,7,c	;volatile
  7592  004910  0012               	return		;funcret
  7593  004912                     __end_of_PIN_MANAGER_Initialize:
  7594                           	callstack 0
  7595                           
  7596 ;; *************** function _OSCILLATOR_Initialize *****************
  7597 ;; Defined at:
  7598 ;;		line 60 in file "mcc_generated_files/mcc.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;		None
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;		None
  7603 ;; Return value:  Size  Location     Type
  7604 ;;                  1    wreg      void 
  7605 ;; Registers used:
  7606 ;;		wreg, status,2
  7607 ;; Tracked objects:
  7608 ;;		On entry : 0/0
  7609 ;;		On exit  : 0/0
  7610 ;;		Unchanged: 0/0
  7611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7616 ;;Total ram usage:        0 bytes
  7617 ;; Hardware stack levels used: 1
  7618 ;; Hardware stack levels required when called: 4
  7619 ;; This function calls:
  7620 ;;		Nothing
  7621 ;; This function is called by:
  7622 ;;		_SYSTEM_Initialize
  7623 ;; This function uses a non-reentrant model
  7624 ;;
  7625                           
  7626                           	psect	text31
  7627  004C3A                     __ptext31:
  7628                           	callstack 0
  7629  004C3A                     _OSCILLATOR_Initialize:
  7630                           	callstack 25
  7631  004C3A                     
  7632                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x60;
  7633  004C3A  0E60               	movlw	96
  7634  004C3C  6ED3               	movwf	211,c	;volatile
  7635                           
  7636                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  7637  004C3E  0E00               	movlw	0
  7638  004C40  6E9B               	movwf	155,c	;volatile
  7639  004C42  0012               	return		;funcret
  7640  004C44                     __end_of_OSCILLATOR_Initialize:
  7641                           	callstack 0
  7642                           
  7643 ;; *************** function _INTERRUPT_Initialize *****************
  7644 ;; Defined at:
  7645 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7646 ;; Parameters:    Size  Location     Type
  7647 ;;		None
  7648 ;; Auto vars:     Size  Location     Type
  7649 ;;		None
  7650 ;; Return value:  Size  Location     Type
  7651 ;;                  1    wreg      void 
  7652 ;; Registers used:
  7653 ;;		None
  7654 ;; Tracked objects:
  7655 ;;		On entry : 0/0
  7656 ;;		On exit  : 0/0
  7657 ;;		Unchanged: 0/0
  7658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7663 ;;Total ram usage:        0 bytes
  7664 ;; Hardware stack levels used: 1
  7665 ;; Hardware stack levels required when called: 4
  7666 ;; This function calls:
  7667 ;;		Nothing
  7668 ;; This function is called by:
  7669 ;;		_SYSTEM_Initialize
  7670 ;; This function uses a non-reentrant model
  7671 ;;
  7672                           
  7673                           	psect	text32
  7674  004CD6                     __ptext32:
  7675                           	callstack 0
  7676  004CD6                     _INTERRUPT_Initialize:
  7677                           	callstack 25
  7678  004CD6                     
  7679                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  7680  004CD6  9ED0               	bcf	208,7,c	;volatile
  7681  004CD8  0012               	return		;funcret
  7682  004CDA                     __end_of_INTERRUPT_Initialize:
  7683                           	callstack 0
  7684                           
  7685 ;; *************** function _I2C_Initialize *****************
  7686 ;; Defined at:
  7687 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;		None
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;		None
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  1    wreg      void 
  7694 ;; Registers used:
  7695 ;;		wreg, status,2
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7705 ;;Total ram usage:        0 bytes
  7706 ;; Hardware stack levels used: 1
  7707 ;; Hardware stack levels required when called: 4
  7708 ;; This function calls:
  7709 ;;		Nothing
  7710 ;; This function is called by:
  7711 ;;		_SYSTEM_Initialize
  7712 ;; This function uses a non-reentrant model
  7713 ;;
  7714                           
  7715                           	psect	text33
  7716  004BB4                     __ptext33:
  7717                           	callstack 0
  7718  004BB4                     _I2C_Initialize:
  7719                           	callstack 25
  7720  004BB4                     
  7721                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  7722  004BB4  0E00               	movlw	0
  7723  004BB6  6EC7               	movwf	199,c	;volatile
  7724                           
  7725                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  7726  004BB8  0E08               	movlw	8
  7727  004BBA  6EC6               	movwf	198,c	;volatile
  7728                           
  7729                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  7730  004BBC  0E00               	movlw	0
  7731  004BBE  6EC5               	movwf	197,c	;volatile
  7732                           
  7733                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  7734  004BC0  0E13               	movlw	19
  7735  004BC2  6EC8               	movwf	200,c	;volatile
  7736  004BC4                     
  7737                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  7738  004BC4  9AC6               	bcf	198,5,c	;volatile
  7739  004BC6  0012               	return		;funcret
  7740  004BC8                     __end_of_I2C_Initialize:
  7741                           	callstack 0
  7742                           
  7743 ;; *************** function _EUSART_Initialize *****************
  7744 ;; Defined at:
  7745 ;;		line 88 in file "mcc_generated_files/eusart.c"
  7746 ;; Parameters:    Size  Location     Type
  7747 ;;		None
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;		None
  7750 ;; Return value:  Size  Location     Type
  7751 ;;                  1    wreg      void 
  7752 ;; Registers used:
  7753 ;;		wreg, status,2, status,0, cstack
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7763 ;;Total ram usage:        0 bytes
  7764 ;; Hardware stack levels used: 1
  7765 ;; Hardware stack levels required when called: 5
  7766 ;; This function calls:
  7767 ;;		_EUSART_SetErrorHandler
  7768 ;;		_EUSART_SetFramingErrorHandler
  7769 ;;		_EUSART_SetOverrunErrorHandler
  7770 ;;		_EUSART_SetRxInterruptHandler
  7771 ;;		_EUSART_SetTxInterruptHandler
  7772 ;; This function is called by:
  7773 ;;		_SYSTEM_Initialize
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           
  7777                           	psect	text34
  7778  0041E4                     __ptext34:
  7779                           	callstack 0
  7780  0041E4                     _EUSART_Initialize:
  7781                           	callstack 24
  7782  0041E4                     
  7783                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RC1IE = 0;
  7784  0041E4  9A9D               	bcf	157,5,c	;volatile
  7785  0041E6                     
  7786                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  7787  0041E6  0E5C               	movlw	low _EUSART_Receive_ISR
  7788  0041E8  6E05               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
  7789  0041EA  0E3B               	movlw	high _EUSART_Receive_ISR
  7790  0041EC  6E06               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
  7791  0041EE  EC27  F026         	call	_EUSART_SetRxInterruptHandler	;wreg free
  7792  0041F2                     
  7793                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TX1IE = 0;
  7794  0041F2  989D               	bcf	157,4,c	;volatile
  7795                           
  7796                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  7797  0041F4  0E4A               	movlw	low _EUSART_Transmit_ISR
  7798  0041F6  6E05               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
  7799  0041F8  0E47               	movlw	high _EUSART_Transmit_ISR
  7800  0041FA  6E06               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
  7801  0041FC  EC22  F026         	call	_EUSART_SetTxInterruptHandler	;wreg free
  7802  004200                     
  7803                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  7804  004200  0E08               	movlw	8
  7805  004202  6EB8               	movwf	184,c	;volatile
  7806  004204                     
  7807                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  7808  004204  0E90               	movlw	144
  7809  004206  6EAB               	movwf	171,c	;volatile
  7810  004208                     
  7811                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  7812  004208  0E24               	movlw	36
  7813  00420A  6EAC               	movwf	172,c	;volatile
  7814  00420C                     
  7815                           ;mcc_generated_files/eusart.c: 107:     SPBRG = 0xCF;
  7816  00420C  0ECF               	movlw	207
  7817  00420E  6EAF               	movwf	175,c	;volatile
  7818  004210                     
  7819                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  7820  004210  0E00               	movlw	0
  7821  004212  6EB0               	movwf	176,c	;volatile
  7822  004214                     
  7823                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  7824  004214  0E0C               	movlw	low _EUSART_DefaultFramingErrorHandler
  7825  004216  6E05               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  7826  004218  0E4D               	movlw	high _EUSART_DefaultFramingErrorHandler
  7827  00421A  6E06               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  7828  00421C  EC31  F026         	call	_EUSART_SetFramingErrorHandler	;wreg free
  7829  004220                     
  7830                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  7831  004220  0ECA               	movlw	low _EUSART_DefaultOverrunErrorHandler
  7832  004222  6E05               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  7833  004224  0E4C               	movlw	high _EUSART_DefaultOverrunErrorHandler
  7834  004226  6E06               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  7835  004228  EC2C  F026         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  7836  00422C                     
  7837                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  7838  00422C  0ED0               	movlw	low _EUSART_DefaultErrorHandler
  7839  00422E  6E05               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  7840  004230  0E4C               	movlw	high _EUSART_DefaultErrorHandler
  7841  004232  6E06               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  7842  004234  EC36  F026         	call	_EUSART_SetErrorHandler	;wreg free
  7843                           
  7844                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  7845  004238  0E00               	movlw	0
  7846  00423A  0100               	movlb	0	; () banked
  7847  00423C  6FFB               	movwf	_eusartRxLastError& (0+255),b	;volatile
  7848                           
  7849                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  7850  00423E  0E00               	movlw	0
  7851  004240  6E5A               	movwf	_eusartTxHead^0,c	;volatile
  7852                           
  7853                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  7854  004242  0E00               	movlw	0
  7855  004244  6E59               	movwf	_eusartTxTail^0,c	;volatile
  7856                           
  7857                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  7858  004246  0E08               	movlw	8
  7859  004248  6FFE               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
  7860                           
  7861                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  7862  00424A  0E00               	movlw	0
  7863  00424C  6E58               	movwf	_eusartRxHead^0,c	;volatile
  7864                           
  7865                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  7866  00424E  0E00               	movlw	0
  7867  004250  6E57               	movwf	_eusartRxTail^0,c	;volatile
  7868                           
  7869                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  7870  004252  0E00               	movlw	0
  7871  004254  6E56               	movwf	_eusartRxCount^0,c	;volatile
  7872  004256                     
  7873                           ; BSR set to: 0
  7874                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RC1IE = 1;
  7875  004256  8A9D               	bsf	157,5,c	;volatile
  7876  004258                     
  7877                           ; BSR set to: 0
  7878  004258  0012               	return		;funcret
  7879  00425A                     __end_of_EUSART_Initialize:
  7880                           	callstack 0
  7881                           
  7882 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  7883 ;; Defined at:
  7884 ;;		line 285 in file "mcc_generated_files/eusart.c"
  7885 ;; Parameters:    Size  Location     Type
  7886 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7887 ;;		 -> EUSART_Transmit_ISR(1), 
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;		None
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  1    wreg      void 
  7892 ;; Registers used:
  7893 ;;		wreg, status,2, status,0
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7899 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7902 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7903 ;;Total ram usage:        2 bytes
  7904 ;; Hardware stack levels used: 1
  7905 ;; Hardware stack levels required when called: 4
  7906 ;; This function calls:
  7907 ;;		Nothing
  7908 ;; This function is called by:
  7909 ;;		_EUSART_Initialize
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913                           	psect	text35
  7914  004C44                     __ptext35:
  7915                           	callstack 0
  7916  004C44                     _EUSART_SetTxInterruptHandler:
  7917                           	callstack 24
  7918  004C44                     
  7919                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  7920  004C44  C005  F1B5         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
  7921  004C48  C006  F1B6         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
  7922  004C4C  0012               	return		;funcret
  7923  004C4E                     __end_of_EUSART_SetTxInterruptHandler:
  7924                           	callstack 0
  7925                           
  7926 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  7927 ;; Defined at:
  7928 ;;		line 289 in file "mcc_generated_files/eusart.c"
  7929 ;; Parameters:    Size  Location     Type
  7930 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7931 ;;		 -> EUSART_Receive_ISR(1), 
  7932 ;; Auto vars:     Size  Location     Type
  7933 ;;		None
  7934 ;; Return value:  Size  Location     Type
  7935 ;;                  1    wreg      void 
  7936 ;; Registers used:
  7937 ;;		wreg, status,2, status,0
  7938 ;; Tracked objects:
  7939 ;;		On entry : 0/0
  7940 ;;		On exit  : 0/0
  7941 ;;		Unchanged: 0/0
  7942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7943 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7946 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7947 ;;Total ram usage:        2 bytes
  7948 ;; Hardware stack levels used: 1
  7949 ;; Hardware stack levels required when called: 4
  7950 ;; This function calls:
  7951 ;;		Nothing
  7952 ;; This function is called by:
  7953 ;;		_EUSART_Initialize
  7954 ;; This function uses a non-reentrant model
  7955 ;;
  7956                           
  7957                           	psect	text36
  7958  004C4E                     __ptext36:
  7959                           	callstack 0
  7960  004C4E                     _EUSART_SetRxInterruptHandler:
  7961                           	callstack 24
  7962  004C4E                     
  7963                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  7964  004C4E  C005  F1B3         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  7965  004C52  C006  F1B4         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  7966  004C56  0012               	return		;funcret
  7967  004C58                     __end_of_EUSART_SetRxInterruptHandler:
  7968                           	callstack 0
  7969                           
  7970 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7971 ;; Defined at:
  7972 ;;		line 277 in file "mcc_generated_files/eusart.c"
  7973 ;; Parameters:    Size  Location     Type
  7974 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7975 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7976 ;; Auto vars:     Size  Location     Type
  7977 ;;		None
  7978 ;; Return value:  Size  Location     Type
  7979 ;;                  1    wreg      void 
  7980 ;; Registers used:
  7981 ;;		wreg, status,2, status,0
  7982 ;; Tracked objects:
  7983 ;;		On entry : 0/0
  7984 ;;		On exit  : 0/0
  7985 ;;		Unchanged: 0/0
  7986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7987 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7990 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7991 ;;Total ram usage:        2 bytes
  7992 ;; Hardware stack levels used: 1
  7993 ;; Hardware stack levels required when called: 4
  7994 ;; This function calls:
  7995 ;;		Nothing
  7996 ;; This function is called by:
  7997 ;;		_EUSART_Initialize
  7998 ;; This function uses a non-reentrant model
  7999 ;;
  8000                           
  8001                           	psect	text37
  8002  004C58                     __ptext37:
  8003                           	callstack 0
  8004  004C58                     _EUSART_SetOverrunErrorHandler:
  8005                           	callstack 24
  8006  004C58                     
  8007                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  8008  004C58  C005  F1AF         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  8009  004C5C  C006  F1B0         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  8010  004C60  0012               	return		;funcret
  8011  004C62                     __end_of_EUSART_SetOverrunErrorHandler:
  8012                           	callstack 0
  8013                           
  8014 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  8015 ;; Defined at:
  8016 ;;		line 273 in file "mcc_generated_files/eusart.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8019 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  8020 ;; Auto vars:     Size  Location     Type
  8021 ;;		None
  8022 ;; Return value:  Size  Location     Type
  8023 ;;                  1    wreg      void 
  8024 ;; Registers used:
  8025 ;;		wreg, status,2, status,0
  8026 ;; Tracked objects:
  8027 ;;		On entry : 0/0
  8028 ;;		On exit  : 0/0
  8029 ;;		Unchanged: 0/0
  8030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8031 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8034 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8035 ;;Total ram usage:        2 bytes
  8036 ;; Hardware stack levels used: 1
  8037 ;; Hardware stack levels required when called: 4
  8038 ;; This function calls:
  8039 ;;		Nothing
  8040 ;; This function is called by:
  8041 ;;		_EUSART_Initialize
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           	psect	text38
  8046  004C62                     __ptext38:
  8047                           	callstack 0
  8048  004C62                     _EUSART_SetFramingErrorHandler:
  8049                           	callstack 24
  8050  004C62                     
  8051                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  8052  004C62  C005  F1B1         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  8053  004C66  C006  F1B2         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  8054  004C6A  0012               	return		;funcret
  8055  004C6C                     __end_of_EUSART_SetFramingErrorHandler:
  8056                           	callstack 0
  8057                           
  8058 ;; *************** function _EUSART_SetErrorHandler *****************
  8059 ;; Defined at:
  8060 ;;		line 281 in file "mcc_generated_files/eusart.c"
  8061 ;; Parameters:    Size  Location     Type
  8062 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8063 ;;		 -> EUSART_DefaultErrorHandler(1), 
  8064 ;; Auto vars:     Size  Location     Type
  8065 ;;		None
  8066 ;; Return value:  Size  Location     Type
  8067 ;;                  1    wreg      void 
  8068 ;; Registers used:
  8069 ;;		wreg, status,2, status,0
  8070 ;; Tracked objects:
  8071 ;;		On entry : 0/0
  8072 ;;		On exit  : 0/0
  8073 ;;		Unchanged: 0/0
  8074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8078 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8079 ;;Total ram usage:        2 bytes
  8080 ;; Hardware stack levels used: 1
  8081 ;; Hardware stack levels required when called: 4
  8082 ;; This function calls:
  8083 ;;		Nothing
  8084 ;; This function is called by:
  8085 ;;		_EUSART_Initialize
  8086 ;; This function uses a non-reentrant model
  8087 ;;
  8088                           
  8089                           	psect	text39
  8090  004C6C                     __ptext39:
  8091                           	callstack 0
  8092  004C6C                     _EUSART_SetErrorHandler:
  8093                           	callstack 24
  8094  004C6C                     
  8095                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  8096  004C6C  C005  F1AD         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  8097  004C70  C006  F1AE         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  8098  004C74  0012               	return		;funcret
  8099  004C76                     __end_of_EUSART_SetErrorHandler:
  8100                           	callstack 0
  8101                           
  8102 ;; *************** function _INA219_setCalibration_32V_2A *****************
  8103 ;; Defined at:
  8104 ;;		line 39 in file "ina219.c"
  8105 ;; Parameters:    Size  Location     Type
  8106 ;;		None
  8107 ;; Auto vars:     Size  Location     Type
  8108 ;;		None
  8109 ;; Return value:  Size  Location     Type
  8110 ;;                  1    wreg      void 
  8111 ;; Registers used:
  8112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8113 ;; Tracked objects:
  8114 ;;		On entry : 0/0
  8115 ;;		On exit  : 0/0
  8116 ;;		Unchanged: 0/0
  8117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8122 ;;Total ram usage:        0 bytes
  8123 ;; Hardware stack levels used: 1
  8124 ;; Hardware stack levels required when called: 14
  8125 ;; This function calls:
  8126 ;;		_INA219_WriteRegister
  8127 ;; This function is called by:
  8128 ;;		_main
  8129 ;; This function uses a non-reentrant model
  8130 ;;
  8131                           
  8132                           	psect	text40
  8133  004874                     __ptext40:
  8134                           	callstack 0
  8135  004874                     _INA219_setCalibration_32V_2A:
  8136                           	callstack 16
  8137  004874                     
  8138                           ;ina219.c: 40:     ina219_calibrationValue = 4096;
  8139  004874  0E10               	movlw	16
  8140  004876  0100               	movlb	0	; () banked
  8141  004878  6FF4               	movwf	(_ina219_calibrationValue@ina219$F1585+1)& (0+255),b
  8142  00487A  0E00               	movlw	0
  8143  00487C  6FF3               	movwf	_ina219_calibrationValue@ina219$F1585& (0+255),b
  8144                           
  8145                           ;ina219.c: 41:     ina219_currentDivider_mA = 100;
  8146  00487E  0E00               	movlw	0
  8147  004880  6FF2               	movwf	(_ina219_currentDivider_mA@ina219$F1586+1)& (0+255),b
  8148  004882  0E64               	movlw	100
  8149  004884  6FF1               	movwf	_ina219_currentDivider_mA@ina219$F1586& (0+255),b
  8150                           
  8151                           ;ina219.c: 42:     ina219_powerMultiplier_mW = 2;
  8152  004886  0E00               	movlw	0
  8153  004888  6FF0               	movwf	(_ina219_powerMultiplier_mW@ina219$F1587+1)& (0+255),b
  8154  00488A  0E02               	movlw	2
  8155  00488C  6FEF               	movwf	_ina219_powerMultiplier_mW@ina219$F1587& (0+255),b
  8156  00488E                     
  8157                           ; BSR set to: 0
  8158                           ;ina219.c: 43:     INA219_WriteRegister((0x05), ina219_calibrationValue);
  8159  00488E  C0F3  F01B         	movff	_ina219_calibrationValue@ina219$F1585,INA219_WriteRegister@data
  8160  004892  C0F4  F01C         	movff	_ina219_calibrationValue@ina219$F1585+1,INA219_WriteRegister@data+1
  8161  004896  0E05               	movlw	5
  8162  004898  EC33  F025         	call	_INA219_WriteRegister
  8163  00489C                     
  8164                           ;ina219.c: 44:     INA219_WriteRegister((0x00), (INA219_CONFIG_BVOLTAGERANGE_32V |
  8165  00489C  0E39               	movlw	57
  8166  00489E  6E1C               	movwf	(INA219_WriteRegister@data+1)^0,c
  8167  0048A0  0E9F               	movlw	159
  8168  0048A2  6E1B               	movwf	INA219_WriteRegister@data^0,c
  8169  0048A4  0E00               	movlw	0
  8170  0048A6  EC33  F025         	call	_INA219_WriteRegister
  8171  0048AA  0012               	return		;funcret
  8172  0048AC                     __end_of_INA219_setCalibration_32V_2A:
  8173                           	callstack 0
  8174                           
  8175 ;; *************** function _INA219_getShuntVoltage_mV *****************
  8176 ;; Defined at:
  8177 ;;		line 117 in file "ina219.c"
  8178 ;; Parameters:    Size  Location     Type
  8179 ;;		None
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;  value           2   83[COMRAM] unsigned short 
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  4   17[BANK0 ] float 
  8184 ;; Registers used:
  8185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8191 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8192 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8194 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8195 ;;Total ram usage:        6 bytes
  8196 ;; Hardware stack levels used: 1
  8197 ;; Hardware stack levels required when called: 15
  8198 ;; This function calls:
  8199 ;;		_INA219_getShuntVoltage_raw
  8200 ;;		___flmul
  8201 ;;		___xxtofl
  8202 ;; This function is called by:
  8203 ;;		_main
  8204 ;; This function uses a non-reentrant model
  8205 ;;
  8206                           
  8207                           	psect	text41
  8208  0045D4                     __ptext41:
  8209                           	callstack 0
  8210  0045D4                     _INA219_getShuntVoltage_mV:
  8211                           	callstack 15
  8212  0045D4                     
  8213                           ;ina219.c: 118:     uint16_t value = INA219_getShuntVoltage_raw();
  8214  0045D4  EC87  F025         	call	_INA219_getShuntVoltage_raw	;wreg free
  8215  0045D8  C021  F054         	movff	?_INA219_getShuntVoltage_raw,INA219_getShuntVoltage_mV@value
  8216  0045DC  C022  F055         	movff	?_INA219_getShuntVoltage_raw+1,INA219_getShuntVoltage_mV@value+1
  8217  0045E0                     
  8218                           ;ina219.c: 119:     return value * 0.01;
  8219  0045E0  C054  F025         	movff	INA219_getShuntVoltage_mV@value,___xxtofl@val
  8220  0045E4  C055  F026         	movff	INA219_getShuntVoltage_mV@value+1,___xxtofl@val+1
  8221  0045E8  6A27               	clrf	(___xxtofl@val+2)^0,c
  8222  0045EA  6A28               	clrf	(___xxtofl@val+3)^0,c
  8223  0045EC  0E00               	movlw	0
  8224  0045EE  EC47  F018         	call	___xxtofl
  8225  0045F2  C025  F04C         	movff	?___xxtofl,___flmul@b
  8226  0045F6  C026  F04D         	movff	?___xxtofl+1,___flmul@b+1
  8227  0045FA  C027  F04E         	movff	?___xxtofl+2,___flmul@b+2
  8228  0045FE  C028  F04F         	movff	?___xxtofl+3,___flmul@b+3
  8229  004602  0E0A               	movlw	10
  8230  004604  6E50               	movwf	___flmul@a^0,c
  8231  004606  0ED7               	movlw	215
  8232  004608  6E51               	movwf	(___flmul@a+1)^0,c
  8233  00460A  0E23               	movlw	35
  8234  00460C  6E52               	movwf	(___flmul@a+2)^0,c
  8235  00460E  0E3C               	movlw	60
  8236  004610  6E53               	movwf	(___flmul@a+3)^0,c
  8237  004612  EC59  F013         	call	___flmul	;wreg free
  8238  004616  C04C  F071         	movff	?___flmul,?_INA219_getShuntVoltage_mV
  8239  00461A  C04D  F072         	movff	?___flmul+1,?_INA219_getShuntVoltage_mV+1
  8240  00461E  C04E  F073         	movff	?___flmul+2,?_INA219_getShuntVoltage_mV+2
  8241  004622  C04F  F074         	movff	?___flmul+3,?_INA219_getShuntVoltage_mV+3
  8242  004626  0012               	return		;funcret
  8243  004628                     __end_of_INA219_getShuntVoltage_mV:
  8244                           	callstack 0
  8245                           
  8246 ;; *************** function _INA219_getShuntVoltage_raw *****************
  8247 ;; Defined at:
  8248 ;;		line 93 in file "ina219.c"
  8249 ;; Parameters:    Size  Location     Type
  8250 ;;		None
  8251 ;; Auto vars:     Size  Location     Type
  8252 ;;  value           2   34[COMRAM] short 
  8253 ;; Return value:  Size  Location     Type
  8254 ;;                  2   32[COMRAM] short 
  8255 ;; Registers used:
  8256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8257 ;; Tracked objects:
  8258 ;;		On entry : 0/0
  8259 ;;		On exit  : 0/0
  8260 ;;		Unchanged: 0/0
  8261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8262 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8263 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8265 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8266 ;;Total ram usage:        4 bytes
  8267 ;; Hardware stack levels used: 1
  8268 ;; Hardware stack levels required when called: 14
  8269 ;; This function calls:
  8270 ;;		_INA219_ReadRegister
  8271 ;; This function is called by:
  8272 ;;		_INA219_getShuntVoltage_mV
  8273 ;; This function uses a non-reentrant model
  8274 ;;
  8275                           
  8276                           	psect	text42
  8277  004B0E                     __ptext42:
  8278                           	callstack 0
  8279  004B0E                     _INA219_getShuntVoltage_raw:
  8280                           	callstack 15
  8281  004B0E                     
  8282                           ;ina219.c: 94:     int16_t value;;ina219.c: 95:     INA219_ReadRegister((0x01), &value);
  8283  004B0E  0E23               	movlw	low INA219_getShuntVoltage_raw@value
  8284  004B10  6E1E               	movwf	INA219_ReadRegister@data^0,c
  8285  004B12  0E00               	movlw	high INA219_getShuntVoltage_raw@value
  8286  004B14  6E1F               	movwf	(INA219_ReadRegister@data+1)^0,c
  8287  004B16  0E01               	movlw	1
  8288  004B18  EC69  F025         	call	_INA219_ReadRegister
  8289  004B1C                     
  8290                           ;ina219.c: 96:     return (int16_t) value;
  8291  004B1C  C023  F021         	movff	INA219_getShuntVoltage_raw@value,?_INA219_getShuntVoltage_raw
  8292  004B20  C024  F022         	movff	INA219_getShuntVoltage_raw@value+1,?_INA219_getShuntVoltage_raw+1
  8293  004B24  0012               	return		;funcret
  8294  004B26                     __end_of_INA219_getShuntVoltage_raw:
  8295                           	callstack 0
  8296                           
  8297 ;; *************** function _INA219_getPower_mW *****************
  8298 ;; Defined at:
  8299 ;;		line 128 in file "ina219.c"
  8300 ;; Parameters:    Size  Location     Type
  8301 ;;		None
  8302 ;; Auto vars:     Size  Location     Type
  8303 ;;  valueDec        4   21[BANK0 ] float 
  8304 ;; Return value:  Size  Location     Type
  8305 ;;                  4   17[BANK0 ] float 
  8306 ;; Registers used:
  8307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8308 ;; Tracked objects:
  8309 ;;		On entry : 0/0
  8310 ;;		On exit  : 0/0
  8311 ;;		Unchanged: 0/0
  8312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8313 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8314 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8316 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8317 ;;Total ram usage:        8 bytes
  8318 ;; Hardware stack levels used: 1
  8319 ;; Hardware stack levels required when called: 15
  8320 ;; This function calls:
  8321 ;;		_INA219_getPower_raw
  8322 ;;		___flmul
  8323 ;;		___xxtofl
  8324 ;; This function is called by:
  8325 ;;		_main
  8326 ;; This function uses a non-reentrant model
  8327 ;;
  8328                           
  8329                           	psect	text43
  8330  00406A                     __ptext43:
  8331                           	callstack 0
  8332  00406A                     _INA219_getPower_mW:
  8333                           	callstack 15
  8334  00406A                     
  8335                           ;ina219.c: 129:     float valueDec = INA219_getPower_raw();
  8336  00406A  EC93  F025         	call	_INA219_getPower_raw	;wreg free
  8337  00406E  C021  F025         	movff	?_INA219_getPower_raw,___xxtofl@val
  8338  004072  C022  F026         	movff	?_INA219_getPower_raw+1,___xxtofl@val+1
  8339  004076  0E00               	movlw	0
  8340  004078  BE26               	btfsc	(___xxtofl@val+1)^0,7,c
  8341  00407A  0EFF               	movlw	-1
  8342  00407C  6E27               	movwf	(___xxtofl@val+2)^0,c
  8343  00407E  6E28               	movwf	(___xxtofl@val+3)^0,c
  8344  004080  0E01               	movlw	1
  8345  004082  EC47  F018         	call	___xxtofl
  8346  004086  C025  F075         	movff	?___xxtofl,INA219_getPower_mW@valueDec
  8347  00408A  C026  F076         	movff	?___xxtofl+1,INA219_getPower_mW@valueDec+1
  8348  00408E  C027  F077         	movff	?___xxtofl+2,INA219_getPower_mW@valueDec+2
  8349  004092  C028  F078         	movff	?___xxtofl+3,INA219_getPower_mW@valueDec+3
  8350  004096                     
  8351                           ;ina219.c: 130:     valueDec *= ina219_powerMultiplier_mW;
  8352  004096  C075  F04C         	movff	INA219_getPower_mW@valueDec,___flmul@b
  8353  00409A  C076  F04D         	movff	INA219_getPower_mW@valueDec+1,___flmul@b+1
  8354  00409E  C077  F04E         	movff	INA219_getPower_mW@valueDec+2,___flmul@b+2
  8355  0040A2  C078  F04F         	movff	INA219_getPower_mW@valueDec+3,___flmul@b+3
  8356  0040A6  C0EF  F025         	movff	_ina219_powerMultiplier_mW@ina219$F1587,___xxtofl@val
  8357  0040AA  C0F0  F026         	movff	_ina219_powerMultiplier_mW@ina219$F1587+1,___xxtofl@val+1
  8358  0040AE  6A27               	clrf	(___xxtofl@val+2)^0,c
  8359  0040B0  6A28               	clrf	(___xxtofl@val+3)^0,c
  8360  0040B2  0E00               	movlw	0
  8361  0040B4  EC47  F018         	call	___xxtofl
  8362  0040B8  C025  F050         	movff	?___xxtofl,___flmul@a
  8363  0040BC  C026  F051         	movff	?___xxtofl+1,___flmul@a+1
  8364  0040C0  C027  F052         	movff	?___xxtofl+2,___flmul@a+2
  8365  0040C4  C028  F053         	movff	?___xxtofl+3,___flmul@a+3
  8366  0040C8  EC59  F013         	call	___flmul	;wreg free
  8367  0040CC  C04C  F075         	movff	?___flmul,INA219_getPower_mW@valueDec
  8368  0040D0  C04D  F076         	movff	?___flmul+1,INA219_getPower_mW@valueDec+1
  8369  0040D4  C04E  F077         	movff	?___flmul+2,INA219_getPower_mW@valueDec+2
  8370  0040D8  C04F  F078         	movff	?___flmul+3,INA219_getPower_mW@valueDec+3
  8371  0040DC                     
  8372                           ;ina219.c: 131:     return valueDec;
  8373  0040DC  C075  F071         	movff	INA219_getPower_mW@valueDec,?_INA219_getPower_mW
  8374  0040E0  C076  F072         	movff	INA219_getPower_mW@valueDec+1,?_INA219_getPower_mW+1
  8375  0040E4  C077  F073         	movff	INA219_getPower_mW@valueDec+2,?_INA219_getPower_mW+2
  8376  0040E8  C078  F074         	movff	INA219_getPower_mW@valueDec+3,?_INA219_getPower_mW+3
  8377  0040EC  0012               	return		;funcret
  8378  0040EE                     __end_of_INA219_getPower_mW:
  8379                           	callstack 0
  8380                           
  8381 ;; *************** function _INA219_getPower_raw *****************
  8382 ;; Defined at:
  8383 ;;		line 105 in file "ina219.c"
  8384 ;; Parameters:    Size  Location     Type
  8385 ;;		None
  8386 ;; Auto vars:     Size  Location     Type
  8387 ;;  value           2   34[COMRAM] unsigned short 
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  2   32[COMRAM] short 
  8390 ;; Registers used:
  8391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8397 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8398 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8400 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8401 ;;Total ram usage:        4 bytes
  8402 ;; Hardware stack levels used: 1
  8403 ;; Hardware stack levels required when called: 14
  8404 ;; This function calls:
  8405 ;;		_INA219_WriteRegister
  8406 ;; This function is called by:
  8407 ;;		_INA219_getPower_mW
  8408 ;; This function uses a non-reentrant model
  8409 ;;
  8410                           
  8411                           	psect	text44
  8412  004B26                     __ptext44:
  8413                           	callstack 0
  8414  004B26                     _INA219_getPower_raw:
  8415                           	callstack 15
  8416  004B26                     
  8417                           ;ina219.c: 106:     uint16_t value;;ina219.c: 108:     INA219_WriteRegister((0x03), &val
      +                          ue);
  8418  004B26  0E00               	movlw	high INA219_getPower_raw@value
  8419  004B28  6E1C               	movwf	(INA219_WriteRegister@data+1)^0,c
  8420  004B2A  0E23               	movlw	low INA219_getPower_raw@value
  8421  004B2C  6E1B               	movwf	INA219_WriteRegister@data^0,c
  8422  004B2E  0E03               	movlw	3
  8423  004B30  EC33  F025         	call	_INA219_WriteRegister
  8424  004B34                     
  8425                           ;ina219.c: 109:     return (int16_t) value;
  8426  004B34  C023  F021         	movff	INA219_getPower_raw@value,?_INA219_getPower_raw
  8427  004B38  C024  F022         	movff	INA219_getPower_raw@value+1,?_INA219_getPower_raw+1
  8428  004B3C  0012               	return		;funcret
  8429  004B3E                     __end_of_INA219_getPower_raw:
  8430                           	callstack 0
  8431                           
  8432 ;; *************** function _INA219_WriteRegister *****************
  8433 ;; Defined at:
  8434 ;;		line 26 in file "ina219.c"
  8435 ;; Parameters:    Size  Location     Type
  8436 ;;  address         1    wreg     unsigned char 
  8437 ;;  data            2   26[COMRAM] unsigned short 
  8438 ;; Auto vars:     Size  Location     Type
  8439 ;;  address         1   28[COMRAM] unsigned char 
  8440 ;;  writeBuffer     3   29[COMRAM] unsigned char [3]
  8441 ;; Return value:  Size  Location     Type
  8442 ;;                  1    wreg      void 
  8443 ;; Registers used:
  8444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8445 ;; Tracked objects:
  8446 ;;		On entry : 0/0
  8447 ;;		On exit  : 0/0
  8448 ;;		Unchanged: 0/0
  8449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8450 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8451 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8453 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8454 ;;Total ram usage:        6 bytes
  8455 ;; Hardware stack levels used: 1
  8456 ;; Hardware stack levels required when called: 13
  8457 ;; This function calls:
  8458 ;;		_I2C_WriteNBytes
  8459 ;; This function is called by:
  8460 ;;		_INA219_setCalibration_32V_2A
  8461 ;;		_INA219_getPower_raw
  8462 ;;		_INA219_setCalibration_32V_1A
  8463 ;;		_INA219_setCalibration_16V_400mA
  8464 ;;		_INA219_setCalibration_16V_32A
  8465 ;; This function uses a non-reentrant model
  8466 ;;
  8467                           
  8468                           	psect	text45
  8469  004A66                     __ptext45:
  8470                           	callstack 0
  8471  004A66                     _INA219_WriteRegister:
  8472                           	callstack 16
  8473                           
  8474                           ;incstack = 0
  8475                           ;INA219_WriteRegister@address stored from wreg
  8476  004A66  6E1D               	movwf	INA219_WriteRegister@address^0,c
  8477  004A68                     
  8478                           ;ina219.c: 27:     uint8_t writeBuffer[3];;ina219.c: 29:     writeBuffer[0] = address;
  8479  004A68  C01D  F01E         	movff	INA219_WriteRegister@address,INA219_WriteRegister@writeBuffer
  8480  004A6C                     
  8481                           ;ina219.c: 30:     writeBuffer[1] = (uint8_t) (data >> 8);
  8482  004A6C  501C               	movf	(INA219_WriteRegister@data+1)^0,w,c
  8483  004A6E  6E1F               	movwf	(INA219_WriteRegister@writeBuffer+1)^0,c
  8484  004A70                     
  8485                           ;ina219.c: 31:     writeBuffer[2] = (uint8_t) (data & 0x00FF);
  8486  004A70  C01B  F020         	movff	INA219_WriteRegister@data,INA219_WriteRegister@writeBuffer+2
  8487  004A74                     
  8488                           ;ina219.c: 32:     I2C_WriteNBytes((0x40), writeBuffer, sizeof (writeBuffer));
  8489  004A74  0E1E               	movlw	low INA219_WriteRegister@writeBuffer
  8490  004A76  6E16               	movwf	I2C_WriteNBytes@data^0,c
  8491  004A78  0E00               	movlw	high INA219_WriteRegister@writeBuffer
  8492  004A7A  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
  8493  004A7C  0E00               	movlw	0
  8494  004A7E  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
  8495  004A80  0E03               	movlw	3
  8496  004A82  6E18               	movwf	I2C_WriteNBytes@len^0,c
  8497  004A84  0E40               	movlw	64
  8498  004A86  EC91  F022         	call	_I2C_WriteNBytes
  8499  004A8A  0012               	return		;funcret
  8500  004A8C                     __end_of_INA219_WriteRegister:
  8501                           	callstack 0
  8502                           
  8503 ;; *************** function _I2C_WriteNBytes *****************
  8504 ;; Defined at:
  8505 ;;		line 111 in file "mcc_generated_files/examples/i2c_master_example.c"
  8506 ;; Parameters:    Size  Location     Type
  8507 ;;  address         1    wreg     unsigned char 
  8508 ;;  data            2   21[COMRAM] PTR unsigned char 
  8509 ;;		 -> INA219_WriteRegister@writeBuffer(3), 
  8510 ;;  len             2   23[COMRAM] unsigned int 
  8511 ;; Auto vars:     Size  Location     Type
  8512 ;;  address         1   25[COMRAM] unsigned char 
  8513 ;; Return value:  Size  Location     Type
  8514 ;;                  1    wreg      void 
  8515 ;; Registers used:
  8516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8517 ;; Tracked objects:
  8518 ;;		On entry : 0/0
  8519 ;;		On exit  : 0/0
  8520 ;;		Unchanged: 0/0
  8521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8522 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8523 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8525 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8526 ;;Total ram usage:        5 bytes
  8527 ;; Hardware stack levels used: 1
  8528 ;; Hardware stack levels required when called: 12
  8529 ;; This function calls:
  8530 ;;		_I2C_Close
  8531 ;;		_I2C_MasterWrite
  8532 ;;		_I2C_Open
  8533 ;;		_I2C_SetAddressNackCallback
  8534 ;;		_I2C_SetBuffer
  8535 ;; This function is called by:
  8536 ;;		_INA219_WriteRegister
  8537 ;; This function uses a non-reentrant model
  8538 ;;
  8539                           
  8540                           	psect	text46
  8541  004522                     __ptext46:
  8542                           	callstack 0
  8543  004522                     _I2C_WriteNBytes:
  8544                           	callstack 16
  8545                           
  8546                           ;incstack = 0
  8547                           ;I2C_WriteNBytes@address stored from wreg
  8548  004522  6E1A               	movwf	I2C_WriteNBytes@address^0,c
  8549  004524                     l5264:
  8550  004524  501A               	movf	I2C_WriteNBytes@address^0,w,c
  8551  004526  ECAB  F01F         	call	_I2C_Open
  8552  00452A  0900               	iorlw	0
  8553  00452C  B4D8               	btfsc	status,2,c
  8554  00452E  EF9B  F022         	goto	u4681
  8555  004532  EF9D  F022         	goto	u4680
  8556  004536                     u4681:
  8557  004536  EF92  F022         	goto	l5264
  8558  00453A                     u4680:
  8559  00453A                     
  8560                           ;mcc_generated_files/examples/i2c_master_example.c: 114:     I2C_SetBuffer(data,len);
  8561  00453A  C016  F005         	movff	I2C_WriteNBytes@data,I2C_SetBuffer@buffer
  8562  00453E  C017  F006         	movff	I2C_WriteNBytes@data+1,I2C_SetBuffer@buffer+1
  8563  004542  C018  F007         	movff	I2C_WriteNBytes@len,I2C_SetBuffer@bufferSize
  8564  004546  C019  F008         	movff	I2C_WriteNBytes@len+1,I2C_SetBuffer@bufferSize+1
  8565  00454A  EC46  F025         	call	_I2C_SetBuffer	;wreg free
  8566  00454E                     
  8567                           ;mcc_generated_files/examples/i2c_master_example.c: 115:     I2C_SetAddressNackCallback(
      +                          ((void*)0),((void*)0));
  8568  00454E  0E00               	movlw	0
  8569  004550  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
  8570  004552  0E00               	movlw	0
  8571  004554  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  8572  004556  0E00               	movlw	0
  8573  004558  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  8574  00455A  0E00               	movlw	0
  8575  00455C  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  8576  00455E  ECB7  F025         	call	_I2C_SetAddressNackCallback	;wreg free
  8577  004562                     
  8578                           ;mcc_generated_files/examples/i2c_master_example.c: 116:     I2C_MasterWrite();
  8579  004562  EC3B  F026         	call	_I2C_MasterWrite	;wreg free
  8580  004566                     l5272:
  8581  004566  ECE1  F024         	call	_I2C_Close	;wreg free
  8582  00456A  06E8               	decf	wreg,f,c
  8583  00456C  B4D8               	btfsc	status,2,c
  8584  00456E  EFBB  F022         	goto	u4691
  8585  004572  EFBD  F022         	goto	u4690
  8586  004576                     u4691:
  8587  004576  EFB3  F022         	goto	l5272
  8588  00457A                     u4690:
  8589  00457A  0012               	return		;funcret
  8590  00457C                     __end_of_I2C_WriteNBytes:
  8591                           	callstack 0
  8592                           
  8593 ;; *************** function _INA219_getCurrent_mA *****************
  8594 ;; Defined at:
  8595 ;;		line 122 in file "ina219.c"
  8596 ;; Parameters:    Size  Location     Type
  8597 ;;		None
  8598 ;; Auto vars:     Size  Location     Type
  8599 ;;  valueDec        4   21[BANK0 ] float 
  8600 ;; Return value:  Size  Location     Type
  8601 ;;                  4   17[BANK0 ] float 
  8602 ;; Registers used:
  8603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8604 ;; Tracked objects:
  8605 ;;		On entry : 0/0
  8606 ;;		On exit  : 0/0
  8607 ;;		Unchanged: 0/0
  8608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8609 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8610 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8612 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8613 ;;Total ram usage:        8 bytes
  8614 ;; Hardware stack levels used: 1
  8615 ;; Hardware stack levels required when called: 15
  8616 ;; This function calls:
  8617 ;;		_INA219_getCurrent_raw
  8618 ;;		___fldiv
  8619 ;;		___flmul
  8620 ;;		___xxtofl
  8621 ;; This function is called by:
  8622 ;;		_main
  8623 ;; This function uses a non-reentrant model
  8624 ;;
  8625                           
  8626                           	psect	text47
  8627  003D72                     __ptext47:
  8628                           	callstack 0
  8629  003D72                     _INA219_getCurrent_mA:
  8630                           	callstack 15
  8631  003D72                     
  8632                           ;ina219.c: 123:     float valueDec = INA219_getCurrent_raw();
  8633  003D72  EC9F  F025         	call	_INA219_getCurrent_raw	;wreg free
  8634  003D76  C021  F025         	movff	?_INA219_getCurrent_raw,___xxtofl@val
  8635  003D7A  C022  F026         	movff	?_INA219_getCurrent_raw+1,___xxtofl@val+1
  8636  003D7E  0E00               	movlw	0
  8637  003D80  BE26               	btfsc	(___xxtofl@val+1)^0,7,c
  8638  003D82  0EFF               	movlw	-1
  8639  003D84  6E27               	movwf	(___xxtofl@val+2)^0,c
  8640  003D86  6E28               	movwf	(___xxtofl@val+3)^0,c
  8641  003D88  0E01               	movlw	1
  8642  003D8A  EC47  F018         	call	___xxtofl
  8643  003D8E  C025  F075         	movff	?___xxtofl,INA219_getCurrent_mA@valueDec
  8644  003D92  C026  F076         	movff	?___xxtofl+1,INA219_getCurrent_mA@valueDec+1
  8645  003D96  C027  F077         	movff	?___xxtofl+2,INA219_getCurrent_mA@valueDec+2
  8646  003D9A  C028  F078         	movff	?___xxtofl+3,INA219_getCurrent_mA@valueDec+3
  8647  003D9E                     
  8648                           ;ina219.c: 124:     valueDec = valueDec / ina219_currentDivider_mA * 100.f;
  8649  003D9E  C0F1  F025         	movff	_ina219_currentDivider_mA@ina219$F1586,___xxtofl@val
  8650  003DA2  C0F2  F026         	movff	_ina219_currentDivider_mA@ina219$F1586+1,___xxtofl@val+1
  8651  003DA6  6A27               	clrf	(___xxtofl@val+2)^0,c
  8652  003DA8  6A28               	clrf	(___xxtofl@val+3)^0,c
  8653  003DAA  0E00               	movlw	0
  8654  003DAC  EC47  F018         	call	___xxtofl
  8655  003DB0  C025  F037         	movff	?___xxtofl,___fldiv@a
  8656  003DB4  C026  F038         	movff	?___xxtofl+1,___fldiv@a+1
  8657  003DB8  C027  F039         	movff	?___xxtofl+2,___fldiv@a+2
  8658  003DBC  C028  F03A         	movff	?___xxtofl+3,___fldiv@a+3
  8659  003DC0  C075  F033         	movff	INA219_getCurrent_mA@valueDec,___fldiv@b
  8660  003DC4  C076  F034         	movff	INA219_getCurrent_mA@valueDec+1,___fldiv@b+1
  8661  003DC8  C077  F035         	movff	INA219_getCurrent_mA@valueDec+2,___fldiv@b+2
  8662  003DCC  C078  F036         	movff	INA219_getCurrent_mA@valueDec+3,___fldiv@b+3
  8663  003DD0  EC6F  F015         	call	___fldiv	;wreg free
  8664  003DD4  C033  F04C         	movff	?___fldiv,___flmul@b
  8665  003DD8  C034  F04D         	movff	?___fldiv+1,___flmul@b+1
  8666  003DDC  C035  F04E         	movff	?___fldiv+2,___flmul@b+2
  8667  003DE0  C036  F04F         	movff	?___fldiv+3,___flmul@b+3
  8668  003DE4  0E00               	movlw	0
  8669  003DE6  6E50               	movwf	___flmul@a^0,c
  8670  003DE8  0E00               	movlw	0
  8671  003DEA  6E51               	movwf	(___flmul@a+1)^0,c
  8672  003DEC  0EC8               	movlw	200
  8673  003DEE  6E52               	movwf	(___flmul@a+2)^0,c
  8674  003DF0  0E42               	movlw	66
  8675  003DF2  6E53               	movwf	(___flmul@a+3)^0,c
  8676  003DF4  EC59  F013         	call	___flmul	;wreg free
  8677  003DF8  C04C  F075         	movff	?___flmul,INA219_getCurrent_mA@valueDec
  8678  003DFC  C04D  F076         	movff	?___flmul+1,INA219_getCurrent_mA@valueDec+1
  8679  003E00  C04E  F077         	movff	?___flmul+2,INA219_getCurrent_mA@valueDec+2
  8680  003E04  C04F  F078         	movff	?___flmul+3,INA219_getCurrent_mA@valueDec+3
  8681  003E08                     
  8682                           ;ina219.c: 125:     return valueDec;
  8683  003E08  C075  F071         	movff	INA219_getCurrent_mA@valueDec,?_INA219_getCurrent_mA
  8684  003E0C  C076  F072         	movff	INA219_getCurrent_mA@valueDec+1,?_INA219_getCurrent_mA+1
  8685  003E10  C077  F073         	movff	INA219_getCurrent_mA@valueDec+2,?_INA219_getCurrent_mA+2
  8686  003E14  C078  F074         	movff	INA219_getCurrent_mA@valueDec+3,?_INA219_getCurrent_mA+3
  8687  003E18  0012               	return		;funcret
  8688  003E1A                     __end_of_INA219_getCurrent_mA:
  8689                           	callstack 0
  8690                           
  8691 ;; *************** function ___fldiv *****************
  8692 ;; Defined at:
  8693 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  8694 ;; Parameters:    Size  Location     Type
  8695 ;;  b               4   50[COMRAM] float 
  8696 ;;  a               4   54[COMRAM] float 
  8697 ;; Auto vars:     Size  Location     Type
  8698 ;;  grs             4   69[COMRAM] unsigned long 
  8699 ;;  rem             4   62[COMRAM] unsigned long 
  8700 ;;  new_exp         2   67[COMRAM] short 
  8701 ;;  aexp            1   74[COMRAM] unsigned char 
  8702 ;;  bexp            1   73[COMRAM] unsigned char 
  8703 ;;  sign            1   66[COMRAM] unsigned char 
  8704 ;; Return value:  Size  Location     Type
  8705 ;;                  4   50[COMRAM] unsigned char 
  8706 ;; Registers used:
  8707 ;;		wreg, status,2, status,0
  8708 ;; Tracked objects:
  8709 ;;		On entry : 0/0
  8710 ;;		On exit  : 0/0
  8711 ;;		Unchanged: 0/0
  8712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8713 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8714 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8715 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8716 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8717 ;;Total ram usage:       25 bytes
  8718 ;; Hardware stack levels used: 1
  8719 ;; Hardware stack levels required when called: 4
  8720 ;; This function calls:
  8721 ;;		Nothing
  8722 ;; This function is called by:
  8723 ;;		_main
  8724 ;;		_INA219_getCurrent_mA
  8725 ;;		_efgtoa
  8726 ;; This function uses a non-reentrant model
  8727 ;;
  8728                           
  8729                           	psect	text48
  8730  002ADE                     __ptext48:
  8731                           	callstack 0
  8732  002ADE                     ___fldiv:
  8733                           	callstack 22
  8734  002ADE  5036               	movf	(___fldiv@b+3)^0,w,c
  8735  002AE0  0B80               	andlw	128
  8736  002AE2  6E43               	movwf	___fldiv@sign^0,c
  8737  002AE4  5036               	movf	(___fldiv@b+3)^0,w,c
  8738  002AE6  2436               	addwf	(___fldiv@b+3)^0,w,c
  8739  002AE8  6E4A               	movwf	___fldiv@bexp^0,c
  8740  002AEA  AE35               	btfss	(___fldiv@b+2)^0,7,c
  8741  002AEC  EF7A  F015         	goto	u6411
  8742  002AF0  EF7C  F015         	goto	u6410
  8743  002AF4                     u6411:
  8744  002AF4  EF7D  F015         	goto	l6578
  8745  002AF8                     u6410:
  8746  002AF8  804A               	bsf	___fldiv@bexp^0,0,c
  8747  002AFA                     l6578:
  8748  002AFA  504A               	movf	___fldiv@bexp^0,w,c
  8749  002AFC  B4D8               	btfsc	status,2,c
  8750  002AFE  EF83  F015         	goto	u6421
  8751  002B02  EF85  F015         	goto	u6420
  8752  002B06                     u6421:
  8753  002B06  EF9A  F015         	goto	l6588
  8754  002B0A                     u6420:
  8755  002B0A  284A               	incf	___fldiv@bexp^0,w,c
  8756  002B0C  A4D8               	btfss	status,2,c
  8757  002B0E  EF8B  F015         	goto	u6431
  8758  002B12  EF8D  F015         	goto	u6430
  8759  002B16                     u6431:
  8760  002B16  EF95  F015         	goto	l6584
  8761  002B1A                     u6430:
  8762  002B1A  0E00               	movlw	0
  8763  002B1C  6E33               	movwf	___fldiv@b^0,c
  8764  002B1E  0E00               	movlw	0
  8765  002B20  6E34               	movwf	(___fldiv@b+1)^0,c
  8766  002B22  0E00               	movlw	0
  8767  002B24  6E35               	movwf	(___fldiv@b+2)^0,c
  8768  002B26  0E00               	movlw	0
  8769  002B28  6E36               	movwf	(___fldiv@b+3)^0,c
  8770  002B2A                     l6584:
  8771  002B2A  8E35               	bsf	(___fldiv@b+2)^0,7,c
  8772  002B2C  0E00               	movlw	0
  8773  002B2E  6E36               	movwf	(___fldiv@b+3)^0,c
  8774  002B30  EFA2  F015         	goto	l6590
  8775  002B34                     l6588:
  8776  002B34  0E00               	movlw	0
  8777  002B36  6E33               	movwf	___fldiv@b^0,c
  8778  002B38  0E00               	movlw	0
  8779  002B3A  6E34               	movwf	(___fldiv@b+1)^0,c
  8780  002B3C  0E00               	movlw	0
  8781  002B3E  6E35               	movwf	(___fldiv@b+2)^0,c
  8782  002B40  0E00               	movlw	0
  8783  002B42  6E36               	movwf	(___fldiv@b+3)^0,c
  8784  002B44                     l6590:
  8785  002B44  503A               	movf	(___fldiv@a+3)^0,w,c
  8786  002B46  0B80               	andlw	128
  8787  002B48  1A43               	xorwf	___fldiv@sign^0,f,c
  8788  002B4A  503A               	movf	(___fldiv@a+3)^0,w,c
  8789  002B4C  243A               	addwf	(___fldiv@a+3)^0,w,c
  8790  002B4E  6E4B               	movwf	___fldiv@aexp^0,c
  8791  002B50  AE39               	btfss	(___fldiv@a+2)^0,7,c
  8792  002B52  EFAD  F015         	goto	u6441
  8793  002B56  EFAF  F015         	goto	u6440
  8794  002B5A                     u6441:
  8795  002B5A  EFB0  F015         	goto	l6598
  8796  002B5E                     u6440:
  8797  002B5E  804B               	bsf	___fldiv@aexp^0,0,c
  8798  002B60                     l6598:
  8799  002B60  504B               	movf	___fldiv@aexp^0,w,c
  8800  002B62  B4D8               	btfsc	status,2,c
  8801  002B64  EFB6  F015         	goto	u6451
  8802  002B68  EFB8  F015         	goto	u6450
  8803  002B6C                     u6451:
  8804  002B6C  EFCD  F015         	goto	l6608
  8805  002B70                     u6450:
  8806  002B70  284B               	incf	___fldiv@aexp^0,w,c
  8807  002B72  A4D8               	btfss	status,2,c
  8808  002B74  EFBE  F015         	goto	u6461
  8809  002B78  EFC0  F015         	goto	u6460
  8810  002B7C                     u6461:
  8811  002B7C  EFC8  F015         	goto	l6604
  8812  002B80                     u6460:
  8813  002B80  0E00               	movlw	0
  8814  002B82  6E37               	movwf	___fldiv@a^0,c
  8815  002B84  0E00               	movlw	0
  8816  002B86  6E38               	movwf	(___fldiv@a+1)^0,c
  8817  002B88  0E00               	movlw	0
  8818  002B8A  6E39               	movwf	(___fldiv@a+2)^0,c
  8819  002B8C  0E00               	movlw	0
  8820  002B8E  6E3A               	movwf	(___fldiv@a+3)^0,c
  8821  002B90                     l6604:
  8822  002B90  8E39               	bsf	(___fldiv@a+2)^0,7,c
  8823  002B92  0E00               	movlw	0
  8824  002B94  6E3A               	movwf	(___fldiv@a+3)^0,c
  8825  002B96  EFD5  F015         	goto	l6610
  8826  002B9A                     l6608:
  8827  002B9A  0E00               	movlw	0
  8828  002B9C  6E37               	movwf	___fldiv@a^0,c
  8829  002B9E  0E00               	movlw	0
  8830  002BA0  6E38               	movwf	(___fldiv@a+1)^0,c
  8831  002BA2  0E00               	movlw	0
  8832  002BA4  6E39               	movwf	(___fldiv@a+2)^0,c
  8833  002BA6  0E00               	movlw	0
  8834  002BA8  6E3A               	movwf	(___fldiv@a+3)^0,c
  8835  002BAA                     l6610:
  8836  002BAA  5037               	movf	___fldiv@a^0,w,c
  8837  002BAC  1038               	iorwf	(___fldiv@a+1)^0,w,c
  8838  002BAE  1039               	iorwf	(___fldiv@a+2)^0,w,c
  8839  002BB0  103A               	iorwf	(___fldiv@a+3)^0,w,c
  8840  002BB2  A4D8               	btfss	status,2,c
  8841  002BB4  EFDE  F015         	goto	u6471
  8842  002BB8  EFE0  F015         	goto	u6470
  8843  002BBC                     u6471:
  8844  002BBC  EFF8  F015         	goto	l6622
  8845  002BC0                     u6470:
  8846  002BC0  0E00               	movlw	0
  8847  002BC2  6E33               	movwf	___fldiv@b^0,c
  8848  002BC4  0E00               	movlw	0
  8849  002BC6  6E34               	movwf	(___fldiv@b+1)^0,c
  8850  002BC8  0E00               	movlw	0
  8851  002BCA  6E35               	movwf	(___fldiv@b+2)^0,c
  8852  002BCC  0E00               	movlw	0
  8853  002BCE  6E36               	movwf	(___fldiv@b+3)^0,c
  8854  002BD0  0E80               	movlw	128
  8855  002BD2  1235               	iorwf	(___fldiv@b+2)^0,f,c
  8856  002BD4  0E7F               	movlw	127
  8857  002BD6  1236               	iorwf	(___fldiv@b+3)^0,f,c
  8858  002BD8                     l6616:
  8859  002BD8  5043               	movf	___fldiv@sign^0,w,c
  8860  002BDA  1236               	iorwf	(___fldiv@b+3)^0,f,c
  8861  002BDC  C033  F033         	movff	___fldiv@b,?___fldiv
  8862  002BE0  C034  F034         	movff	___fldiv@b+1,?___fldiv+1
  8863  002BE4  C035  F035         	movff	___fldiv@b+2,?___fldiv+2
  8864  002BE8  C036  F036         	movff	___fldiv@b+3,?___fldiv+3
  8865  002BEC  EF3B  F017         	goto	l1361
  8866  002BF0                     l6622:
  8867  002BF0  504A               	movf	___fldiv@bexp^0,w,c
  8868  002BF2  A4D8               	btfss	status,2,c
  8869  002BF4  EFFE  F015         	goto	u6481
  8870  002BF8  EF00  F016         	goto	u6480
  8871  002BFC                     u6481:
  8872  002BFC  EF0A  F016         	goto	l6630
  8873  002C00                     u6480:
  8874  002C00  0E00               	movlw	0
  8875  002C02  6E33               	movwf	?___fldiv^0,c
  8876  002C04  0E00               	movlw	0
  8877  002C06  6E34               	movwf	(?___fldiv+1)^0,c
  8878  002C08  0E00               	movlw	0
  8879  002C0A  6E35               	movwf	(?___fldiv+2)^0,c
  8880  002C0C  0E00               	movlw	0
  8881  002C0E  6E36               	movwf	(?___fldiv+3)^0,c
  8882  002C10  EF3B  F017         	goto	l1361
  8883  002C14                     l6630:
  8884  002C14  504B               	movf	___fldiv@aexp^0,w,c
  8885  002C16  C04A  F03B         	movff	___fldiv@bexp,??___fldiv
  8886  002C1A  6A3C               	clrf	(??___fldiv+1)^0,c
  8887  002C1C  5E3B               	subwf	??___fldiv^0,f,c
  8888  002C1E  0E00               	movlw	0
  8889  002C20  5A3C               	subwfb	(??___fldiv+1)^0,f,c
  8890  002C22  0E7F               	movlw	127
  8891  002C24  243B               	addwf	??___fldiv^0,w,c
  8892  002C26  6E44               	movwf	___fldiv@new_exp^0,c
  8893  002C28  0E00               	movlw	0
  8894  002C2A  203C               	addwfc	(??___fldiv+1)^0,w,c
  8895  002C2C  6E45               	movwf	(___fldiv@new_exp+1)^0,c
  8896  002C2E  C033  F03F         	movff	___fldiv@b,___fldiv@rem
  8897  002C32  C034  F040         	movff	___fldiv@b+1,___fldiv@rem+1
  8898  002C36  C035  F041         	movff	___fldiv@b+2,___fldiv@rem+2
  8899  002C3A  C036  F042         	movff	___fldiv@b+3,___fldiv@rem+3
  8900  002C3E  0E00               	movlw	0
  8901  002C40  6E33               	movwf	___fldiv@b^0,c
  8902  002C42  0E00               	movlw	0
  8903  002C44  6E34               	movwf	(___fldiv@b+1)^0,c
  8904  002C46  0E00               	movlw	0
  8905  002C48  6E35               	movwf	(___fldiv@b+2)^0,c
  8906  002C4A  0E00               	movlw	0
  8907  002C4C  6E36               	movwf	(___fldiv@b+3)^0,c
  8908  002C4E  0E00               	movlw	0
  8909  002C50  6E46               	movwf	___fldiv@grs^0,c
  8910  002C52  0E00               	movlw	0
  8911  002C54  6E47               	movwf	(___fldiv@grs+1)^0,c
  8912  002C56  0E00               	movlw	0
  8913  002C58  6E48               	movwf	(___fldiv@grs+2)^0,c
  8914  002C5A  0E00               	movlw	0
  8915  002C5C  6E49               	movwf	(___fldiv@grs+3)^0,c
  8916  002C5E  0E00               	movlw	0
  8917  002C60  6E4B               	movwf	___fldiv@aexp^0,c
  8918  002C62  EF6B  F016         	goto	l1363
  8919  002C66                     l6640:
  8920  002C66  504B               	movf	___fldiv@aexp^0,w,c
  8921  002C68  B4D8               	btfsc	status,2,c
  8922  002C6A  EF39  F016         	goto	u6491
  8923  002C6E  EF3B  F016         	goto	u6490
  8924  002C72                     u6491:
  8925  002C72  EF52  F016         	goto	l6648
  8926  002C76                     u6490:
  8927  002C76  90D8               	bcf	status,0,c
  8928  002C78  363F               	rlcf	___fldiv@rem^0,f,c
  8929  002C7A  3640               	rlcf	(___fldiv@rem+1)^0,f,c
  8930  002C7C  3641               	rlcf	(___fldiv@rem+2)^0,f,c
  8931  002C7E  3642               	rlcf	(___fldiv@rem+3)^0,f,c
  8932  002C80  90D8               	bcf	status,0,c
  8933  002C82  3633               	rlcf	___fldiv@b^0,f,c
  8934  002C84  3634               	rlcf	(___fldiv@b+1)^0,f,c
  8935  002C86  3635               	rlcf	(___fldiv@b+2)^0,f,c
  8936  002C88  3636               	rlcf	(___fldiv@b+3)^0,f,c
  8937  002C8A  AE49               	btfss	(___fldiv@grs+3)^0,7,c
  8938  002C8C  EF4A  F016         	goto	u6501
  8939  002C90  EF4C  F016         	goto	u6500
  8940  002C94                     u6501:
  8941  002C94  EF4D  F016         	goto	l1366
  8942  002C98                     u6500:
  8943  002C98  8033               	bsf	___fldiv@b^0,0,c
  8944  002C9A                     l1366:
  8945  002C9A  90D8               	bcf	status,0,c
  8946  002C9C  3646               	rlcf	___fldiv@grs^0,f,c
  8947  002C9E  3647               	rlcf	(___fldiv@grs+1)^0,f,c
  8948  002CA0  3648               	rlcf	(___fldiv@grs+2)^0,f,c
  8949  002CA2  3649               	rlcf	(___fldiv@grs+3)^0,f,c
  8950  002CA4                     l6648:
  8951  002CA4  5037               	movf	___fldiv@a^0,w,c
  8952  002CA6  5C3F               	subwf	___fldiv@rem^0,w,c
  8953  002CA8  5038               	movf	(___fldiv@a+1)^0,w,c
  8954  002CAA  5840               	subwfb	(___fldiv@rem+1)^0,w,c
  8955  002CAC  5039               	movf	(___fldiv@a+2)^0,w,c
  8956  002CAE  5841               	subwfb	(___fldiv@rem+2)^0,w,c
  8957  002CB0  503A               	movf	(___fldiv@a+3)^0,w,c
  8958  002CB2  5842               	subwfb	(___fldiv@rem+3)^0,w,c
  8959  002CB4  A0D8               	btfss	status,0,c
  8960  002CB6  EF5F  F016         	goto	u6511
  8961  002CBA  EF61  F016         	goto	u6510
  8962  002CBE                     u6511:
  8963  002CBE  EF6A  F016         	goto	l6654
  8964  002CC2                     u6510:
  8965  002CC2  8C49               	bsf	(___fldiv@grs+3)^0,6,c
  8966  002CC4  5037               	movf	___fldiv@a^0,w,c
  8967  002CC6  5E3F               	subwf	___fldiv@rem^0,f,c
  8968  002CC8  5038               	movf	(___fldiv@a+1)^0,w,c
  8969  002CCA  5A40               	subwfb	(___fldiv@rem+1)^0,f,c
  8970  002CCC  5039               	movf	(___fldiv@a+2)^0,w,c
  8971  002CCE  5A41               	subwfb	(___fldiv@rem+2)^0,f,c
  8972  002CD0  503A               	movf	(___fldiv@a+3)^0,w,c
  8973  002CD2  5A42               	subwfb	(___fldiv@rem+3)^0,f,c
  8974  002CD4                     l6654:
  8975  002CD4  2A4B               	incf	___fldiv@aexp^0,f,c
  8976  002CD6                     l1363:
  8977  002CD6  0E19               	movlw	25
  8978  002CD8  644B               	cpfsgt	___fldiv@aexp^0,c
  8979  002CDA  EF71  F016         	goto	u6521
  8980  002CDE  EF73  F016         	goto	u6520
  8981  002CE2                     u6521:
  8982  002CE2  EF33  F016         	goto	l6640
  8983  002CE6                     u6520:
  8984  002CE6  503F               	movf	___fldiv@rem^0,w,c
  8985  002CE8  1040               	iorwf	(___fldiv@rem+1)^0,w,c
  8986  002CEA  1041               	iorwf	(___fldiv@rem+2)^0,w,c
  8987  002CEC  1042               	iorwf	(___fldiv@rem+3)^0,w,c
  8988  002CEE  B4D8               	btfsc	status,2,c
  8989  002CF0  EF7C  F016         	goto	u6531
  8990  002CF4  EF7E  F016         	goto	u6530
  8991  002CF8                     u6531:
  8992  002CF8  EF96  F016         	goto	l6666
  8993  002CFC                     u6530:
  8994  002CFC  8046               	bsf	___fldiv@grs^0,0,c
  8995  002CFE  EF96  F016         	goto	l6666
  8996  002D02                     l6660:
  8997  002D02  90D8               	bcf	status,0,c
  8998  002D04  3633               	rlcf	___fldiv@b^0,f,c
  8999  002D06  3634               	rlcf	(___fldiv@b+1)^0,f,c
  9000  002D08  3635               	rlcf	(___fldiv@b+2)^0,f,c
  9001  002D0A  3636               	rlcf	(___fldiv@b+3)^0,f,c
  9002  002D0C  AE49               	btfss	(___fldiv@grs+3)^0,7,c
  9003  002D0E  EF8B  F016         	goto	u6541
  9004  002D12  EF8D  F016         	goto	u6540
  9005  002D16                     u6541:
  9006  002D16  EF8E  F016         	goto	l1372
  9007  002D1A                     u6540:
  9008  002D1A  8033               	bsf	___fldiv@b^0,0,c
  9009  002D1C                     l1372:
  9010  002D1C  90D8               	bcf	status,0,c
  9011  002D1E  3646               	rlcf	___fldiv@grs^0,f,c
  9012  002D20  3647               	rlcf	(___fldiv@grs+1)^0,f,c
  9013  002D22  3648               	rlcf	(___fldiv@grs+2)^0,f,c
  9014  002D24  3649               	rlcf	(___fldiv@grs+3)^0,f,c
  9015  002D26  0644               	decf	___fldiv@new_exp^0,f,c
  9016  002D28  A0D8               	btfss	status,0,c
  9017  002D2A  0645               	decf	(___fldiv@new_exp+1)^0,f,c
  9018  002D2C                     l6666:
  9019  002D2C  AE35               	btfss	(___fldiv@b+2)^0,7,c
  9020  002D2E  EF9B  F016         	goto	u6551
  9021  002D32  EF9D  F016         	goto	u6550
  9022  002D36                     u6551:
  9023  002D36  EF81  F016         	goto	l6660
  9024  002D3A                     u6550:
  9025  002D3A  0E00               	movlw	0
  9026  002D3C  6E4B               	movwf	___fldiv@aexp^0,c
  9027  002D3E  AE49               	btfss	(___fldiv@grs+3)^0,7,c
  9028  002D40  EFA4  F016         	goto	u6561
  9029  002D44  EFA6  F016         	goto	u6560
  9030  002D48                     u6561:
  9031  002D48  EFCA  F016         	goto	l1374
  9032  002D4C                     u6560:
  9033  002D4C  0EFF               	movlw	255
  9034  002D4E  1446               	andwf	___fldiv@grs^0,w,c
  9035  002D50  6E3B               	movwf	??___fldiv^0,c
  9036  002D52  0EFF               	movlw	255
  9037  002D54  1447               	andwf	(___fldiv@grs+1)^0,w,c
  9038  002D56  6E3C               	movwf	(??___fldiv+1)^0,c
  9039  002D58  0EFF               	movlw	255
  9040  002D5A  1448               	andwf	(___fldiv@grs+2)^0,w,c
  9041  002D5C  6E3D               	movwf	(??___fldiv+2)^0,c
  9042  002D5E  0E7F               	movlw	127
  9043  002D60  1449               	andwf	(___fldiv@grs+3)^0,w,c
  9044  002D62  6E3E               	movwf	(??___fldiv+3)^0,c
  9045  002D64  503B               	movf	??___fldiv^0,w,c
  9046  002D66  103C               	iorwf	(??___fldiv+1)^0,w,c
  9047  002D68  103D               	iorwf	(??___fldiv+2)^0,w,c
  9048  002D6A  103E               	iorwf	(??___fldiv+3)^0,w,c
  9049  002D6C  B4D8               	btfsc	status,2,c
  9050  002D6E  EFBB  F016         	goto	u6571
  9051  002D72  EFBD  F016         	goto	u6570
  9052  002D76                     u6571:
  9053  002D76  EFC1  F016         	goto	l1375
  9054  002D7A                     u6570:
  9055  002D7A                     l6674:
  9056  002D7A  0E01               	movlw	1
  9057  002D7C  6E4B               	movwf	___fldiv@aexp^0,c
  9058  002D7E  EFCA  F016         	goto	l1374
  9059  002D82                     l1375:
  9060  002D82  A033               	btfss	___fldiv@b^0,0,c
  9061  002D84  EFC6  F016         	goto	u6581
  9062  002D88  EFC8  F016         	goto	u6580
  9063  002D8C                     u6581:
  9064  002D8C  EFCA  F016         	goto	l1374
  9065  002D90                     u6580:
  9066  002D90  EFBD  F016         	goto	l6674
  9067  002D94                     l1374:
  9068  002D94  504B               	movf	___fldiv@aexp^0,w,c
  9069  002D96  B4D8               	btfsc	status,2,c
  9070  002D98  EFD0  F016         	goto	u6591
  9071  002D9C  EFD2  F016         	goto	u6590
  9072  002DA0                     u6591:
  9073  002DA0  EFF6  F016         	goto	l6686
  9074  002DA4                     u6590:
  9075  002DA4  0E01               	movlw	1
  9076  002DA6  2633               	addwf	___fldiv@b^0,f,c
  9077  002DA8  0E00               	movlw	0
  9078  002DAA  2234               	addwfc	(___fldiv@b+1)^0,f,c
  9079  002DAC  2235               	addwfc	(___fldiv@b+2)^0,f,c
  9080  002DAE  2236               	addwfc	(___fldiv@b+3)^0,f,c
  9081  002DB0  A036               	btfss	(___fldiv@b+3)^0,0,c
  9082  002DB2  EFDD  F016         	goto	u6601
  9083  002DB6  EFDF  F016         	goto	u6600
  9084  002DBA                     u6601:
  9085  002DBA  EFF6  F016         	goto	l6686
  9086  002DBE                     u6600:
  9087  002DBE  C033  F03B         	movff	___fldiv@b,??___fldiv
  9088  002DC2  C034  F03C         	movff	___fldiv@b+1,??___fldiv+1
  9089  002DC6  C035  F03D         	movff	___fldiv@b+2,??___fldiv+2
  9090  002DCA  C036  F03E         	movff	___fldiv@b+3,??___fldiv+3
  9091  002DCE  343E               	rlcf	(??___fldiv+3)^0,w,c
  9092  002DD0  323E               	rrcf	(??___fldiv+3)^0,f,c
  9093  002DD2  323D               	rrcf	(??___fldiv+2)^0,f,c
  9094  002DD4  323C               	rrcf	(??___fldiv+1)^0,f,c
  9095  002DD6  323B               	rrcf	??___fldiv^0,f,c
  9096  002DD8  C03B  F033         	movff	??___fldiv,___fldiv@b
  9097  002DDC  C03C  F034         	movff	??___fldiv+1,___fldiv@b+1
  9098  002DE0  C03D  F035         	movff	??___fldiv+2,___fldiv@b+2
  9099  002DE4  C03E  F036         	movff	??___fldiv+3,___fldiv@b+3
  9100  002DE8  4A44               	infsnz	___fldiv@new_exp^0,f,c
  9101  002DEA  2A45               	incf	(___fldiv@new_exp+1)^0,f,c
  9102  002DEC                     l6686:
  9103  002DEC  BE45               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9104  002DEE  EF01  F017         	goto	u6611
  9105  002DF2  5045               	movf	(___fldiv@new_exp+1)^0,w,c
  9106  002DF4  E108               	bnz	u6610
  9107  002DF6  2844               	incf	___fldiv@new_exp^0,w,c
  9108  002DF8  A0D8               	btfss	status,0,c
  9109  002DFA  EF01  F017         	goto	u6611
  9110  002DFE  EF03  F017         	goto	u6610
  9111  002E02                     u6611:
  9112  002E02  EF0E  F017         	goto	l6690
  9113  002E06                     u6610:
  9114  002E06  0E00               	movlw	0
  9115  002E08  6E45               	movwf	(___fldiv@new_exp+1)^0,c
  9116  002E0A  6844               	setf	___fldiv@new_exp^0,c
  9117  002E0C  0E00               	movlw	0
  9118  002E0E  6E33               	movwf	___fldiv@b^0,c
  9119  002E10  0E00               	movlw	0
  9120  002E12  6E34               	movwf	(___fldiv@b+1)^0,c
  9121  002E14  0E00               	movlw	0
  9122  002E16  6E35               	movwf	(___fldiv@b+2)^0,c
  9123  002E18  0E00               	movlw	0
  9124  002E1A  6E36               	movwf	(___fldiv@b+3)^0,c
  9125  002E1C                     l6690:
  9126  002E1C  BE45               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9127  002E1E  EF1B  F017         	goto	u6620
  9128  002E22  5045               	movf	(___fldiv@new_exp+1)^0,w,c
  9129  002E24  E106               	bnz	u6621
  9130  002E26  0444               	decf	___fldiv@new_exp^0,w,c
  9131  002E28  B0D8               	btfsc	status,0,c
  9132  002E2A  EF19  F017         	goto	u6621
  9133  002E2E  EF1B  F017         	goto	u6620
  9134  002E32                     u6621:
  9135  002E32  EF29  F017         	goto	l6694
  9136  002E36                     u6620:
  9137  002E36  0E00               	movlw	0
  9138  002E38  6E45               	movwf	(___fldiv@new_exp+1)^0,c
  9139  002E3A  0E00               	movlw	0
  9140  002E3C  6E44               	movwf	___fldiv@new_exp^0,c
  9141  002E3E  0E00               	movlw	0
  9142  002E40  6E33               	movwf	___fldiv@b^0,c
  9143  002E42  0E00               	movlw	0
  9144  002E44  6E34               	movwf	(___fldiv@b+1)^0,c
  9145  002E46  0E00               	movlw	0
  9146  002E48  6E35               	movwf	(___fldiv@b+2)^0,c
  9147  002E4A  0E00               	movlw	0
  9148  002E4C  6E36               	movwf	(___fldiv@b+3)^0,c
  9149  002E4E  0E00               	movlw	0
  9150  002E50  6E43               	movwf	___fldiv@sign^0,c
  9151  002E52                     l6694:
  9152  002E52  C044  F04A         	movff	___fldiv@new_exp,___fldiv@bexp
  9153  002E56  A04A               	btfss	___fldiv@bexp^0,0,c
  9154  002E58  EF30  F017         	goto	u6631
  9155  002E5C  EF32  F017         	goto	u6630
  9156  002E60                     u6631:
  9157  002E60  EF35  F017         	goto	l6700
  9158  002E64                     u6630:
  9159  002E64  8E35               	bsf	(___fldiv@b+2)^0,7,c
  9160  002E66  EF36  F017         	goto	l6702
  9161  002E6A                     l6700:
  9162  002E6A  9E35               	bcf	(___fldiv@b+2)^0,7,c
  9163  002E6C                     l6702:
  9164  002E6C  90D8               	bcf	status,0,c
  9165  002E6E  304A               	rrcf	___fldiv@bexp^0,w,c
  9166  002E70  6E36               	movwf	(___fldiv@b+3)^0,c
  9167  002E72  EFEC  F015         	goto	l6616
  9168  002E76                     l1361:
  9169  002E76  0012               	return		;funcret
  9170  002E78                     __end_of___fldiv:
  9171                           	callstack 0
  9172                           
  9173 ;; *************** function _INA219_getCurrent_raw *****************
  9174 ;; Defined at:
  9175 ;;		line 99 in file "ina219.c"
  9176 ;; Parameters:    Size  Location     Type
  9177 ;;		None
  9178 ;; Auto vars:     Size  Location     Type
  9179 ;;  value           2   34[COMRAM] short 
  9180 ;; Return value:  Size  Location     Type
  9181 ;;                  2   32[COMRAM] short 
  9182 ;; Registers used:
  9183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9184 ;; Tracked objects:
  9185 ;;		On entry : 0/0
  9186 ;;		On exit  : 0/0
  9187 ;;		Unchanged: 0/0
  9188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9189 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9190 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9192 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9193 ;;Total ram usage:        4 bytes
  9194 ;; Hardware stack levels used: 1
  9195 ;; Hardware stack levels required when called: 14
  9196 ;; This function calls:
  9197 ;;		_INA219_ReadRegister
  9198 ;; This function is called by:
  9199 ;;		_INA219_getCurrent_mA
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203                           	psect	text49
  9204  004B3E                     __ptext49:
  9205                           	callstack 0
  9206  004B3E                     _INA219_getCurrent_raw:
  9207                           	callstack 15
  9208  004B3E                     
  9209                           ;ina219.c: 100:     int16_t value;;ina219.c: 101:     INA219_ReadRegister((0x04), &value
      +                          );
  9210  004B3E  0E23               	movlw	low INA219_getCurrent_raw@value
  9211  004B40  6E1E               	movwf	INA219_ReadRegister@data^0,c
  9212  004B42  0E00               	movlw	high INA219_getCurrent_raw@value
  9213  004B44  6E1F               	movwf	(INA219_ReadRegister@data+1)^0,c
  9214  004B46  0E04               	movlw	4
  9215  004B48  EC69  F025         	call	_INA219_ReadRegister
  9216  004B4C                     
  9217                           ;ina219.c: 102:     return (int16_t) value;
  9218  004B4C  C023  F021         	movff	INA219_getCurrent_raw@value,?_INA219_getCurrent_raw
  9219  004B50  C024  F022         	movff	INA219_getCurrent_raw@value+1,?_INA219_getCurrent_raw+1
  9220  004B54  0012               	return		;funcret
  9221  004B56                     __end_of_INA219_getCurrent_raw:
  9222                           	callstack 0
  9223                           
  9224 ;; *************** function _INA219_getBusVoltage_V *****************
  9225 ;; Defined at:
  9226 ;;		line 112 in file "ina219.c"
  9227 ;; Parameters:    Size  Location     Type
  9228 ;;		None
  9229 ;; Auto vars:     Size  Location     Type
  9230 ;;  value           2   21[BANK0 ] short 
  9231 ;; Return value:  Size  Location     Type
  9232 ;;                  4   17[BANK0 ] float 
  9233 ;; Registers used:
  9234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9235 ;; Tracked objects:
  9236 ;;		On entry : 0/0
  9237 ;;		On exit  : 0/0
  9238 ;;		Unchanged: 0/0
  9239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9240 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9241 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9242 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9243 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9244 ;;Total ram usage:        8 bytes
  9245 ;; Hardware stack levels used: 1
  9246 ;; Hardware stack levels required when called: 15
  9247 ;; This function calls:
  9248 ;;		_INA219_getBusVoltage_raw
  9249 ;;		___flmul
  9250 ;;		___xxtofl
  9251 ;; This function is called by:
  9252 ;;		_main
  9253 ;; This function uses a non-reentrant model
  9254 ;;
  9255                           
  9256                           	psect	text50
  9257  00425A                     __ptext50:
  9258                           	callstack 0
  9259  00425A                     _INA219_getBusVoltage_V:
  9260                           	callstack 15
  9261  00425A                     
  9262                           ;ina219.c: 113:     int16_t value = INA219_getBusVoltage_raw();
  9263  00425A  ECAB  F025         	call	_INA219_getBusVoltage_raw	;wreg free
  9264  00425E  C021  F075         	movff	?_INA219_getBusVoltage_raw,INA219_getBusVoltage_V@value
  9265  004262  C022  F076         	movff	?_INA219_getBusVoltage_raw+1,INA219_getBusVoltage_V@value+1
  9266  004266                     
  9267                           ;ina219.c: 114:     return (value >> 3) * 0.004f;
  9268  004266  C075  F054         	movff	INA219_getBusVoltage_V@value,??_INA219_getBusVoltage_V
  9269  00426A  C076  F055         	movff	INA219_getBusVoltage_V@value+1,??_INA219_getBusVoltage_V+1
  9270  00426E  3455               	rlcf	(??_INA219_getBusVoltage_V+1)^0,w,c
  9271  004270  3255               	rrcf	(??_INA219_getBusVoltage_V+1)^0,f,c
  9272  004272  3254               	rrcf	??_INA219_getBusVoltage_V^0,f,c
  9273  004274  3455               	rlcf	(??_INA219_getBusVoltage_V+1)^0,w,c
  9274  004276  3255               	rrcf	(??_INA219_getBusVoltage_V+1)^0,f,c
  9275  004278  3254               	rrcf	??_INA219_getBusVoltage_V^0,f,c
  9276  00427A  3455               	rlcf	(??_INA219_getBusVoltage_V+1)^0,w,c
  9277  00427C  3255               	rrcf	(??_INA219_getBusVoltage_V+1)^0,f,c
  9278  00427E  3254               	rrcf	??_INA219_getBusVoltage_V^0,f,c
  9279  004280  C054  F025         	movff	??_INA219_getBusVoltage_V,___xxtofl@val
  9280  004284  C055  F026         	movff	??_INA219_getBusVoltage_V+1,___xxtofl@val+1
  9281  004288  0E00               	movlw	0
  9282  00428A  BE26               	btfsc	(___xxtofl@val+1)^0,7,c
  9283  00428C  0EFF               	movlw	-1
  9284  00428E  6E27               	movwf	(___xxtofl@val+2)^0,c
  9285  004290  6E28               	movwf	(___xxtofl@val+3)^0,c
  9286  004292  0E01               	movlw	1
  9287  004294  EC47  F018         	call	___xxtofl
  9288  004298  C025  F04C         	movff	?___xxtofl,___flmul@b
  9289  00429C  C026  F04D         	movff	?___xxtofl+1,___flmul@b+1
  9290  0042A0  C027  F04E         	movff	?___xxtofl+2,___flmul@b+2
  9291  0042A4  C028  F04F         	movff	?___xxtofl+3,___flmul@b+3
  9292  0042A8  0E6F               	movlw	111
  9293  0042AA  6E50               	movwf	___flmul@a^0,c
  9294  0042AC  0E12               	movlw	18
  9295  0042AE  6E51               	movwf	(___flmul@a+1)^0,c
  9296  0042B0  0E83               	movlw	131
  9297  0042B2  6E52               	movwf	(___flmul@a+2)^0,c
  9298  0042B4  0E3B               	movlw	59
  9299  0042B6  6E53               	movwf	(___flmul@a+3)^0,c
  9300  0042B8  EC59  F013         	call	___flmul	;wreg free
  9301  0042BC  C04C  F071         	movff	?___flmul,?_INA219_getBusVoltage_V
  9302  0042C0  C04D  F072         	movff	?___flmul+1,?_INA219_getBusVoltage_V+1
  9303  0042C4  C04E  F073         	movff	?___flmul+2,?_INA219_getBusVoltage_V+2
  9304  0042C8  C04F  F074         	movff	?___flmul+3,?_INA219_getBusVoltage_V+3
  9305  0042CC  0012               	return		;funcret
  9306  0042CE                     __end_of_INA219_getBusVoltage_V:
  9307                           	callstack 0
  9308                           
  9309 ;; *************** function ___xxtofl *****************
  9310 ;; Defined at:
  9311 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  9312 ;; Parameters:    Size  Location     Type
  9313 ;;  sign            1    wreg     unsigned char 
  9314 ;;  val             4   36[COMRAM] long 
  9315 ;; Auto vars:     Size  Location     Type
  9316 ;;  sign            1   44[COMRAM] unsigned char 
  9317 ;;  arg             4   46[COMRAM] unsigned long 
  9318 ;;  exp             1   45[COMRAM] unsigned char 
  9319 ;; Return value:  Size  Location     Type
  9320 ;;                  4   36[COMRAM] unsigned char 
  9321 ;; Registers used:
  9322 ;;		wreg, status,2, status,0
  9323 ;; Tracked objects:
  9324 ;;		On entry : 0/0
  9325 ;;		On exit  : 0/0
  9326 ;;		Unchanged: 0/0
  9327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9329 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9330 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9331 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9332 ;;Total ram usage:       14 bytes
  9333 ;; Hardware stack levels used: 1
  9334 ;; Hardware stack levels required when called: 4
  9335 ;; This function calls:
  9336 ;;		Nothing
  9337 ;; This function is called by:
  9338 ;;		_INA219_getBusVoltage_V
  9339 ;;		_INA219_getShuntVoltage_mV
  9340 ;;		_INA219_getCurrent_mA
  9341 ;;		_INA219_getPower_mW
  9342 ;; This function uses a non-reentrant model
  9343 ;;
  9344                           
  9345                           	psect	text51
  9346  00308E                     __ptext51:
  9347                           	callstack 0
  9348  00308E                     ___xxtofl:
  9349                           	callstack 25
  9350                           
  9351                           ;incstack = 0
  9352                           ;___xxtofl@sign stored from wreg
  9353  00308E  6E2D               	movwf	___xxtofl@sign^0,c
  9354  003090  502D               	movf	___xxtofl@sign^0,w,c
  9355  003092  B4D8               	btfsc	status,2,c
  9356  003094  EF4E  F018         	goto	u5511
  9357  003098  EF50  F018         	goto	u5510
  9358  00309C                     u5511:
  9359  00309C  EF72  F018         	goto	l1434
  9360  0030A0                     u5510:
  9361  0030A0  BE28               	btfsc	(___xxtofl@val+3)^0,7,c
  9362  0030A2  EF57  F018         	goto	u5520
  9363  0030A6  EF55  F018         	goto	u5521
  9364  0030AA                     u5521:
  9365  0030AA  EF72  F018         	goto	l1434
  9366  0030AE                     u5520:
  9367  0030AE  C025  F029         	movff	___xxtofl@val,??___xxtofl
  9368  0030B2  C026  F02A         	movff	___xxtofl@val+1,??___xxtofl+1
  9369  0030B6  C027  F02B         	movff	___xxtofl@val+2,??___xxtofl+2
  9370  0030BA  C028  F02C         	movff	___xxtofl@val+3,??___xxtofl+3
  9371  0030BE  1E29               	comf	??___xxtofl^0,f,c
  9372  0030C0  1E2A               	comf	(??___xxtofl+1)^0,f,c
  9373  0030C2  1E2B               	comf	(??___xxtofl+2)^0,f,c
  9374  0030C4  1E2C               	comf	(??___xxtofl+3)^0,f,c
  9375  0030C6  2A29               	incf	??___xxtofl^0,f,c
  9376  0030C8  0E00               	movlw	0
  9377  0030CA  222A               	addwfc	(??___xxtofl+1)^0,f,c
  9378  0030CC  222B               	addwfc	(??___xxtofl+2)^0,f,c
  9379  0030CE  222C               	addwfc	(??___xxtofl+3)^0,f,c
  9380  0030D0  C029  F02F         	movff	??___xxtofl,___xxtofl@arg
  9381  0030D4  C02A  F030         	movff	??___xxtofl+1,___xxtofl@arg+1
  9382  0030D8  C02B  F031         	movff	??___xxtofl+2,___xxtofl@arg+2
  9383  0030DC  C02C  F032         	movff	??___xxtofl+3,___xxtofl@arg+3
  9384  0030E0  EF7A  F018         	goto	l5842
  9385  0030E4                     l1434:
  9386  0030E4  C025  F02F         	movff	___xxtofl@val,___xxtofl@arg
  9387  0030E8  C026  F030         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9388  0030EC  C027  F031         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9389  0030F0  C028  F032         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9390  0030F4                     l5842:
  9391  0030F4  5025               	movf	___xxtofl@val^0,w,c
  9392  0030F6  1026               	iorwf	(___xxtofl@val+1)^0,w,c
  9393  0030F8  1027               	iorwf	(___xxtofl@val+2)^0,w,c
  9394  0030FA  1028               	iorwf	(___xxtofl@val+3)^0,w,c
  9395  0030FC  A4D8               	btfss	status,2,c
  9396  0030FE  EF83  F018         	goto	u5531
  9397  003102  EF85  F018         	goto	u5530
  9398  003106                     u5531:
  9399  003106  EF8F  F018         	goto	l5848
  9400  00310A                     u5530:
  9401  00310A  0E00               	movlw	0
  9402  00310C  6E25               	movwf	?___xxtofl^0,c
  9403  00310E  0E00               	movlw	0
  9404  003110  6E26               	movwf	(?___xxtofl+1)^0,c
  9405  003112  0E00               	movlw	0
  9406  003114  6E27               	movwf	(?___xxtofl+2)^0,c
  9407  003116  0E00               	movlw	0
  9408  003118  6E28               	movwf	(?___xxtofl+3)^0,c
  9409  00311A  EF20  F019         	goto	l1437
  9410  00311E                     l5848:
  9411  00311E  0E96               	movlw	150
  9412  003120  6E2E               	movwf	___xxtofl@exp^0,c
  9413  003122  EF99  F018         	goto	l5852
  9414  003126                     l5850:
  9415  003126  2A2E               	incf	___xxtofl@exp^0,f,c
  9416  003128  90D8               	bcf	status,0,c
  9417  00312A  3232               	rrcf	(___xxtofl@arg+3)^0,f,c
  9418  00312C  3231               	rrcf	(___xxtofl@arg+2)^0,f,c
  9419  00312E  3230               	rrcf	(___xxtofl@arg+1)^0,f,c
  9420  003130  322F               	rrcf	___xxtofl@arg^0,f,c
  9421  003132                     l5852:
  9422  003132  0E00               	movlw	0
  9423  003134  142F               	andwf	___xxtofl@arg^0,w,c
  9424  003136  6E29               	movwf	??___xxtofl^0,c
  9425  003138  0E00               	movlw	0
  9426  00313A  1430               	andwf	(___xxtofl@arg+1)^0,w,c
  9427  00313C  6E2A               	movwf	(??___xxtofl+1)^0,c
  9428  00313E  0E00               	movlw	0
  9429  003140  1431               	andwf	(___xxtofl@arg+2)^0,w,c
  9430  003142  6E2B               	movwf	(??___xxtofl+2)^0,c
  9431  003144  0EFE               	movlw	254
  9432  003146  1432               	andwf	(___xxtofl@arg+3)^0,w,c
  9433  003148  6E2C               	movwf	(??___xxtofl+3)^0,c
  9434  00314A  5029               	movf	??___xxtofl^0,w,c
  9435  00314C  102A               	iorwf	(??___xxtofl+1)^0,w,c
  9436  00314E  102B               	iorwf	(??___xxtofl+2)^0,w,c
  9437  003150  102C               	iorwf	(??___xxtofl+3)^0,w,c
  9438  003152  A4D8               	btfss	status,2,c
  9439  003154  EFAE  F018         	goto	u5541
  9440  003158  EFB0  F018         	goto	u5540
  9441  00315C                     u5541:
  9442  00315C  EF93  F018         	goto	l5850
  9443  003160                     u5540:
  9444  003160  EFBE  F018         	goto	l1441
  9445  003164                     l5854:
  9446  003164  2A2E               	incf	___xxtofl@exp^0,f,c
  9447  003166  0E01               	movlw	1
  9448  003168  262F               	addwf	___xxtofl@arg^0,f,c
  9449  00316A  0E00               	movlw	0
  9450  00316C  2230               	addwfc	(___xxtofl@arg+1)^0,f,c
  9451  00316E  2231               	addwfc	(___xxtofl@arg+2)^0,f,c
  9452  003170  2232               	addwfc	(___xxtofl@arg+3)^0,f,c
  9453  003172  90D8               	bcf	status,0,c
  9454  003174  3232               	rrcf	(___xxtofl@arg+3)^0,f,c
  9455  003176  3231               	rrcf	(___xxtofl@arg+2)^0,f,c
  9456  003178  3230               	rrcf	(___xxtofl@arg+1)^0,f,c
  9457  00317A  322F               	rrcf	___xxtofl@arg^0,f,c
  9458  00317C                     l1441:
  9459  00317C  0E00               	movlw	0
  9460  00317E  142F               	andwf	___xxtofl@arg^0,w,c
  9461  003180  6E29               	movwf	??___xxtofl^0,c
  9462  003182  0E00               	movlw	0
  9463  003184  1430               	andwf	(___xxtofl@arg+1)^0,w,c
  9464  003186  6E2A               	movwf	(??___xxtofl+1)^0,c
  9465  003188  0E00               	movlw	0
  9466  00318A  1431               	andwf	(___xxtofl@arg+2)^0,w,c
  9467  00318C  6E2B               	movwf	(??___xxtofl+2)^0,c
  9468  00318E  0EFF               	movlw	255
  9469  003190  1432               	andwf	(___xxtofl@arg+3)^0,w,c
  9470  003192  6E2C               	movwf	(??___xxtofl+3)^0,c
  9471  003194  5029               	movf	??___xxtofl^0,w,c
  9472  003196  102A               	iorwf	(??___xxtofl+1)^0,w,c
  9473  003198  102B               	iorwf	(??___xxtofl+2)^0,w,c
  9474  00319A  102C               	iorwf	(??___xxtofl+3)^0,w,c
  9475  00319C  A4D8               	btfss	status,2,c
  9476  00319E  EFD3  F018         	goto	u5551
  9477  0031A2  EFD5  F018         	goto	u5550
  9478  0031A6                     u5551:
  9479  0031A6  EFB2  F018         	goto	l5854
  9480  0031AA                     u5550:
  9481  0031AA  EFDD  F018         	goto	l5862
  9482  0031AE                     l5860:
  9483  0031AE  062E               	decf	___xxtofl@exp^0,f,c
  9484  0031B0  90D8               	bcf	status,0,c
  9485  0031B2  362F               	rlcf	___xxtofl@arg^0,f,c
  9486  0031B4  3630               	rlcf	(___xxtofl@arg+1)^0,f,c
  9487  0031B6  3631               	rlcf	(___xxtofl@arg+2)^0,f,c
  9488  0031B8  3632               	rlcf	(___xxtofl@arg+3)^0,f,c
  9489  0031BA                     l5862:
  9490  0031BA  BE31               	btfsc	(___xxtofl@arg+2)^0,7,c
  9491  0031BC  EFE2  F018         	goto	u5561
  9492  0031C0  EFE4  F018         	goto	u5560
  9493  0031C4                     u5561:
  9494  0031C4  EFEC  F018         	goto	l1448
  9495  0031C8                     u5560:
  9496  0031C8  0E02               	movlw	2
  9497  0031CA  602E               	cpfslt	___xxtofl@exp^0,c
  9498  0031CC  EFEA  F018         	goto	u5571
  9499  0031D0  EFEC  F018         	goto	u5570
  9500  0031D4                     u5571:
  9501  0031D4  EFD7  F018         	goto	l5860
  9502  0031D8                     u5570:
  9503  0031D8                     l1448:
  9504  0031D8  B02E               	btfsc	___xxtofl@exp^0,0,c
  9505  0031DA  EFF1  F018         	goto	u5581
  9506  0031DE  EFF3  F018         	goto	u5580
  9507  0031E2                     u5581:
  9508  0031E2  EFF4  F018         	goto	l5868
  9509  0031E6                     u5580:
  9510  0031E6  9E31               	bcf	(___xxtofl@arg+2)^0,7,c
  9511  0031E8                     l5868:
  9512  0031E8  90D8               	bcf	status,0,c
  9513  0031EA  322E               	rrcf	___xxtofl@exp^0,f,c
  9514  0031EC  C02E  F029         	movff	___xxtofl@exp,??___xxtofl
  9515  0031F0  6A2A               	clrf	(??___xxtofl+1)^0,c
  9516  0031F2  6A2B               	clrf	(??___xxtofl+2)^0,c
  9517  0031F4  6A2C               	clrf	(??___xxtofl+3)^0,c
  9518  0031F6  C029  F02C         	movff	??___xxtofl,??___xxtofl+3
  9519  0031FA  6A2B               	clrf	(??___xxtofl+2)^0,c
  9520  0031FC  6A2A               	clrf	(??___xxtofl+1)^0,c
  9521  0031FE  6A29               	clrf	??___xxtofl^0,c
  9522  003200  5029               	movf	??___xxtofl^0,w,c
  9523  003202  122F               	iorwf	___xxtofl@arg^0,f,c
  9524  003204  502A               	movf	(??___xxtofl+1)^0,w,c
  9525  003206  1230               	iorwf	(___xxtofl@arg+1)^0,f,c
  9526  003208  502B               	movf	(??___xxtofl+2)^0,w,c
  9527  00320A  1231               	iorwf	(___xxtofl@arg+2)^0,f,c
  9528  00320C  502C               	movf	(??___xxtofl+3)^0,w,c
  9529  00320E  1232               	iorwf	(___xxtofl@arg+3)^0,f,c
  9530  003210  502D               	movf	___xxtofl@sign^0,w,c
  9531  003212  B4D8               	btfsc	status,2,c
  9532  003214  EF0E  F019         	goto	u5591
  9533  003218  EF10  F019         	goto	u5590
  9534  00321C                     u5591:
  9535  00321C  EF18  F019         	goto	l5878
  9536  003220                     u5590:
  9537  003220  BE28               	btfsc	(___xxtofl@val+3)^0,7,c
  9538  003222  EF17  F019         	goto	u5600
  9539  003226  EF15  F019         	goto	u5601
  9540  00322A                     u5601:
  9541  00322A  EF18  F019         	goto	l5878
  9542  00322E                     u5600:
  9543  00322E  8E32               	bsf	(___xxtofl@arg+3)^0,7,c
  9544  003230                     l5878:
  9545  003230  C02F  F025         	movff	___xxtofl@arg,?___xxtofl
  9546  003234  C030  F026         	movff	___xxtofl@arg+1,?___xxtofl+1
  9547  003238  C031  F027         	movff	___xxtofl@arg+2,?___xxtofl+2
  9548  00323C  C032  F028         	movff	___xxtofl@arg+3,?___xxtofl+3
  9549  003240                     l1437:
  9550  003240  0012               	return		;funcret
  9551  003242                     __end_of___xxtofl:
  9552                           	callstack 0
  9553                           
  9554 ;; *************** function ___flmul *****************
  9555 ;; Defined at:
  9556 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  9557 ;; Parameters:    Size  Location     Type
  9558 ;;  b               4   75[COMRAM] unsigned char 
  9559 ;;  a               4   79[COMRAM] unsigned char 
  9560 ;; Auto vars:     Size  Location     Type
  9561 ;;  prod            4   11[BANK0 ] struct .
  9562 ;;  grs             4    6[BANK0 ] unsigned long 
  9563 ;;  temp            2   15[BANK0 ] struct .
  9564 ;;  bexp            1   10[BANK0 ] unsigned char 
  9565 ;;  aexp            1    5[BANK0 ] unsigned char 
  9566 ;;  sign            1    4[BANK0 ] unsigned char 
  9567 ;; Return value:  Size  Location     Type
  9568 ;;                  4   75[COMRAM] unsigned char 
  9569 ;; Registers used:
  9570 ;;		wreg, status,2, status,0, prodl, prodh
  9571 ;; Tracked objects:
  9572 ;;		On entry : 0/0
  9573 ;;		On exit  : 0/0
  9574 ;;		Unchanged: 0/0
  9575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9576 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9577 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9578 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9579 ;;      Totals:         8      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9580 ;;Total ram usage:       25 bytes
  9581 ;; Hardware stack levels used: 1
  9582 ;; Hardware stack levels required when called: 4
  9583 ;; This function calls:
  9584 ;;		Nothing
  9585 ;; This function is called by:
  9586 ;;		_INA219_getBusVoltage_V
  9587 ;;		_INA219_getShuntVoltage_mV
  9588 ;;		_INA219_getCurrent_mA
  9589 ;;		_INA219_getPower_mW
  9590 ;;		_efgtoa
  9591 ;; This function uses a non-reentrant model
  9592 ;;
  9593                           
  9594                           	psect	text52
  9595  0026B2                     __ptext52:
  9596                           	callstack 0
  9597  0026B2                     ___flmul:
  9598                           	callstack 22
  9599  0026B2  504F               	movf	(___flmul@b+3)^0,w,c
  9600  0026B4  0B80               	andlw	128
  9601  0026B6  0100               	movlb	0	; () banked
  9602  0026B8  6F64               	movwf	___flmul@sign& (0+255),b
  9603  0026BA  504F               	movf	(___flmul@b+3)^0,w,c
  9604  0026BC  244F               	addwf	(___flmul@b+3)^0,w,c
  9605  0026BE  6F6A               	movwf	___flmul@bexp& (0+255),b
  9606  0026C0                     
  9607                           ; BSR set to: 0
  9608  0026C0  AE4E               	btfss	(___flmul@b+2)^0,7,c
  9609  0026C2  EF65  F013         	goto	u6641
  9610  0026C6  EF67  F013         	goto	u6640
  9611  0026CA                     u6641:
  9612  0026CA  EF68  F013         	goto	l6716
  9613  0026CE                     u6640:
  9614  0026CE                     
  9615                           ; BSR set to: 0
  9616  0026CE  816A               	bsf	___flmul@bexp& (0+255),0,b
  9617  0026D0                     l6716:
  9618                           
  9619                           ; BSR set to: 0
  9620  0026D0  516A               	movf	___flmul@bexp& (0+255),w,b
  9621  0026D2  B4D8               	btfsc	status,2,c
  9622  0026D4  EF6E  F013         	goto	u6651
  9623  0026D8  EF70  F013         	goto	u6650
  9624  0026DC                     u6651:
  9625  0026DC  EF83  F013         	goto	l6724
  9626  0026E0                     u6650:
  9627  0026E0                     
  9628                           ; BSR set to: 0
  9629  0026E0  296A               	incf	___flmul@bexp& (0+255),w,b
  9630  0026E2  A4D8               	btfss	status,2,c
  9631  0026E4  EF76  F013         	goto	u6661
  9632  0026E8  EF78  F013         	goto	u6660
  9633  0026EC                     u6661:
  9634  0026EC  EF80  F013         	goto	l6722
  9635  0026F0                     u6660:
  9636  0026F0                     
  9637                           ; BSR set to: 0
  9638  0026F0  0E00               	movlw	0
  9639  0026F2  6E4C               	movwf	___flmul@b^0,c
  9640  0026F4  0E00               	movlw	0
  9641  0026F6  6E4D               	movwf	(___flmul@b+1)^0,c
  9642  0026F8  0E00               	movlw	0
  9643  0026FA  6E4E               	movwf	(___flmul@b+2)^0,c
  9644  0026FC  0E00               	movlw	0
  9645  0026FE  6E4F               	movwf	(___flmul@b+3)^0,c
  9646  002700                     l6722:
  9647                           
  9648                           ; BSR set to: 0
  9649  002700  8E4E               	bsf	(___flmul@b+2)^0,7,c
  9650  002702  EF8B  F013         	goto	l6726
  9651  002706                     l6724:
  9652                           
  9653                           ; BSR set to: 0
  9654  002706  0E00               	movlw	0
  9655  002708  6E4C               	movwf	___flmul@b^0,c
  9656  00270A  0E00               	movlw	0
  9657  00270C  6E4D               	movwf	(___flmul@b+1)^0,c
  9658  00270E  0E00               	movlw	0
  9659  002710  6E4E               	movwf	(___flmul@b+2)^0,c
  9660  002712  0E00               	movlw	0
  9661  002714  6E4F               	movwf	(___flmul@b+3)^0,c
  9662  002716                     l6726:
  9663                           
  9664                           ; BSR set to: 0
  9665  002716  5053               	movf	(___flmul@a+3)^0,w,c
  9666  002718  0B80               	andlw	128
  9667  00271A  1B64               	xorwf	___flmul@sign& (0+255),f,b
  9668  00271C                     
  9669                           ; BSR set to: 0
  9670  00271C  5053               	movf	(___flmul@a+3)^0,w,c
  9671  00271E  2453               	addwf	(___flmul@a+3)^0,w,c
  9672  002720  6F65               	movwf	___flmul@aexp& (0+255),b
  9673  002722                     
  9674                           ; BSR set to: 0
  9675  002722  AE52               	btfss	(___flmul@a+2)^0,7,c
  9676  002724  EF96  F013         	goto	u6671
  9677  002728  EF98  F013         	goto	u6670
  9678  00272C                     u6671:
  9679  00272C  EF99  F013         	goto	l6734
  9680  002730                     u6670:
  9681  002730                     
  9682                           ; BSR set to: 0
  9683  002730  8165               	bsf	___flmul@aexp& (0+255),0,b
  9684  002732                     l6734:
  9685                           
  9686                           ; BSR set to: 0
  9687  002732  5165               	movf	___flmul@aexp& (0+255),w,b
  9688  002734  B4D8               	btfsc	status,2,c
  9689  002736  EF9F  F013         	goto	u6681
  9690  00273A  EFA1  F013         	goto	u6680
  9691  00273E                     u6681:
  9692  00273E  EFB4  F013         	goto	l6742
  9693  002742                     u6680:
  9694  002742                     
  9695                           ; BSR set to: 0
  9696  002742  2965               	incf	___flmul@aexp& (0+255),w,b
  9697  002744  A4D8               	btfss	status,2,c
  9698  002746  EFA7  F013         	goto	u6691
  9699  00274A  EFA9  F013         	goto	u6690
  9700  00274E                     u6691:
  9701  00274E  EFB1  F013         	goto	l6740
  9702  002752                     u6690:
  9703  002752                     
  9704                           ; BSR set to: 0
  9705  002752  0E00               	movlw	0
  9706  002754  6E50               	movwf	___flmul@a^0,c
  9707  002756  0E00               	movlw	0
  9708  002758  6E51               	movwf	(___flmul@a+1)^0,c
  9709  00275A  0E00               	movlw	0
  9710  00275C  6E52               	movwf	(___flmul@a+2)^0,c
  9711  00275E  0E00               	movlw	0
  9712  002760  6E53               	movwf	(___flmul@a+3)^0,c
  9713  002762                     l6740:
  9714                           
  9715                           ; BSR set to: 0
  9716  002762  8E52               	bsf	(___flmul@a+2)^0,7,c
  9717  002764  EFBC  F013         	goto	l1393
  9718  002768                     l6742:
  9719                           
  9720                           ; BSR set to: 0
  9721  002768  0E00               	movlw	0
  9722  00276A  6E50               	movwf	___flmul@a^0,c
  9723  00276C  0E00               	movlw	0
  9724  00276E  6E51               	movwf	(___flmul@a+1)^0,c
  9725  002770  0E00               	movlw	0
  9726  002772  6E52               	movwf	(___flmul@a+2)^0,c
  9727  002774  0E00               	movlw	0
  9728  002776  6E53               	movwf	(___flmul@a+3)^0,c
  9729  002778                     l1393:
  9730                           
  9731                           ; BSR set to: 0
  9732  002778  5165               	movf	___flmul@aexp& (0+255),w,b
  9733  00277A  B4D8               	btfsc	status,2,c
  9734  00277C  EFC2  F013         	goto	u6701
  9735  002780  EFC4  F013         	goto	u6700
  9736  002784                     u6701:
  9737  002784  EFCC  F013         	goto	l6746
  9738  002788                     u6700:
  9739  002788                     
  9740                           ; BSR set to: 0
  9741  002788  516A               	movf	___flmul@bexp& (0+255),w,b
  9742  00278A  A4D8               	btfss	status,2,c
  9743  00278C  EFCA  F013         	goto	u6711
  9744  002790  EFCC  F013         	goto	u6710
  9745  002794                     u6711:
  9746  002794  EFD6  F013         	goto	l6750
  9747  002798                     u6710:
  9748  002798                     l6746:
  9749                           
  9750                           ; BSR set to: 0
  9751  002798  0E00               	movlw	0
  9752  00279A  6E4C               	movwf	?___flmul^0,c
  9753  00279C  0E00               	movlw	0
  9754  00279E  6E4D               	movwf	(?___flmul+1)^0,c
  9755  0027A0  0E00               	movlw	0
  9756  0027A2  6E4E               	movwf	(?___flmul+2)^0,c
  9757  0027A4  0E00               	movlw	0
  9758  0027A6  6E4F               	movwf	(?___flmul+3)^0,c
  9759  0027A8  EF6E  F015         	goto	l1397
  9760  0027AC                     l6750:
  9761                           
  9762                           ; BSR set to: 0
  9763  0027AC  5052               	movf	(___flmul@a+2)^0,w,c
  9764  0027AE  024C               	mulwf	___flmul@b^0,c
  9765  0027B0  CFF3 F06F          	movff	prodl,___flmul@temp
  9766  0027B4  CFF4 F070          	movff	prodh,___flmul@temp+1
  9767  0027B8                     
  9768                           ; BSR set to: 0
  9769  0027B8  516F               	movf	___flmul@temp& (0+255),w,b
  9770  0027BA  6F66               	movwf	___flmul@grs& (0+255),b
  9771  0027BC  6B67               	clrf	(___flmul@grs+1)& (0+255),b
  9772  0027BE  6B68               	clrf	(___flmul@grs+2)& (0+255),b
  9773  0027C0  6B69               	clrf	(___flmul@grs+3)& (0+255),b
  9774  0027C2                     
  9775                           ; BSR set to: 0
  9776  0027C2  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  9777  0027C4  6F6B               	movwf	___flmul@prod& (0+255),b
  9778  0027C6  6B6C               	clrf	(___flmul@prod+1)& (0+255),b
  9779  0027C8  6B6D               	clrf	(___flmul@prod+2)& (0+255),b
  9780  0027CA  6B6E               	clrf	(___flmul@prod+3)& (0+255),b
  9781  0027CC  5051               	movf	(___flmul@a+1)^0,w,c
  9782  0027CE  024D               	mulwf	(___flmul@b+1)^0,c
  9783  0027D0  CFF3 F06F          	movff	prodl,___flmul@temp
  9784  0027D4  CFF4 F070          	movff	prodh,___flmul@temp+1
  9785  0027D8                     
  9786                           ; BSR set to: 0
  9787  0027D8  516F               	movf	___flmul@temp& (0+255),w,b
  9788  0027DA  2766               	addwf	___flmul@grs& (0+255),f,b
  9789  0027DC  0E00               	movlw	0
  9790  0027DE  2367               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9791  0027E0  2368               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9792  0027E2  2369               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9793  0027E4                     
  9794                           ; BSR set to: 0
  9795  0027E4  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  9796  0027E6  276B               	addwf	___flmul@prod& (0+255),f,b
  9797  0027E8  0E00               	movlw	0
  9798  0027EA  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9799  0027EC  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9800  0027EE  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9801  0027F0  5050               	movf	___flmul@a^0,w,c
  9802  0027F2  024E               	mulwf	(___flmul@b+2)^0,c
  9803  0027F4  CFF3 F06F          	movff	prodl,___flmul@temp
  9804  0027F8  CFF4 F070          	movff	prodh,___flmul@temp+1
  9805  0027FC                     
  9806                           ; BSR set to: 0
  9807  0027FC  516F               	movf	___flmul@temp& (0+255),w,b
  9808  0027FE  2766               	addwf	___flmul@grs& (0+255),f,b
  9809  002800  0E00               	movlw	0
  9810  002802  2367               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9811  002804  2368               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9812  002806  2369               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9813  002808                     
  9814                           ; BSR set to: 0
  9815  002808  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  9816  00280A  276B               	addwf	___flmul@prod& (0+255),f,b
  9817  00280C  0E00               	movlw	0
  9818  00280E  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9819  002810  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9820  002812  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9821  002814                     
  9822                           ; BSR set to: 0
  9823  002814  C068  F069         	movff	___flmul@grs+2,___flmul@grs+3
  9824  002818  C067  F068         	movff	___flmul@grs+1,___flmul@grs+2
  9825  00281C  C066  F067         	movff	___flmul@grs,___flmul@grs+1
  9826  002820  6B66               	clrf	___flmul@grs& (0+255),b
  9827  002822                     
  9828                           ; BSR set to: 0
  9829  002822  5050               	movf	___flmul@a^0,w,c
  9830  002824  024D               	mulwf	(___flmul@b+1)^0,c
  9831  002826  CFF3 F06F          	movff	prodl,___flmul@temp
  9832  00282A  CFF4 F070          	movff	prodh,___flmul@temp+1
  9833  00282E                     
  9834                           ; BSR set to: 0
  9835  00282E  516F               	movf	___flmul@temp& (0+255),w,b
  9836  002830  2766               	addwf	___flmul@grs& (0+255),f,b
  9837  002832  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  9838  002834  2367               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9839  002836  0E00               	movlw	0
  9840  002838  2368               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9841  00283A  0E00               	movlw	0
  9842  00283C  2369               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9843  00283E                     
  9844                           ; BSR set to: 0
  9845  00283E  5051               	movf	(___flmul@a+1)^0,w,c
  9846  002840  024C               	mulwf	___flmul@b^0,c
  9847  002842  CFF3 F06F          	movff	prodl,___flmul@temp
  9848  002846  CFF4 F070          	movff	prodh,___flmul@temp+1
  9849  00284A                     
  9850                           ; BSR set to: 0
  9851  00284A  516F               	movf	___flmul@temp& (0+255),w,b
  9852  00284C  2766               	addwf	___flmul@grs& (0+255),f,b
  9853  00284E  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  9854  002850  2367               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9855  002852  0E00               	movlw	0
  9856  002854  2368               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9857  002856  0E00               	movlw	0
  9858  002858  2369               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9859  00285A                     
  9860                           ; BSR set to: 0
  9861  00285A  C068  F069         	movff	___flmul@grs+2,___flmul@grs+3
  9862  00285E  C067  F068         	movff	___flmul@grs+1,___flmul@grs+2
  9863  002862  C066  F067         	movff	___flmul@grs,___flmul@grs+1
  9864  002866  6B66               	clrf	___flmul@grs& (0+255),b
  9865  002868  5050               	movf	___flmul@a^0,w,c
  9866  00286A  024C               	mulwf	___flmul@b^0,c
  9867  00286C  CFF3 F06F          	movff	prodl,___flmul@temp
  9868  002870  CFF4 F070          	movff	prodh,___flmul@temp+1
  9869  002874                     
  9870                           ; BSR set to: 0
  9871  002874  516F               	movf	___flmul@temp& (0+255),w,b
  9872  002876  2766               	addwf	___flmul@grs& (0+255),f,b
  9873  002878  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  9874  00287A  2367               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9875  00287C  0E00               	movlw	0
  9876  00287E  2368               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9877  002880  0E00               	movlw	0
  9878  002882  2369               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9879  002884                     
  9880                           ; BSR set to: 0
  9881  002884  5052               	movf	(___flmul@a+2)^0,w,c
  9882  002886  024D               	mulwf	(___flmul@b+1)^0,c
  9883  002888  CFF3 F06F          	movff	prodl,___flmul@temp
  9884  00288C  CFF4 F070          	movff	prodh,___flmul@temp+1
  9885  002890  516F               	movf	___flmul@temp& (0+255),w,b
  9886  002892  276B               	addwf	___flmul@prod& (0+255),f,b
  9887  002894  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  9888  002896  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9889  002898  0E00               	movlw	0
  9890  00289A  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9891  00289C  0E00               	movlw	0
  9892  00289E  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9893  0028A0                     
  9894                           ; BSR set to: 0
  9895  0028A0  5051               	movf	(___flmul@a+1)^0,w,c
  9896  0028A2  024E               	mulwf	(___flmul@b+2)^0,c
  9897  0028A4  CFF3 F06F          	movff	prodl,___flmul@temp
  9898  0028A8  CFF4 F070          	movff	prodh,___flmul@temp+1
  9899  0028AC                     
  9900                           ; BSR set to: 0
  9901  0028AC  516F               	movf	___flmul@temp& (0+255),w,b
  9902  0028AE  276B               	addwf	___flmul@prod& (0+255),f,b
  9903  0028B0  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  9904  0028B2  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9905  0028B4  0E00               	movlw	0
  9906  0028B6  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9907  0028B8  0E00               	movlw	0
  9908  0028BA  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9909  0028BC  5052               	movf	(___flmul@a+2)^0,w,c
  9910  0028BE  024E               	mulwf	(___flmul@b+2)^0,c
  9911  0028C0  CFF3 F06F          	movff	prodl,___flmul@temp
  9912  0028C4  CFF4 F070          	movff	prodh,___flmul@temp+1
  9913  0028C8                     
  9914                           ; BSR set to: 0
  9915  0028C8  516F               	movf	___flmul@temp& (0+255),w,b
  9916  0028CA  6F60               	movwf	??___flmul& (0+255),b
  9917  0028CC  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  9918  0028CE  6F61               	movwf	(??___flmul+1)& (0+255),b
  9919  0028D0  6B62               	clrf	(??___flmul+2)& (0+255),b
  9920  0028D2  6B63               	clrf	(??___flmul+3)& (0+255),b
  9921  0028D4  C062  F063         	movff	??___flmul+2,??___flmul+3
  9922  0028D8  C061  F062         	movff	??___flmul+1,??___flmul+2
  9923  0028DC  C060  F061         	movff	??___flmul,??___flmul+1
  9924  0028E0  6B60               	clrf	??___flmul& (0+255),b
  9925  0028E2  5160               	movf	??___flmul& (0+255),w,b
  9926  0028E4  276B               	addwf	___flmul@prod& (0+255),f,b
  9927  0028E6  5161               	movf	(??___flmul+1)& (0+255),w,b
  9928  0028E8  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9929  0028EA  5162               	movf	(??___flmul+2)& (0+255),w,b
  9930  0028EC  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9931  0028EE  5163               	movf	(??___flmul+3)& (0+255),w,b
  9932  0028F0  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9933  0028F2                     
  9934                           ; BSR set to: 0
  9935  0028F2  C066  F060         	movff	___flmul@grs,??___flmul
  9936  0028F6  C067  F061         	movff	___flmul@grs+1,??___flmul+1
  9937  0028FA  C068  F062         	movff	___flmul@grs+2,??___flmul+2
  9938  0028FE  C069  F063         	movff	___flmul@grs+3,??___flmul+3
  9939  002902  0E19               	movlw	25
  9940  002904  EF89  F014         	goto	u6720
  9941  002908                     u6725:
  9942  002908  90D8               	bcf	status,0,c
  9943  00290A  3363               	rrcf	(??___flmul+3)& (0+255),f,b
  9944  00290C  3362               	rrcf	(??___flmul+2)& (0+255),f,b
  9945  00290E  3361               	rrcf	(??___flmul+1)& (0+255),f,b
  9946  002910  3360               	rrcf	??___flmul& (0+255),f,b
  9947  002912                     u6720:
  9948  002912  2EE8               	decfsz	wreg,f,c
  9949  002914  EF84  F014         	goto	u6725
  9950  002918  5160               	movf	??___flmul& (0+255),w,b
  9951  00291A  276B               	addwf	___flmul@prod& (0+255),f,b
  9952  00291C  5161               	movf	(??___flmul+1)& (0+255),w,b
  9953  00291E  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9954  002920  5162               	movf	(??___flmul+2)& (0+255),w,b
  9955  002922  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9956  002924  5163               	movf	(??___flmul+3)& (0+255),w,b
  9957  002926  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9958  002928                     
  9959                           ; BSR set to: 0
  9960  002928  C068  F069         	movff	___flmul@grs+2,___flmul@grs+3
  9961  00292C  C067  F068         	movff	___flmul@grs+1,___flmul@grs+2
  9962  002930  C066  F067         	movff	___flmul@grs,___flmul@grs+1
  9963  002934  6B66               	clrf	___flmul@grs& (0+255),b
  9964  002936                     
  9965                           ; BSR set to: 0
  9966  002936  5165               	movf	___flmul@aexp& (0+255),w,b
  9967  002938  C06A  F060         	movff	___flmul@bexp,??___flmul
  9968  00293C  6B61               	clrf	(??___flmul+1)& (0+255),b
  9969  00293E  2760               	addwf	??___flmul& (0+255),f,b
  9970  002940  0E00               	movlw	0
  9971  002942  2361               	addwfc	(??___flmul+1)& (0+255),f,b
  9972  002944  0E82               	movlw	130
  9973  002946  2560               	addwf	??___flmul& (0+255),w,b
  9974  002948  6F6F               	movwf	___flmul@temp& (0+255),b
  9975  00294A  0EFF               	movlw	255
  9976  00294C  2161               	addwfc	(??___flmul+1)& (0+255),w,b
  9977  00294E  6F70               	movwf	(___flmul@temp+1)& (0+255),b
  9978  002950  EFBF  F014         	goto	l6798
  9979  002954                     l6792:
  9980                           
  9981                           ; BSR set to: 0
  9982  002954  90D8               	bcf	status,0,c
  9983  002956  376B               	rlcf	___flmul@prod& (0+255),f,b
  9984  002958  376C               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9985  00295A  376D               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9986  00295C  376E               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9987  00295E                     
  9988                           ; BSR set to: 0
  9989  00295E  AF69               	btfss	(___flmul@grs+3)& (0+255),7,b
  9990  002960  EFB4  F014         	goto	u6731
  9991  002964  EFB6  F014         	goto	u6730
  9992  002968                     u6731:
  9993  002968  EFB7  F014         	goto	l1400
  9994  00296C                     u6730:
  9995  00296C                     
  9996                           ; BSR set to: 0
  9997  00296C  816B               	bsf	___flmul@prod& (0+255),0,b
  9998  00296E                     l1400:
  9999                           
 10000                           ; BSR set to: 0
 10001  00296E  90D8               	bcf	status,0,c
 10002  002970  3766               	rlcf	___flmul@grs& (0+255),f,b
 10003  002972  3767               	rlcf	(___flmul@grs+1)& (0+255),f,b
 10004  002974  3768               	rlcf	(___flmul@grs+2)& (0+255),f,b
 10005  002976  3769               	rlcf	(___flmul@grs+3)& (0+255),f,b
 10006  002978  076F               	decf	___flmul@temp& (0+255),f,b
 10007  00297A  A0D8               	btfss	status,0,c
 10008  00297C  0770               	decf	(___flmul@temp+1)& (0+255),f,b
 10009  00297E                     l6798:
 10010                           
 10011                           ; BSR set to: 0
 10012  00297E  AF6D               	btfss	(___flmul@prod+2)& (0+255),7,b
 10013  002980  EFC4  F014         	goto	u6741
 10014  002984  EFC6  F014         	goto	u6740
 10015  002988                     u6741:
 10016  002988  EFAA  F014         	goto	l6792
 10017  00298C                     u6740:
 10018  00298C                     
 10019                           ; BSR set to: 0
 10020  00298C  0E00               	movlw	0
 10021  00298E  6F65               	movwf	___flmul@aexp& (0+255),b
 10022  002990                     
 10023                           ; BSR set to: 0
 10024  002990  AF69               	btfss	(___flmul@grs+3)& (0+255),7,b
 10025  002992  EFCD  F014         	goto	u6751
 10026  002996  EFCF  F014         	goto	u6750
 10027  00299A                     u6751:
 10028  00299A  EFF3  F014         	goto	l1402
 10029  00299E                     u6750:
 10030  00299E                     
 10031                           ; BSR set to: 0
 10032  00299E  0EFF               	movlw	255
 10033  0029A0  1566               	andwf	___flmul@grs& (0+255),w,b
 10034  0029A2  6F60               	movwf	??___flmul& (0+255),b
 10035  0029A4  0EFF               	movlw	255
 10036  0029A6  1567               	andwf	(___flmul@grs+1)& (0+255),w,b
 10037  0029A8  6F61               	movwf	(??___flmul+1)& (0+255),b
 10038  0029AA  0EFF               	movlw	255
 10039  0029AC  1568               	andwf	(___flmul@grs+2)& (0+255),w,b
 10040  0029AE  6F62               	movwf	(??___flmul+2)& (0+255),b
 10041  0029B0  0E7F               	movlw	127
 10042  0029B2  1569               	andwf	(___flmul@grs+3)& (0+255),w,b
 10043  0029B4  6F63               	movwf	(??___flmul+3)& (0+255),b
 10044  0029B6  5160               	movf	??___flmul& (0+255),w,b
 10045  0029B8  1161               	iorwf	(??___flmul+1)& (0+255),w,b
 10046  0029BA  1162               	iorwf	(??___flmul+2)& (0+255),w,b
 10047  0029BC  1163               	iorwf	(??___flmul+3)& (0+255),w,b
 10048  0029BE  B4D8               	btfsc	status,2,c
 10049  0029C0  EFE4  F014         	goto	u6761
 10050  0029C4  EFE6  F014         	goto	u6760
 10051  0029C8                     u6761:
 10052  0029C8  EFEA  F014         	goto	l1403
 10053  0029CC                     u6760:
 10054  0029CC                     l6806:
 10055                           
 10056                           ; BSR set to: 0
 10057  0029CC  0E01               	movlw	1
 10058  0029CE  6F65               	movwf	___flmul@aexp& (0+255),b
 10059  0029D0  EFF3  F014         	goto	l1402
 10060  0029D4                     l1403:
 10061                           
 10062                           ; BSR set to: 0
 10063  0029D4  A16B               	btfss	___flmul@prod& (0+255),0,b
 10064  0029D6  EFEF  F014         	goto	u6771
 10065  0029DA  EFF1  F014         	goto	u6770
 10066  0029DE                     u6771:
 10067  0029DE  EFF3  F014         	goto	l1402
 10068  0029E2                     u6770:
 10069  0029E2  EFE6  F014         	goto	l6806
 10070  0029E6                     l1402:
 10071                           
 10072                           ; BSR set to: 0
 10073  0029E6  5165               	movf	___flmul@aexp& (0+255),w,b
 10074  0029E8  B4D8               	btfsc	status,2,c
 10075  0029EA  EFF9  F014         	goto	u6781
 10076  0029EE  EFFB  F014         	goto	u6780
 10077  0029F2                     u6781:
 10078  0029F2  EF1F  F015         	goto	l6818
 10079  0029F6                     u6780:
 10080  0029F6                     
 10081                           ; BSR set to: 0
 10082  0029F6  0E01               	movlw	1
 10083  0029F8  276B               	addwf	___flmul@prod& (0+255),f,b
 10084  0029FA  0E00               	movlw	0
 10085  0029FC  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10086  0029FE  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10087  002A00  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10088  002A02                     
 10089                           ; BSR set to: 0
 10090  002A02  A16E               	btfss	(___flmul@prod+3)& (0+255),0,b
 10091  002A04  EF06  F015         	goto	u6791
 10092  002A08  EF08  F015         	goto	u6790
 10093  002A0C                     u6791:
 10094  002A0C  EF1F  F015         	goto	l6818
 10095  002A10                     u6790:
 10096  002A10                     
 10097                           ; BSR set to: 0
 10098  002A10  C06B  F060         	movff	___flmul@prod,??___flmul
 10099  002A14  C06C  F061         	movff	___flmul@prod+1,??___flmul+1
 10100  002A18  C06D  F062         	movff	___flmul@prod+2,??___flmul+2
 10101  002A1C  C06E  F063         	movff	___flmul@prod+3,??___flmul+3
 10102  002A20  3563               	rlcf	(??___flmul+3)& (0+255),w,b
 10103  002A22  3363               	rrcf	(??___flmul+3)& (0+255),f,b
 10104  002A24  3362               	rrcf	(??___flmul+2)& (0+255),f,b
 10105  002A26  3361               	rrcf	(??___flmul+1)& (0+255),f,b
 10106  002A28  3360               	rrcf	??___flmul& (0+255),f,b
 10107  002A2A  C060  F06B         	movff	??___flmul,___flmul@prod
 10108  002A2E  C061  F06C         	movff	??___flmul+1,___flmul@prod+1
 10109  002A32  C062  F06D         	movff	??___flmul+2,___flmul@prod+2
 10110  002A36  C063  F06E         	movff	??___flmul+3,___flmul@prod+3
 10111  002A3A                     
 10112                           ; BSR set to: 0
 10113  002A3A  4B6F               	infsnz	___flmul@temp& (0+255),f,b
 10114  002A3C  2B70               	incf	(___flmul@temp+1)& (0+255),f,b
 10115  002A3E                     l6818:
 10116                           
 10117                           ; BSR set to: 0
 10118  002A3E  BF70               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10119  002A40  EF2A  F015         	goto	u6801
 10120  002A44  5170               	movf	(___flmul@temp+1)& (0+255),w,b
 10121  002A46  E108               	bnz	u6800
 10122  002A48  296F               	incf	___flmul@temp& (0+255),w,b
 10123  002A4A  A0D8               	btfss	status,0,c
 10124  002A4C  EF2A  F015         	goto	u6801
 10125  002A50  EF2C  F015         	goto	u6800
 10126  002A54                     u6801:
 10127  002A54  EF36  F015         	goto	l6822
 10128  002A58                     u6800:
 10129  002A58                     
 10130                           ; BSR set to: 0
 10131  002A58  0E00               	movlw	0
 10132  002A5A  6F6B               	movwf	___flmul@prod& (0+255),b
 10133  002A5C  0E00               	movlw	0
 10134  002A5E  6F6C               	movwf	(___flmul@prod+1)& (0+255),b
 10135  002A60  0E80               	movlw	128
 10136  002A62  6F6D               	movwf	(___flmul@prod+2)& (0+255),b
 10137  002A64  0E7F               	movlw	127
 10138  002A66  6F6E               	movwf	(___flmul@prod+3)& (0+255),b
 10139  002A68  EF64  F015         	goto	l6834
 10140  002A6C                     l6822:
 10141                           
 10142                           ; BSR set to: 0
 10143  002A6C  BF70               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10144  002A6E  EF43  F015         	goto	u6810
 10145  002A72  5170               	movf	(___flmul@temp+1)& (0+255),w,b
 10146  002A74  E106               	bnz	u6811
 10147  002A76  056F               	decf	___flmul@temp& (0+255),w,b
 10148  002A78  B0D8               	btfsc	status,0,c
 10149  002A7A  EF41  F015         	goto	u6811
 10150  002A7E  EF43  F015         	goto	u6810
 10151  002A82                     u6811:
 10152  002A82  EF4F  F015         	goto	l1410
 10153  002A86                     u6810:
 10154  002A86                     
 10155                           ; BSR set to: 0
 10156  002A86  0E00               	movlw	0
 10157  002A88  6F6B               	movwf	___flmul@prod& (0+255),b
 10158  002A8A  0E00               	movlw	0
 10159  002A8C  6F6C               	movwf	(___flmul@prod+1)& (0+255),b
 10160  002A8E  0E00               	movlw	0
 10161  002A90  6F6D               	movwf	(___flmul@prod+2)& (0+255),b
 10162  002A92  0E00               	movlw	0
 10163  002A94  6F6E               	movwf	(___flmul@prod+3)& (0+255),b
 10164  002A96  0E00               	movlw	0
 10165  002A98  6F64               	movwf	___flmul@sign& (0+255),b
 10166  002A9A  EF64  F015         	goto	l6834
 10167  002A9E                     l1410:
 10168                           
 10169                           ; BSR set to: 0
 10170  002A9E  C06F  F06A         	movff	___flmul@temp,___flmul@bexp
 10171  002AA2                     
 10172                           ; BSR set to: 0
 10173  002AA2  0EFF               	movlw	255
 10174  002AA4  176B               	andwf	___flmul@prod& (0+255),f,b
 10175  002AA6  0EFF               	movlw	255
 10176  002AA8  176C               	andwf	(___flmul@prod+1)& (0+255),f,b
 10177  002AAA  0E7F               	movlw	127
 10178  002AAC  176D               	andwf	(___flmul@prod+2)& (0+255),f,b
 10179  002AAE  0E00               	movlw	0
 10180  002AB0  176E               	andwf	(___flmul@prod+3)& (0+255),f,b
 10181  002AB2                     
 10182                           ; BSR set to: 0
 10183  002AB2  A16A               	btfss	___flmul@bexp& (0+255),0,b
 10184  002AB4  EF5E  F015         	goto	u6821
 10185  002AB8  EF60  F015         	goto	u6820
 10186  002ABC                     u6821:
 10187  002ABC  EF61  F015         	goto	l6832
 10188  002AC0                     u6820:
 10189  002AC0                     
 10190                           ; BSR set to: 0
 10191  002AC0  8F6D               	bsf	(___flmul@prod+2)& (0+255),7,b
 10192  002AC2                     l6832:
 10193                           
 10194                           ; BSR set to: 0
 10195  002AC2  90D8               	bcf	status,0,c
 10196  002AC4  316A               	rrcf	___flmul@bexp& (0+255),w,b
 10197  002AC6  6F6E               	movwf	(___flmul@prod+3)& (0+255),b
 10198  002AC8                     l6834:
 10199                           
 10200                           ; BSR set to: 0
 10201  002AC8  5164               	movf	___flmul@sign& (0+255),w,b
 10202  002ACA  136E               	iorwf	(___flmul@prod+3)& (0+255),f,b
 10203  002ACC                     
 10204                           ; BSR set to: 0
 10205  002ACC  C06B  F04C         	movff	___flmul@prod,?___flmul
 10206  002AD0  C06C  F04D         	movff	___flmul@prod+1,?___flmul+1
 10207  002AD4  C06D  F04E         	movff	___flmul@prod+2,?___flmul+2
 10208  002AD8  C06E  F04F         	movff	___flmul@prod+3,?___flmul+3
 10209  002ADC                     l1397:
 10210                           
 10211                           ; BSR set to: 0
 10212  002ADC  0012               	return		;funcret
 10213  002ADE                     __end_of___flmul:
 10214                           	callstack 0
 10215                           
 10216 ;; *************** function _INA219_getBusVoltage_raw *****************
 10217 ;; Defined at:
 10218 ;;		line 87 in file "ina219.c"
 10219 ;; Parameters:    Size  Location     Type
 10220 ;;		None
 10221 ;; Auto vars:     Size  Location     Type
 10222 ;;  value           2   34[COMRAM] short 
 10223 ;; Return value:  Size  Location     Type
 10224 ;;                  2   32[COMRAM] short 
 10225 ;; Registers used:
 10226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10227 ;; Tracked objects:
 10228 ;;		On entry : 0/0
 10229 ;;		On exit  : 0/0
 10230 ;;		Unchanged: 0/0
 10231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10232 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10233 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10235 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10236 ;;Total ram usage:        4 bytes
 10237 ;; Hardware stack levels used: 1
 10238 ;; Hardware stack levels required when called: 14
 10239 ;; This function calls:
 10240 ;;		_INA219_ReadRegister
 10241 ;; This function is called by:
 10242 ;;		_INA219_getBusVoltage_V
 10243 ;; This function uses a non-reentrant model
 10244 ;;
 10245                           
 10246                           	psect	text53
 10247  004B56                     __ptext53:
 10248                           	callstack 0
 10249  004B56                     _INA219_getBusVoltage_raw:
 10250                           	callstack 15
 10251  004B56                     
 10252                           ;ina219.c: 88:     int16_t value;;ina219.c: 89:     INA219_ReadRegister((0x02), &value);
 10253  004B56  0E23               	movlw	low INA219_getBusVoltage_raw@value
 10254  004B58  6E1E               	movwf	INA219_ReadRegister@data^0,c
 10255  004B5A  0E00               	movlw	high INA219_getBusVoltage_raw@value
 10256  004B5C  6E1F               	movwf	(INA219_ReadRegister@data+1)^0,c
 10257  004B5E  0E02               	movlw	2
 10258  004B60  EC69  F025         	call	_INA219_ReadRegister
 10259  004B64                     
 10260                           ;ina219.c: 90:     return (int16_t) value;
 10261  004B64  C023  F021         	movff	INA219_getBusVoltage_raw@value,?_INA219_getBusVoltage_raw
 10262  004B68  C024  F022         	movff	INA219_getBusVoltage_raw@value+1,?_INA219_getBusVoltage_raw+1
 10263  004B6C  0012               	return		;funcret
 10264  004B6E                     __end_of_INA219_getBusVoltage_raw:
 10265                           	callstack 0
 10266                           
 10267 ;; *************** function _INA219_ReadRegister *****************
 10268 ;; Defined at:
 10269 ;;		line 35 in file "ina219.c"
 10270 ;; Parameters:    Size  Location     Type
 10271 ;;  address         1    wreg     unsigned char 
 10272 ;;  data            2   29[COMRAM] PTR unsigned short 
 10273 ;;		 -> INA219_getCurrent_raw@value(2), INA219_getShuntVoltage_raw@value(2), INA219_getBusVoltage_raw@value(2), 
 10274 ;; Auto vars:     Size  Location     Type
 10275 ;;  address         1   31[COMRAM] unsigned char 
 10276 ;; Return value:  Size  Location     Type
 10277 ;;                  1    wreg      void 
 10278 ;; Registers used:
 10279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10280 ;; Tracked objects:
 10281 ;;		On entry : 0/0
 10282 ;;		On exit  : 0/0
 10283 ;;		Unchanged: 0/0
 10284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10285 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10286 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10288 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10289 ;;Total ram usage:        3 bytes
 10290 ;; Hardware stack levels used: 1
 10291 ;; Hardware stack levels required when called: 13
 10292 ;; This function calls:
 10293 ;;		_I2C_Read2ByteRegister
 10294 ;; This function is called by:
 10295 ;;		_INA219_getBusVoltage_raw
 10296 ;;		_INA219_getShuntVoltage_raw
 10297 ;;		_INA219_getCurrent_raw
 10298 ;; This function uses a non-reentrant model
 10299 ;;
 10300                           
 10301                           	psect	text54
 10302  004AD2                     __ptext54:
 10303                           	callstack 0
 10304  004AD2                     _INA219_ReadRegister:
 10305                           	callstack 15
 10306                           
 10307                           ;incstack = 0
 10308                           ;INA219_ReadRegister@address stored from wreg
 10309  004AD2  6E20               	movwf	INA219_ReadRegister@address^0,c
 10310  004AD4                     
 10311                           ;ina219.c: 36:     *data = I2C_Read2ByteRegister((0x40), address);
 10312  004AD4  C020  F016         	movff	INA219_ReadRegister@address,I2C_Read2ByteRegister@reg
 10313  004AD8  0E40               	movlw	64
 10314  004ADA  ECF2  F01F         	call	_I2C_Read2ByteRegister
 10315  004ADE  C01E  FFD9         	movff	INA219_ReadRegister@data,fsr2l
 10316  004AE2  C01F  FFDA         	movff	INA219_ReadRegister@data+1,fsr2h
 10317  004AE6  C016  FFDE         	movff	?_I2C_Read2ByteRegister,postinc2
 10318  004AEA  C017  FFDD         	movff	?_I2C_Read2ByteRegister+1,postdec2
 10319  004AEE  0012               	return		;funcret
 10320  004AF0                     __end_of_INA219_ReadRegister:
 10321                           	callstack 0
 10322                           
 10323 ;; *************** function _I2C_Read2ByteRegister *****************
 10324 ;; Defined at:
 10325 ;;		line 77 in file "mcc_generated_files/examples/i2c_master_example.c"
 10326 ;; Parameters:    Size  Location     Type
 10327 ;;  address         1    wreg     unsigned char 
 10328 ;;  reg             1   21[COMRAM] unsigned char 
 10329 ;; Auto vars:     Size  Location     Type
 10330 ;;  address         1   26[COMRAM] unsigned char 
 10331 ;;  returnValue     2   27[COMRAM] unsigned short 
 10332 ;; Return value:  Size  Location     Type
 10333 ;;                  2   21[COMRAM] unsigned short 
 10334 ;; Registers used:
 10335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10336 ;; Tracked objects:
 10337 ;;		On entry : 0/0
 10338 ;;		On exit  : 0/0
 10339 ;;		Unchanged: 0/0
 10340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10342 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10343 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10344 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10345 ;;Total ram usage:        8 bytes
 10346 ;; Hardware stack levels used: 1
 10347 ;; Hardware stack levels required when called: 12
 10348 ;; This function calls:
 10349 ;;		_I2C_Close
 10350 ;;		_I2C_MasterWrite
 10351 ;;		_I2C_Open
 10352 ;;		_I2C_SetAddressNackCallback
 10353 ;;		_I2C_SetBuffer
 10354 ;;		_I2C_SetDataCompleteCallback
 10355 ;; This function is called by:
 10356 ;;		_INA219_ReadRegister
 10357 ;; This function uses a non-reentrant model
 10358 ;;
 10359                           
 10360                           	psect	text55
 10361  003FE4                     __ptext55:
 10362                           	callstack 0
 10363  003FE4                     _I2C_Read2ByteRegister:
 10364                           	callstack 15
 10365                           
 10366                           ;incstack = 0
 10367                           ;I2C_Read2ByteRegister@address stored from wreg
 10368  003FE4  6E1B               	movwf	I2C_Read2ByteRegister@address^0,c
 10369  003FE6                     
 10370                           ;mcc_generated_files/examples/i2c_master_example.c: 77: uint16_t I2C_Read2ByteRegister(i
      +                          2c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 78
      +                          : {;mcc_generated_files/examples/i2c_master_example.c: 79:     uint16_t returnValue =0x0
      +                          0;
 10371  003FE6  0E00               	movlw	0
 10372  003FE8  6E1D               	movwf	(I2C_Read2ByteRegister@returnValue+1)^0,c
 10373  003FEA  0E00               	movlw	0
 10374  003FEC  6E1C               	movwf	I2C_Read2ByteRegister@returnValue^0,c
 10375  003FEE                     l5246:
 10376  003FEE  501B               	movf	I2C_Read2ByteRegister@address^0,w,c
 10377  003FF0  ECAB  F01F         	call	_I2C_Open
 10378  003FF4  0900               	iorlw	0
 10379  003FF6  B4D8               	btfsc	status,2,c
 10380  003FF8  EF00  F020         	goto	u4661
 10381  003FFC  EF02  F020         	goto	u4660
 10382  004000                     u4661:
 10383  004000  EFF7  F01F         	goto	l5246
 10384  004004                     u4660:
 10385  004004                     
 10386                           ;mcc_generated_files/examples/i2c_master_example.c: 82:     I2C_SetDataCompleteCallback(
      +                          rd2RegCompleteHandler,&returnValue);
 10387  004004  0E3E               	movlw	low _rd2RegCompleteHandler
 10388  004006  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 10389  004008  0E49               	movlw	high _rd2RegCompleteHandler
 10390  00400A  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 10391  00400C  0E1C               	movlw	low I2C_Read2ByteRegister@returnValue
 10392  00400E  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 10393  004010  0E00               	movlw	high I2C_Read2ByteRegister@returnValue
 10394  004012  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 10395  004014  ECC3  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 10396  004018                     
 10397                           ;mcc_generated_files/examples/i2c_master_example.c: 83:     I2C_SetBuffer(&reg,1);
 10398  004018  0E16               	movlw	low I2C_Read2ByteRegister@reg
 10399  00401A  6E05               	movwf	I2C_SetBuffer@buffer^0,c
 10400  00401C  0E00               	movlw	high I2C_Read2ByteRegister@reg
 10401  00401E  6E06               	movwf	(I2C_SetBuffer@buffer+1)^0,c
 10402  004020  0E00               	movlw	0
 10403  004022  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 10404  004024  0E01               	movlw	1
 10405  004026  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 10406  004028  EC46  F025         	call	_I2C_SetBuffer	;wreg free
 10407  00402C                     
 10408                           ;mcc_generated_files/examples/i2c_master_example.c: 84:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 10409  00402C  0E00               	movlw	0
 10410  00402E  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
 10411  004030  0E00               	movlw	0
 10412  004032  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
 10413  004034  0E00               	movlw	0
 10414  004036  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
 10415  004038  0E00               	movlw	0
 10416  00403A  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
 10417  00403C  ECB7  F025         	call	_I2C_SetAddressNackCallback	;wreg free
 10418  004040                     
 10419                           ;mcc_generated_files/examples/i2c_master_example.c: 85:     I2C_MasterWrite();
 10420  004040  EC3B  F026         	call	_I2C_MasterWrite	;wreg free
 10421  004044                     l5256:
 10422  004044  ECE1  F024         	call	_I2C_Close	;wreg free
 10423  004048  06E8               	decf	wreg,f,c
 10424  00404A  B4D8               	btfsc	status,2,c
 10425  00404C  EF2A  F020         	goto	u4671
 10426  004050  EF2C  F020         	goto	u4670
 10427  004054                     u4671:
 10428  004054  EF22  F020         	goto	l5256
 10429  004058                     u4670:
 10430  004058                     
 10431                           ;mcc_generated_files/examples/i2c_master_example.c: 88:     return (returnValue << 8 | r
      +                          eturnValue >> 8);
 10432  004058  C01D  F018         	movff	I2C_Read2ByteRegister@returnValue+1,??_I2C_Read2ByteRegister
 10433  00405C  501C               	movf	I2C_Read2ByteRegister@returnValue^0,w,c
 10434  00405E  6E19               	movwf	(??_I2C_Read2ByteRegister+1)^0,c
 10435  004060  5018               	movf	??_I2C_Read2ByteRegister^0,w,c
 10436  004062  6E16               	movwf	?_I2C_Read2ByteRegister^0,c
 10437  004064  C019  F017         	movff	??_I2C_Read2ByteRegister+1,?_I2C_Read2ByteRegister+1
 10438  004068  0012               	return		;funcret
 10439  00406A                     __end_of_I2C_Read2ByteRegister:
 10440                           	callstack 0
 10441                           
 10442 ;; *************** function _I2C_SetAddressNackCallback *****************
 10443 ;; Defined at:
 10444 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
 10445 ;; Parameters:    Size  Location     Type
 10446 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
 10447 ;;		 -> Absolute function(1), 
 10448 ;;  ptr             2   11[COMRAM] PTR void 
 10449 ;;		 -> NULL(0), 
 10450 ;; Auto vars:     Size  Location     Type
 10451 ;;		None
 10452 ;; Return value:  Size  Location     Type
 10453 ;;                  1    wreg      void 
 10454 ;; Registers used:
 10455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10456 ;; Tracked objects:
 10457 ;;		On entry : 0/0
 10458 ;;		On exit  : 0/0
 10459 ;;		Unchanged: 0/0
 10460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10461 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10464 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10465 ;;Total ram usage:        4 bytes
 10466 ;; Hardware stack levels used: 1
 10467 ;; Hardware stack levels required when called: 5
 10468 ;; This function calls:
 10469 ;;		_I2C_SetCallback
 10470 ;; This function is called by:
 10471 ;;		_I2C_Read2ByteRegister
 10472 ;;		_I2C_WriteNBytes
 10473 ;;		_I2C_Read1ByteRegister
 10474 ;;		_I2C_Write1ByteRegister
 10475 ;;		_I2C_Write2ByteRegister
 10476 ;;		_I2C_ReadDataBlock
 10477 ;; This function uses a non-reentrant model
 10478 ;;
 10479                           
 10480                           	psect	text56
 10481  004B6E                     __ptext56:
 10482                           	callstack 0
 10483  004B6E                     _I2C_SetAddressNackCallback:
 10484                           	callstack 22
 10485  004B6E                     
 10486                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
 10487  004B6E  C00A  F005         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
 10488  004B72  C00B  F006         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
 10489  004B76  C00C  F007         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
 10490  004B7A  C00D  F008         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
 10491  004B7E  0E02               	movlw	2
 10492  004B80  ECB5  F020         	call	_I2C_SetCallback
 10493  004B84  0012               	return		;funcret
 10494  004B86                     __end_of_I2C_SetAddressNackCallback:
 10495                           	callstack 0
 10496                           
 10497 ;; *************** function _I2C_Open *****************
 10498 ;; Defined at:
 10499 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
 10500 ;; Parameters:    Size  Location     Type
 10501 ;;  address         1    wreg     unsigned char 
 10502 ;; Auto vars:     Size  Location     Type
 10503 ;;  address         1    4[COMRAM] unsigned char 
 10504 ;;  returnValue     1    5[COMRAM] enum E355
 10505 ;; Return value:  Size  Location     Type
 10506 ;;                  1    wreg      enum E355
 10507 ;; Registers used:
 10508 ;;		wreg, status,2, status,0, cstack
 10509 ;; Tracked objects:
 10510 ;;		On entry : 0/0
 10511 ;;		On exit  : 0/0
 10512 ;;		Unchanged: 0/0
 10513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10515 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10517 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10518 ;;Total ram usage:        2 bytes
 10519 ;; Hardware stack levels used: 1
 10520 ;; Hardware stack levels required when called: 5
 10521 ;; This function calls:
 10522 ;;		_I2C_MasterClearIrq
 10523 ;;		_I2C_MasterOpen
 10524 ;; This function is called by:
 10525 ;;		_I2C_Read2ByteRegister
 10526 ;;		_I2C_WriteNBytes
 10527 ;;		_I2C_Read1ByteRegister
 10528 ;;		_I2C_Write1ByteRegister
 10529 ;;		_I2C_Write2ByteRegister
 10530 ;;		_I2C_ReadNBytes
 10531 ;;		_I2C_ReadDataBlock
 10532 ;; This function uses a non-reentrant model
 10533 ;;
 10534                           
 10535                           	psect	text57
 10536  003F56                     __ptext57:
 10537                           	callstack 0
 10538  003F56                     _I2C_Open:
 10539                           	callstack 22
 10540                           
 10541                           ;incstack = 0
 10542                           ;I2C_Open@address stored from wreg
 10543  003F56  6E05               	movwf	I2C_Open@address^0,c
 10544  003F58                     
 10545                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 10546  003F58  0E01               	movlw	1
 10547  003F5A  6E06               	movwf	I2C_Open@returnValue^0,c
 10548  003F5C                     
 10549                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
 10550  003F5C  0101               	movlb	1	; () banked
 10551  003F5E  B523               	btfsc	(_I2C_Status+35)& (0+255),2,b
 10552  003F60  EFB4  F01F         	goto	u3641
 10553  003F64  EFB6  F01F         	goto	u3640
 10554  003F68                     u3641:
 10555  003F68  EFF0  F01F         	goto	l4668
 10556  003F6C                     u3640:
 10557  003F6C                     
 10558                           ; BSR set to: 1
 10559                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
 10560  003F6C  C005  F11C         	movff	I2C_Open@address,_I2C_Status+28
 10561  003F70                     
 10562                           ; BSR set to: 1
 10563                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
 10564  003F70  9323               	bcf	(_I2C_Status+35)& (0+255),1,b
 10565  003F72                     
 10566                           ; BSR set to: 1
 10567                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
 10568  003F72  8523               	bsf	(_I2C_Status+35)& (0+255),2,b
 10569  003F74                     
 10570                           ; BSR set to: 1
 10571                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
 10572  003F74  9123               	bcf	(_I2C_Status+35)& (0+255),0,b
 10573  003F76                     
 10574                           ; BSR set to: 1
 10575                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
 10576  003F76  0E0E               	movlw	14
 10577  003F78  6F21               	movwf	(_I2C_Status+33)& (0+255),b
 10578  003F7A                     
 10579                           ; BSR set to: 1
 10580                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
 10581  003F7A  0E01               	movlw	1
 10582  003F7C  6F1B               	movwf	(_I2C_Status+27)& (0+255),b
 10583  003F7E  0EF4               	movlw	244
 10584  003F80  6F1A               	movwf	(_I2C_Status+26)& (0+255),b
 10585  003F82                     
 10586                           ; BSR set to: 1
 10587                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
 10588  003F82  8723               	bsf	(_I2C_Status+35)& (0+255),3,b
 10589  003F84                     
 10590                           ; BSR set to: 1
 10591                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
 10592  003F84  0EEA               	movlw	low _I2C_CallbackReturnStop
 10593  003F86  6F00               	movwf	_I2C_Status& (0+255),b
 10594  003F88  0E4C               	movlw	high _I2C_CallbackReturnStop
 10595  003F8A  6F01               	movwf	(_I2C_Status+1)& (0+255),b
 10596  003F8C                     
 10597                           ; BSR set to: 1
 10598                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
 10599  003F8C  0E00               	movlw	0
 10600  003F8E  6F0C               	movwf	(_I2C_Status+12)& (0+255),b
 10601  003F90  0E00               	movlw	0
 10602  003F92  6F0D               	movwf	(_I2C_Status+13)& (0+255),b
 10603  003F94                     
 10604                           ; BSR set to: 1
 10605                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
 10606  003F94  0EEA               	movlw	low _I2C_CallbackReturnStop
 10607  003F96  6F02               	movwf	(_I2C_Status+2)& (0+255),b
 10608  003F98  0E4C               	movlw	high _I2C_CallbackReturnStop
 10609  003F9A  6F03               	movwf	(_I2C_Status+3)& (0+255),b
 10610  003F9C                     
 10611                           ; BSR set to: 1
 10612                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
 10613  003F9C  0E00               	movlw	0
 10614  003F9E  6F0E               	movwf	(_I2C_Status+14)& (0+255),b
 10615  003FA0  0E00               	movlw	0
 10616  003FA2  6F0F               	movwf	(_I2C_Status+15)& (0+255),b
 10617  003FA4                     
 10618                           ; BSR set to: 1
 10619                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
 10620  003FA4  0EEA               	movlw	low _I2C_CallbackReturnStop
 10621  003FA6  6F04               	movwf	(_I2C_Status+4)& (0+255),b
 10622  003FA8  0E4C               	movlw	high _I2C_CallbackReturnStop
 10623  003FAA  6F05               	movwf	(_I2C_Status+5)& (0+255),b
 10624  003FAC                     
 10625                           ; BSR set to: 1
 10626                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
 10627  003FAC  0E00               	movlw	0
 10628  003FAE  6F10               	movwf	(_I2C_Status+16)& (0+255),b
 10629  003FB0  0E00               	movlw	0
 10630  003FB2  6F11               	movwf	(_I2C_Status+17)& (0+255),b
 10631  003FB4                     
 10632                           ; BSR set to: 1
 10633                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
 10634  003FB4  0EEA               	movlw	low _I2C_CallbackReturnStop
 10635  003FB6  6F06               	movwf	(_I2C_Status+6)& (0+255),b
 10636  003FB8  0E4C               	movlw	high _I2C_CallbackReturnStop
 10637  003FBA  6F07               	movwf	(_I2C_Status+7)& (0+255),b
 10638  003FBC                     
 10639                           ; BSR set to: 1
 10640                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
 10641  003FBC  0E00               	movlw	0
 10642  003FBE  6F12               	movwf	(_I2C_Status+18)& (0+255),b
 10643  003FC0  0E00               	movlw	0
 10644  003FC2  6F13               	movwf	(_I2C_Status+19)& (0+255),b
 10645  003FC4                     
 10646                           ; BSR set to: 1
 10647                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
 10648  003FC4  0EE6               	movlw	low _I2C_CallbackReturnReset
 10649  003FC6  6F08               	movwf	(_I2C_Status+8)& (0+255),b
 10650  003FC8  0E4C               	movlw	high _I2C_CallbackReturnReset
 10651  003FCA  6F09               	movwf	(_I2C_Status+9)& (0+255),b
 10652  003FCC                     
 10653                           ; BSR set to: 1
 10654                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
 10655  003FCC  0E00               	movlw	0
 10656  003FCE  6F14               	movwf	(_I2C_Status+20)& (0+255),b
 10657  003FD0  0E00               	movlw	0
 10658  003FD2  6F15               	movwf	(_I2C_Status+21)& (0+255),b
 10659  003FD4                     
 10660                           ; BSR set to: 1
 10661                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
 10662  003FD4  EC81  F026         	call	_I2C_MasterClearIrq	;wreg free
 10663  003FD8                     
 10664                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
 10665  003FD8  EC58  F025         	call	_I2C_MasterOpen	;wreg free
 10666  003FDC                     
 10667                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
 10668  003FDC  0E00               	movlw	0
 10669  003FDE  6E06               	movwf	I2C_Open@returnValue^0,c
 10670  003FE0                     l4668:
 10671                           
 10672                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
 10673  003FE0  5006               	movf	I2C_Open@returnValue^0,w,c
 10674  003FE2  0012               	return		;funcret
 10675  003FE4                     __end_of_I2C_Open:
 10676                           	callstack 0
 10677                           
 10678 ;; *************** function _I2C_MasterOpen *****************
 10679 ;; Defined at:
 10680 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
 10681 ;; Parameters:    Size  Location     Type
 10682 ;;		None
 10683 ;; Auto vars:     Size  Location     Type
 10684 ;;		None
 10685 ;; Return value:  Size  Location     Type
 10686 ;;                  1    wreg      _Bool 
 10687 ;; Registers used:
 10688 ;;		wreg, status,2
 10689 ;; Tracked objects:
 10690 ;;		On entry : 0/0
 10691 ;;		On exit  : 0/0
 10692 ;;		Unchanged: 0/0
 10693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10698 ;;Total ram usage:        0 bytes
 10699 ;; Hardware stack levels used: 1
 10700 ;; Hardware stack levels required when called: 4
 10701 ;; This function calls:
 10702 ;;		Nothing
 10703 ;; This function is called by:
 10704 ;;		_I2C_Open
 10705 ;; This function uses a non-reentrant model
 10706 ;;
 10707                           
 10708                           	psect	text58
 10709  004AB0                     __ptext58:
 10710                           	callstack 0
 10711  004AB0                     _I2C_MasterOpen:
 10712                           	callstack 22
 10713  004AB0                     
 10714                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
 10715  004AB0  BAC6               	btfsc	198,5,c	;volatile
 10716  004AB2  EF5D  F025         	goto	u3181
 10717  004AB6  EF5F  F025         	goto	u3180
 10718  004ABA                     u3181:
 10719  004ABA  EF68  F025         	goto	l378
 10720  004ABE                     u3180:
 10721  004ABE                     
 10722                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x00;
 10723  004ABE  0E00               	movlw	0
 10724  004AC0  6EC7               	movwf	199,c	;volatile
 10725                           
 10726                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
 10727  004AC2  0E08               	movlw	8
 10728  004AC4  6EC6               	movwf	198,c	;volatile
 10729                           
 10730                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
 10731  004AC6  0E00               	movlw	0
 10732  004AC8  6EC5               	movwf	197,c	;volatile
 10733                           
 10734                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x13;
 10735  004ACA  0E13               	movlw	19
 10736  004ACC  6EC8               	movwf	200,c	;volatile
 10737  004ACE                     
 10738                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
 10739  004ACE  8AC6               	bsf	198,5,c	;volatile
 10740  004AD0                     l378:
 10741  004AD0  0012               	return		;funcret
 10742  004AD2                     __end_of_I2C_MasterOpen:
 10743                           	callstack 0
 10744                           
 10745 ;; *************** function _I2C_MasterWrite *****************
 10746 ;; Defined at:
 10747 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
 10748 ;; Parameters:    Size  Location     Type
 10749 ;;		None
 10750 ;; Auto vars:     Size  Location     Type
 10751 ;;		None
 10752 ;; Return value:  Size  Location     Type
 10753 ;;                  1    wreg      enum E355
 10754 ;; Registers used:
 10755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10756 ;; Tracked objects:
 10757 ;;		On entry : 0/0
 10758 ;;		On exit  : 0/0
 10759 ;;		Unchanged: 0/0
 10760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10765 ;;Total ram usage:        0 bytes
 10766 ;; Hardware stack levels used: 1
 10767 ;; Hardware stack levels required when called: 11
 10768 ;; This function calls:
 10769 ;;		_I2C_MasterOperation
 10770 ;; This function is called by:
 10771 ;;		_I2C_Read2ByteRegister
 10772 ;;		_I2C_WriteNBytes
 10773 ;;		_I2C_Read1ByteRegister
 10774 ;;		_I2C_Write1ByteRegister
 10775 ;;		_I2C_Write2ByteRegister
 10776 ;;		_I2C_ReadDataBlock
 10777 ;; This function uses a non-reentrant model
 10778 ;;
 10779                           
 10780                           	psect	text59
 10781  004C76                     __ptext59:
 10782                           	callstack 0
 10783  004C76                     _I2C_MasterWrite:
 10784                           	callstack 16
 10785  004C76                     
 10786                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
 10787  004C76  0E00               	movlw	0
 10788  004C78  EC83  F023         	call	_I2C_MasterOperation
 10789  004C7C  0012               	return		;funcret
 10790  004C7E                     __end_of_I2C_MasterWrite:
 10791                           	callstack 0
 10792                           
 10793 ;; *************** function _I2C_MasterOperation *****************
 10794 ;; Defined at:
 10795 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
 10796 ;; Parameters:    Size  Location     Type
 10797 ;;  read            1    wreg     _Bool 
 10798 ;; Auto vars:     Size  Location     Type
 10799 ;;  read            1   19[COMRAM] _Bool 
 10800 ;;  returnValue     1   20[COMRAM] enum E355
 10801 ;; Return value:  Size  Location     Type
 10802 ;;                  1    wreg      enum E355
 10803 ;; Registers used:
 10804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10805 ;; Tracked objects:
 10806 ;;		On entry : 0/0
 10807 ;;		On exit  : 0/0
 10808 ;;		Unchanged: 0/0
 10809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10811 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10813 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10814 ;;Total ram usage:        2 bytes
 10815 ;; Hardware stack levels used: 1
 10816 ;; Hardware stack levels required when called: 10
 10817 ;; This function calls:
 10818 ;;		_I2C_MasterStart
 10819 ;;		_I2C_Poller
 10820 ;; This function is called by:
 10821 ;;		_I2C_MasterWrite
 10822 ;;		_I2C_MasterRead
 10823 ;; This function uses a non-reentrant model
 10824 ;;
 10825                           
 10826                           	psect	text60
 10827  004706                     __ptext60:
 10828                           	callstack 0
 10829  004706                     _I2C_MasterOperation:
 10830                           	callstack 16
 10831                           
 10832                           ;incstack = 0
 10833                           ;I2C_MasterOperation@read stored from wreg
 10834  004706  6E14               	movwf	I2C_MasterOperation@read^0,c
 10835  004708                     
 10836                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 10837  004708  0E01               	movlw	1
 10838  00470A  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
 10839  00470C                     
 10840                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
 10841  00470C  0101               	movlb	1	; () banked
 10842  00470E  B323               	btfsc	(_I2C_Status+35)& (0+255),1,b
 10843  004710  EF8C  F023         	goto	u3191
 10844  004714  EF8E  F023         	goto	u3190
 10845  004718                     u3191:
 10846  004718  EFA3  F023         	goto	l4396
 10847  00471C                     u3190:
 10848  00471C                     
 10849                           ; BSR set to: 1
 10850                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
 10851  00471C  8323               	bsf	(_I2C_Status+35)& (0+255),1,b
 10852  00471E                     
 10853                           ; BSR set to: 1
 10854                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
 10855  00471E  0E00               	movlw	0
 10856  004720  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
 10857  004722                     
 10858                           ; BSR set to: 1
 10859                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
 10860  004722  5014               	movf	I2C_MasterOperation@read^0,w,c
 10861  004724  B4D8               	btfsc	status,2,c
 10862  004726  EF97  F023         	goto	u3201
 10863  00472A  EF99  F023         	goto	u3200
 10864  00472E                     u3201:
 10865  00472E  EF9D  F023         	goto	l4390
 10866  004732                     u3200:
 10867  004732                     
 10868                           ; BSR set to: 1
 10869                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
 10870  004732  0E01               	movlw	1
 10871  004734  6F21               	movwf	(_I2C_Status+33)& (0+255),b
 10872                           
 10873                           ;mcc_generated_files/i2c_master.c: 235:         }
 10874  004736  EF9F  F023         	goto	l4392
 10875  00473A                     l4390:
 10876                           
 10877                           ; BSR set to: 1
 10878                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
 10879  00473A  0E02               	movlw	2
 10880  00473C  6F21               	movwf	(_I2C_Status+33)& (0+255),b
 10881  00473E                     l4392:
 10882                           
 10883                           ; BSR set to: 1
 10884                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
 10885  00473E  EC7B  F026         	call	_I2C_MasterStart	;wreg free
 10886  004742                     
 10887                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
 10888  004742  EC78  F025         	call	_I2C_Poller	;wreg free
 10889  004746                     l4396:
 10890                           
 10891                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
 10892  004746  5015               	movf	I2C_MasterOperation@returnValue^0,w,c
 10893  004748  0012               	return		;funcret
 10894  00474A                     __end_of_I2C_MasterOperation:
 10895                           	callstack 0
 10896                           
 10897 ;; *************** function _I2C_Poller *****************
 10898 ;; Defined at:
 10899 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
 10900 ;; Parameters:    Size  Location     Type
 10901 ;;		None
 10902 ;; Auto vars:     Size  Location     Type
 10903 ;;		None
 10904 ;; Return value:  Size  Location     Type
 10905 ;;                  1    wreg      void 
 10906 ;; Registers used:
 10907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10908 ;; Tracked objects:
 10909 ;;		On entry : 0/0
 10910 ;;		On exit  : 0/0
 10911 ;;		Unchanged: 0/0
 10912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10917 ;;Total ram usage:        0 bytes
 10918 ;; Hardware stack levels used: 1
 10919 ;; Hardware stack levels required when called: 9
 10920 ;; This function calls:
 10921 ;;		_I2C_MasterFsm
 10922 ;;		_I2C_MasterWaitForEvent
 10923 ;; This function is called by:
 10924 ;;		_I2C_MasterOperation
 10925 ;; This function uses a non-reentrant model
 10926 ;;
 10927                           
 10928                           	psect	text61
 10929  004AF0                     __ptext61:
 10930                           	callstack 0
 10931  004AF0                     _I2C_Poller:
 10932                           	callstack 16
 10933  004AF0                     
 10934                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 10935  004AF0  EF7E  F025         	goto	l4350
 10936  004AF4                     l4346:
 10937                           
 10938                           ; BSR set to: 1
 10939                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
 10940  004AF4  ECEE  F025         	call	_I2C_MasterWaitForEvent	;wreg free
 10941  004AF8                     
 10942                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
 10943  004AF8  EC67  F021         	call	_I2C_MasterFsm	;wreg free
 10944  004AFC                     l4350:
 10945                           
 10946                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 10947  004AFC  0101               	movlb	1	; () banked
 10948  004AFE  B323               	btfsc	(_I2C_Status+35)& (0+255),1,b
 10949  004B00  EF84  F025         	goto	u3131
 10950  004B04  EF86  F025         	goto	u3130
 10951  004B08                     u3131:
 10952  004B08  EF7A  F025         	goto	l4346
 10953  004B0C                     u3130:
 10954  004B0C                     
 10955                           ; BSR set to: 1
 10956  004B0C  0012               	return		;funcret
 10957  004B0E                     __end_of_I2C_Poller:
 10958                           	callstack 0
 10959                           
 10960 ;; *************** function _I2C_MasterWaitForEvent *****************
 10961 ;; Defined at:
 10962 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
 10963 ;; Parameters:    Size  Location     Type
 10964 ;;		None
 10965 ;; Auto vars:     Size  Location     Type
 10966 ;;		None
 10967 ;; Return value:  Size  Location     Type
 10968 ;;                  1    wreg      void 
 10969 ;; Registers used:
 10970 ;;		None
 10971 ;; Tracked objects:
 10972 ;;		On entry : 0/0
 10973 ;;		On exit  : 0/0
 10974 ;;		Unchanged: 0/0
 10975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10980 ;;Total ram usage:        0 bytes
 10981 ;; Hardware stack levels used: 1
 10982 ;; Hardware stack levels required when called: 4
 10983 ;; This function calls:
 10984 ;;		Nothing
 10985 ;; This function is called by:
 10986 ;;		_I2C_Poller
 10987 ;; This function uses a non-reentrant model
 10988 ;;
 10989                           
 10990                           	psect	text62
 10991  004BDC                     __ptext62:
 10992                           	callstack 0
 10993  004BDC                     _I2C_MasterWaitForEvent:
 10994                           	callstack 20
 10995  004BDC                     l435:
 10996                           
 10997                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
 10998  004BDC  A69E               	btfss	158,3,c	;volatile
 10999  004BDE  EFF3  F025         	goto	u3091
 11000  004BE2  EFF5  F025         	goto	u3090
 11001  004BE6                     u3091:
 11002  004BE6  EFEE  F025         	goto	l435
 11003  004BEA                     u3090:
 11004  004BEA  0012               	return		;funcret
 11005  004BEC                     __end_of_I2C_MasterWaitForEvent:
 11006                           	callstack 0
 11007                           
 11008 ;; *************** function _I2C_MasterFsm *****************
 11009 ;; Defined at:
 11010 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
 11011 ;; Parameters:    Size  Location     Type
 11012 ;;		None
 11013 ;; Auto vars:     Size  Location     Type
 11014 ;;		None
 11015 ;; Return value:  Size  Location     Type
 11016 ;;                  1    wreg      void 
 11017 ;; Registers used:
 11018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11019 ;; Tracked objects:
 11020 ;;		On entry : 0/0
 11021 ;;		On exit  : 0/0
 11022 ;;		Unchanged: 0/0
 11023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11026 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11027 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11028 ;;Total ram usage:        2 bytes
 11029 ;; Hardware stack levels used: 1
 11030 ;; Hardware stack levels required when called: 8
 11031 ;; This function calls:
 11032 ;;		_I2C_DO_ADDRESS_NACK
 11033 ;;		_I2C_DO_IDLE
 11034 ;;		_I2C_DO_RCEN
 11035 ;;		_I2C_DO_RESET
 11036 ;;		_I2C_DO_RX
 11037 ;;		_I2C_DO_RX_ACK
 11038 ;;		_I2C_DO_RX_NACK_RESTART
 11039 ;;		_I2C_DO_RX_NACK_STOP
 11040 ;;		_I2C_DO_SEND_ADR_READ
 11041 ;;		_I2C_DO_SEND_ADR_WRITE
 11042 ;;		_I2C_DO_SEND_RESTART
 11043 ;;		_I2C_DO_SEND_RESTART_READ
 11044 ;;		_I2C_DO_SEND_RESTART_WRITE
 11045 ;;		_I2C_DO_SEND_STOP
 11046 ;;		_I2C_DO_TX
 11047 ;;		_I2C_DO_TX_EMPTY
 11048 ;;		_I2C_MasterClearIrq
 11049 ;;		_I2C_MasterIsNack
 11050 ;; This function is called by:
 11051 ;;		_I2C_Poller
 11052 ;; This function uses a non-reentrant model
 11053 ;;
 11054                           
 11055                           	psect	text63
 11056  0042CE                     __ptext63:
 11057                           	callstack 0
 11058  0042CE                     _I2C_MasterFsm:
 11059                           	callstack 16
 11060  0042CE                     
 11061                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
 11062  0042CE  EC81  F026         	call	_I2C_MasterClearIrq	;wreg free
 11063  0042D2                     
 11064                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
 11065  0042D2  0101               	movlb	1	; () banked
 11066  0042D4  A123               	btfss	(_I2C_Status+35)& (0+255),0,b
 11067  0042D6  EF6F  F021         	goto	u3101
 11068  0042DA  EF71  F021         	goto	u3100
 11069  0042DE                     u3101:
 11070  0042DE  EF7E  F021         	goto	l4338
 11071  0042E2                     u3100:
 11072  0042E2                     
 11073                           ; BSR set to: 1
 11074  0042E2  ECE4  F025         	call	_I2C_MasterIsNack	;wreg free
 11075  0042E6  0900               	iorlw	0
 11076  0042E8  B4D8               	btfsc	status,2,c
 11077  0042EA  EF79  F021         	goto	u3111
 11078  0042EE  EF7B  F021         	goto	u3110
 11079  0042F2                     u3111:
 11080  0042F2  EF7E  F021         	goto	l4338
 11081  0042F6                     u3110:
 11082  0042F6                     
 11083                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
 11084  0042F6  0E0F               	movlw	15
 11085  0042F8  0101               	movlb	1	; () banked
 11086  0042FA  6F21               	movwf	(_I2C_Status+33)& (0+255),b
 11087  0042FC                     l4338:
 11088                           
 11089                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = fsmStateTable[I2C_Status.
      +                          state]();
 11090  0042FC  0101               	movlb	1	; () banked
 11091  0042FE  5121               	movf	(_I2C_Status+33)& (0+255),w,b
 11092  004300  0D02               	mullw	2
 11093  004302  0E01               	movlw	low _fsmStateTable
 11094  004304  24F3               	addwf	243,w,c
 11095  004306  6EF6               	movwf	tblptrl,c
 11096  004308  0E10               	movlw	high _fsmStateTable
 11097  00430A  20F4               	addwfc	244,w,c
 11098  00430C  6EF7               	movwf	tblptrh,c
 11099  00430E                     	if	1	;There are 3 active tblptr bytes
 11100  00430E  6AF8               	clrf	tblptru,c
 11101  004310  0E00               	movlw	low (__mediumconst shr (0+16))
 11102  004312  22F8               	addwfc	tblptru,f,c
 11103  004314                     	endif
 11104  004314  0009               	tblrd		*+
 11105  004316  CFF5 F012          	movff	tablat,??_I2C_MasterFsm
 11106  00431A  0009               	tblrd		*+
 11107  00431C  CFF5 F013          	movff	tablat,??_I2C_MasterFsm+1
 11108  004320  D802               	call	u3128
 11109  004322  EF9C  F021         	goto	u3129
 11110  004326                     u3128:
 11111  004326  0005               	push	
 11112  004328  6EFA               	movwf	pclath,c
 11113  00432A  5012               	movf	??_I2C_MasterFsm^0,w,c
 11114  00432C  6EFD               	movwf	tosl,c
 11115  00432E  5013               	movf	(??_I2C_MasterFsm+1)^0,w,c
 11116  004330  6EFE               	movwf	tosh,c
 11117  004332  6AFF               	clrf	tosu,c
 11118  004334  50FA               	movf	pclath,w,c
 11119  004336  0012               	return		;indir
 11120  004338                     u3129:
 11121  004338  0101               	movlb	1	; () banked
 11122  00433A  6F21               	movwf	(_I2C_Status+33)& (0+255),b
 11123  00433C                     
 11124                           ; BSR set to: 1
 11125  00433C  0012               	return		;funcret
 11126  00433E                     __end_of_I2C_MasterFsm:
 11127                           	callstack 0
 11128                           
 11129 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
 11130 ;; Defined at:
 11131 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
 11132 ;; Parameters:    Size  Location     Type
 11133 ;;		None
 11134 ;; Auto vars:     Size  Location     Type
 11135 ;;		None
 11136 ;; Return value:  Size  Location     Type
 11137 ;;                  1    wreg      enum E3103
 11138 ;; Registers used:
 11139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11140 ;; Tracked objects:
 11141 ;;		On entry : 0/0
 11142 ;;		On exit  : 0/0
 11143 ;;		Unchanged: 0/0
 11144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11147 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11148 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11149 ;;Total ram usage:        2 bytes
 11150 ;; Hardware stack levels used: 1
 11151 ;; Hardware stack levels required when called: 7
 11152 ;; This function calls:
 11153 ;;		Absolute function
 11154 ;;		_I2C_CallbackReturnReset
 11155 ;;		_I2C_CallbackReturnStop
 11156 ;;		_I2C_DO_SEND_RESTART
 11157 ;;		_I2C_DO_SEND_STOP
 11158 ;;		_rd1RegCompleteHandler
 11159 ;;		_rd2RegCompleteHandler
 11160 ;;		_rdBlkRegCompleteHandler
 11161 ;;		_wr1RegCompleteHandler
 11162 ;;		_wr2RegCompleteHandler
 11163 ;; This function is called by:
 11164 ;;		_I2C_MasterFsm
 11165 ;; This function uses a non-reentrant model
 11166 ;;
 11167                           
 11168                           	psect	text64
 11169  00433E                     __ptext64:
 11170                           	callstack 0
 11171  00433E                     _I2C_DO_ADDRESS_NACK:
 11172                           	callstack 16
 11173  00433E                     
 11174                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
 11175  00433E  0101               	movlb	1	; () banked
 11176  004340  9123               	bcf	(_I2C_Status+35)& (0+255),0,b
 11177  004342                     
 11178                           ; BSR set to: 1
 11179                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
 11180  004342  0E02               	movlw	2
 11181  004344  6F22               	movwf	(_I2C_Status+34)& (0+255),b
 11182                           
 11183                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
 11184  004346  EFAD  F021         	goto	l4302
 11185  00434A                     l4292:
 11186                           
 11187                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
 11188  00434A  EC4F  F026         	call	_I2C_DO_SEND_RESTART	;wreg free
 11189  00434E  EFD1  F021         	goto	l357
 11190  004352                     l4296:
 11191                           
 11192                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
 11193  004352  EC4B  F026         	call	_I2C_DO_SEND_STOP	;wreg free
 11194  004356  EFD1  F021         	goto	l357
 11195  00435A                     l4302:
 11196                           
 11197                           ; BSR set to: 1
 11198  00435A  C110  F00E         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
 11199  00435E  C111  F00F         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
 11200  004362  D802               	call	u3058
 11201  004364  EFBD  F021         	goto	u3059
 11202  004368                     u3058:
 11203  004368  0005               	push	
 11204  00436A  6EFA               	movwf	pclath,c
 11205  00436C  5104               	movf	(_I2C_Status+4)& (0+255),w,b
 11206  00436E  6EFD               	movwf	tosl,c
 11207  004370  5105               	movf	(_I2C_Status+5)& (0+255),w,b
 11208  004372  6EFE               	movwf	tosh,c
 11209  004374  6AFF               	clrf	tosu,c
 11210  004376  50FA               	movf	pclath,w,c
 11211  004378  0012               	return		;indir
 11212  00437A                     u3059:
 11213  00437A  6E10               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
 11214  00437C  6A11               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
 11215                           
 11216                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11217                           ; Switch size 1, requested type "simple"
 11218                           ; Number of cases is 1, Range of values is 0 to 0
 11219                           ; switch strategies available:
 11220                           ; Name         Instructions Cycles
 11221                           ; simple_byte            4     3 (average)
 11222                           ;	Chosen strategy is simple_byte
 11223  00437E  5011               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
 11224  004380  0A00               	xorlw	0	; case 0
 11225  004382  B4D8               	btfsc	status,2,c
 11226  004384  EFC6  F021         	goto	l7784
 11227  004388  EFA9  F021         	goto	l4296
 11228  00438C                     l7784:
 11229                           
 11230                           ; Switch size 1, requested type "simple"
 11231                           ; Number of cases is 2, Range of values is 2 to 3
 11232                           ; switch strategies available:
 11233                           ; Name         Instructions Cycles
 11234                           ; simple_byte            7     4 (average)
 11235                           ;	Chosen strategy is simple_byte
 11236  00438C  5010               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
 11237  00438E  0A02               	xorlw	2	; case 2
 11238  004390  B4D8               	btfsc	status,2,c
 11239  004392  EFA5  F021         	goto	l4292
 11240  004396  0A01               	xorlw	1	; case 3
 11241  004398  B4D8               	btfsc	status,2,c
 11242  00439A  EFA5  F021         	goto	l4292
 11243  00439E  EFA9  F021         	goto	l4296
 11244  0043A2                     l357:
 11245  0043A2  0012               	return		;funcret
 11246  0043A4                     __end_of_I2C_DO_ADDRESS_NACK:
 11247                           	callstack 0
 11248                           
 11249 ;; *************** function _I2C_DO_RESET *****************
 11250 ;; Defined at:
 11251 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
 11252 ;; Parameters:    Size  Location     Type
 11253 ;;		None
 11254 ;; Auto vars:     Size  Location     Type
 11255 ;;		None
 11256 ;; Return value:  Size  Location     Type
 11257 ;;                  1    wreg      enum E3103
 11258 ;; Registers used:
 11259 ;;		wreg, status,2
 11260 ;; Tracked objects:
 11261 ;;		On entry : 0/0
 11262 ;;		On exit  : 0/0
 11263 ;;		Unchanged: 0/0
 11264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11269 ;;Total ram usage:        0 bytes
 11270 ;; Hardware stack levels used: 1
 11271 ;; Hardware stack levels required when called: 4
 11272 ;; This function calls:
 11273 ;;		Nothing
 11274 ;; This function is called by:
 11275 ;;		_I2C_MasterFsm
 11276 ;; This function uses a non-reentrant model
 11277 ;;
 11278                           
 11279                           	psect	text65
 11280  004C0C                     __ptext65:
 11281                           	callstack 0
 11282  004C0C                     _I2C_DO_RESET:
 11283                           	callstack 19
 11284  004C0C                     
 11285                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
 11286  004C0C  0101               	movlb	1	; () banked
 11287  004C0E  9323               	bcf	(_I2C_Status+35)& (0+255),1,b
 11288  004C10                     
 11289                           ; BSR set to: 1
 11290                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
 11291  004C10  0E00               	movlw	0
 11292  004C12  6F22               	movwf	(_I2C_Status+34)& (0+255),b
 11293  004C14                     
 11294                           ; BSR set to: 1
 11295                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
 11296  004C14  0E0E               	movlw	14
 11297  004C16                     
 11298                           ; BSR set to: 1
 11299  004C16  0012               	return		;funcret
 11300  004C18                     __end_of_I2C_DO_RESET:
 11301                           	callstack 0
 11302                           
 11303 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
 11304 ;; Defined at:
 11305 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
 11306 ;; Parameters:    Size  Location     Type
 11307 ;;		None
 11308 ;; Auto vars:     Size  Location     Type
 11309 ;;		None
 11310 ;; Return value:  Size  Location     Type
 11311 ;;                  1    wreg      enum E3103
 11312 ;; Registers used:
 11313 ;;		wreg, cstack
 11314 ;; Tracked objects:
 11315 ;;		On entry : 0/0
 11316 ;;		On exit  : 0/0
 11317 ;;		Unchanged: 0/0
 11318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11323 ;;Total ram usage:        0 bytes
 11324 ;; Hardware stack levels used: 1
 11325 ;; Hardware stack levels required when called: 5
 11326 ;; This function calls:
 11327 ;;		_I2C_MasterSendNack
 11328 ;; This function is called by:
 11329 ;;		_I2C_DO_RX
 11330 ;;		_I2C_MasterFsm
 11331 ;; This function uses a non-reentrant model
 11332 ;;
 11333                           
 11334                           	psect	text66
 11335  004C7E                     __ptext66:
 11336                           	callstack 0
 11337  004C7E                     _I2C_DO_RX_NACK_RESTART:
 11338                           	callstack 18
 11339  004C7E                     
 11340                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
 11341  004C7E  EC62  F026         	call	_I2C_MasterSendNack	;wreg free
 11342  004C82                     
 11343                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
 11344  004C82  0E09               	movlw	9
 11345  004C84  0012               	return		;funcret
 11346  004C86                     __end_of_I2C_DO_RX_NACK_RESTART:
 11347                           	callstack 0
 11348                           
 11349 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
 11350 ;; Defined at:
 11351 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
 11352 ;; Parameters:    Size  Location     Type
 11353 ;;		None
 11354 ;; Auto vars:     Size  Location     Type
 11355 ;;		None
 11356 ;; Return value:  Size  Location     Type
 11357 ;;                  1    wreg      enum E3103
 11358 ;; Registers used:
 11359 ;;		wreg, cstack
 11360 ;; Tracked objects:
 11361 ;;		On entry : 0/0
 11362 ;;		On exit  : 0/0
 11363 ;;		Unchanged: 0/0
 11364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11369 ;;Total ram usage:        0 bytes
 11370 ;; Hardware stack levels used: 1
 11371 ;; Hardware stack levels required when called: 5
 11372 ;; This function calls:
 11373 ;;		_I2C_MasterSendNack
 11374 ;; This function is called by:
 11375 ;;		_I2C_DO_RX
 11376 ;;		_I2C_MasterFsm
 11377 ;; This function uses a non-reentrant model
 11378 ;;
 11379                           
 11380                           	psect	text67
 11381  004C86                     __ptext67:
 11382                           	callstack 0
 11383  004C86                     _I2C_DO_RX_NACK_STOP:
 11384                           	callstack 18
 11385  004C86                     
 11386                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
 11387  004C86  EC62  F026         	call	_I2C_MasterSendNack	;wreg free
 11388  004C8A                     
 11389                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
 11390  004C8A  0E0A               	movlw	10
 11391  004C8C  0012               	return		;funcret
 11392  004C8E                     __end_of_I2C_DO_RX_NACK_STOP:
 11393                           	callstack 0
 11394                           
 11395 ;; *************** function _I2C_DO_RX_ACK *****************
 11396 ;; Defined at:
 11397 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
 11398 ;; Parameters:    Size  Location     Type
 11399 ;;		None
 11400 ;; Auto vars:     Size  Location     Type
 11401 ;;		None
 11402 ;; Return value:  Size  Location     Type
 11403 ;;                  1    wreg      enum E3103
 11404 ;; Registers used:
 11405 ;;		wreg, cstack
 11406 ;; Tracked objects:
 11407 ;;		On entry : 0/0
 11408 ;;		On exit  : 0/0
 11409 ;;		Unchanged: 0/0
 11410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11415 ;;Total ram usage:        0 bytes
 11416 ;; Hardware stack levels used: 1
 11417 ;; Hardware stack levels required when called: 5
 11418 ;; This function calls:
 11419 ;;		_I2C_MasterSendAck
 11420 ;; This function is called by:
 11421 ;;		_I2C_MasterFsm
 11422 ;; This function uses a non-reentrant model
 11423 ;;
 11424                           
 11425                           	psect	text68
 11426  004C8E                     __ptext68:
 11427                           	callstack 0
 11428  004C8E                     _I2C_DO_RX_ACK:
 11429                           	callstack 18
 11430  004C8E                     
 11431                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
 11432  004C8E  EC5F  F026         	call	_I2C_MasterSendAck	;wreg free
 11433  004C92                     
 11434                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
 11435  004C92  0E05               	movlw	5
 11436  004C94  0012               	return		;funcret
 11437  004C96                     __end_of_I2C_DO_RX_ACK:
 11438                           	callstack 0
 11439                           
 11440 ;; *************** function _I2C_DO_SEND_STOP *****************
 11441 ;; Defined at:
 11442 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
 11443 ;; Parameters:    Size  Location     Type
 11444 ;;		None
 11445 ;; Auto vars:     Size  Location     Type
 11446 ;;		None
 11447 ;; Return value:  Size  Location     Type
 11448 ;;                  1    wreg      enum E3103
 11449 ;; Registers used:
 11450 ;;		wreg, cstack
 11451 ;; Tracked objects:
 11452 ;;		On entry : 0/0
 11453 ;;		On exit  : 0/0
 11454 ;;		Unchanged: 0/0
 11455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11460 ;;Total ram usage:        0 bytes
 11461 ;; Hardware stack levels used: 1
 11462 ;; Hardware stack levels required when called: 5
 11463 ;; This function calls:
 11464 ;;		_I2C_MasterStop
 11465 ;; This function is called by:
 11466 ;;		_I2C_DO_TX
 11467 ;;		_I2C_DO_TX_EMPTY
 11468 ;;		_I2C_DO_ADDRESS_NACK
 11469 ;;		_I2C_MasterFsm
 11470 ;; This function uses a non-reentrant model
 11471 ;;
 11472                           
 11473                           	psect	text69
 11474  004C96                     __ptext69:
 11475                           	callstack 0
 11476  004C96                     _I2C_DO_SEND_STOP:
 11477                           	callstack 17
 11478  004C96                     
 11479                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
 11480  004C96  EC77  F026         	call	_I2C_MasterStop	;wreg free
 11481  004C9A                     
 11482                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
 11483  004C9A  0E00               	movlw	0
 11484  004C9C  0012               	return		;funcret
 11485  004C9E                     __end_of_I2C_DO_SEND_STOP:
 11486                           	callstack 0
 11487                           
 11488 ;; *************** function _I2C_DO_SEND_RESTART *****************
 11489 ;; Defined at:
 11490 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
 11491 ;; Parameters:    Size  Location     Type
 11492 ;;		None
 11493 ;; Auto vars:     Size  Location     Type
 11494 ;;		None
 11495 ;; Return value:  Size  Location     Type
 11496 ;;                  1    wreg      enum E3103
 11497 ;; Registers used:
 11498 ;;		wreg, cstack
 11499 ;; Tracked objects:
 11500 ;;		On entry : 0/0
 11501 ;;		On exit  : 0/0
 11502 ;;		Unchanged: 0/0
 11503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11508 ;;Total ram usage:        0 bytes
 11509 ;; Hardware stack levels used: 1
 11510 ;; Hardware stack levels required when called: 5
 11511 ;; This function calls:
 11512 ;;		_I2C_MasterEnableRestart
 11513 ;; This function is called by:
 11514 ;;		_I2C_DO_TX_EMPTY
 11515 ;;		_I2C_DO_ADDRESS_NACK
 11516 ;;		_I2C_MasterFsm
 11517 ;; This function uses a non-reentrant model
 11518 ;;
 11519                           
 11520                           	psect	text70
 11521  004C9E                     __ptext70:
 11522                           	callstack 0
 11523  004C9E                     _I2C_DO_SEND_RESTART:
 11524                           	callstack 17
 11525  004C9E                     
 11526                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
 11527  004C9E  EC79  F026         	call	_I2C_MasterEnableRestart	;wreg free
 11528  004CA2                     
 11529                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
 11530  004CA2  0E01               	movlw	1
 11531  004CA4  0012               	return		;funcret
 11532  004CA6                     __end_of_I2C_DO_SEND_RESTART:
 11533                           	callstack 0
 11534                           
 11535 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 11536 ;; Defined at:
 11537 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
 11538 ;; Parameters:    Size  Location     Type
 11539 ;;		None
 11540 ;; Auto vars:     Size  Location     Type
 11541 ;;		None
 11542 ;; Return value:  Size  Location     Type
 11543 ;;                  1    wreg      enum E3103
 11544 ;; Registers used:
 11545 ;;		wreg, cstack
 11546 ;; Tracked objects:
 11547 ;;		On entry : 0/0
 11548 ;;		On exit  : 0/0
 11549 ;;		Unchanged: 0/0
 11550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11555 ;;Total ram usage:        0 bytes
 11556 ;; Hardware stack levels used: 1
 11557 ;; Hardware stack levels required when called: 5
 11558 ;; This function calls:
 11559 ;;		_I2C_MasterEnableRestart
 11560 ;; This function is called by:
 11561 ;;		_I2C_DO_TX
 11562 ;;		_I2C_MasterFsm
 11563 ;; This function uses a non-reentrant model
 11564 ;;
 11565                           
 11566                           	psect	text71
 11567  004CA6                     __ptext71:
 11568                           	callstack 0
 11569  004CA6                     _I2C_DO_SEND_RESTART_WRITE:
 11570                           	callstack 17
 11571  004CA6                     
 11572                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
 11573  004CA6  EC79  F026         	call	_I2C_MasterEnableRestart	;wreg free
 11574  004CAA                     
 11575                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
 11576  004CAA  0E02               	movlw	2
 11577  004CAC  0012               	return		;funcret
 11578  004CAE                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 11579                           	callstack 0
 11580                           
 11581 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 11582 ;; Defined at:
 11583 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
 11584 ;; Parameters:    Size  Location     Type
 11585 ;;		None
 11586 ;; Auto vars:     Size  Location     Type
 11587 ;;		None
 11588 ;; Return value:  Size  Location     Type
 11589 ;;                  1    wreg      enum E3103
 11590 ;; Registers used:
 11591 ;;		wreg, cstack
 11592 ;; Tracked objects:
 11593 ;;		On entry : 0/0
 11594 ;;		On exit  : 0/0
 11595 ;;		Unchanged: 0/0
 11596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11601 ;;Total ram usage:        0 bytes
 11602 ;; Hardware stack levels used: 1
 11603 ;; Hardware stack levels required when called: 5
 11604 ;; This function calls:
 11605 ;;		_I2C_MasterEnableRestart
 11606 ;; This function is called by:
 11607 ;;		_I2C_DO_TX
 11608 ;;		_I2C_MasterFsm
 11609 ;; This function uses a non-reentrant model
 11610 ;;
 11611                           
 11612                           	psect	text72
 11613  004CAE                     __ptext72:
 11614                           	callstack 0
 11615  004CAE                     _I2C_DO_SEND_RESTART_READ:
 11616                           	callstack 17
 11617  004CAE                     
 11618                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
 11619  004CAE  EC79  F026         	call	_I2C_MasterEnableRestart	;wreg free
 11620  004CB2                     
 11621                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
 11622  004CB2  0E01               	movlw	1
 11623  004CB4  0012               	return		;funcret
 11624  004CB6                     __end_of_I2C_DO_SEND_RESTART_READ:
 11625                           	callstack 0
 11626                           
 11627 ;; *************** function _I2C_DO_RCEN *****************
 11628 ;; Defined at:
 11629 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
 11630 ;; Parameters:    Size  Location     Type
 11631 ;;		None
 11632 ;; Auto vars:     Size  Location     Type
 11633 ;;		None
 11634 ;; Return value:  Size  Location     Type
 11635 ;;                  1    wreg      enum E3103
 11636 ;; Registers used:
 11637 ;;		wreg, cstack
 11638 ;; Tracked objects:
 11639 ;;		On entry : 0/0
 11640 ;;		On exit  : 0/0
 11641 ;;		Unchanged: 0/0
 11642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11647 ;;Total ram usage:        0 bytes
 11648 ;; Hardware stack levels used: 1
 11649 ;; Hardware stack levels required when called: 5
 11650 ;; This function calls:
 11651 ;;		_I2C_MasterStartRx
 11652 ;; This function is called by:
 11653 ;;		_I2C_MasterFsm
 11654 ;; This function uses a non-reentrant model
 11655 ;;
 11656                           
 11657                           	psect	text73
 11658  004C18                     __ptext73:
 11659                           	callstack 0
 11660  004C18                     _I2C_DO_RCEN:
 11661                           	callstack 18
 11662  004C18                     
 11663                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
 11664  004C18  0101               	movlb	1	; () banked
 11665  004C1A  9123               	bcf	(_I2C_Status+35)& (0+255),0,b
 11666  004C1C                     
 11667                           ; BSR set to: 1
 11668                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
 11669  004C1C  EC71  F026         	call	_I2C_MasterStartRx	;wreg free
 11670  004C20                     
 11671                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
 11672  004C20  0E04               	movlw	4
 11673  004C22  0012               	return		;funcret
 11674  004C24                     __end_of_I2C_DO_RCEN:
 11675                           	callstack 0
 11676                           
 11677 ;; *************** function _I2C_DO_RX *****************
 11678 ;; Defined at:
 11679 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
 11680 ;; Parameters:    Size  Location     Type
 11681 ;;		None
 11682 ;; Auto vars:     Size  Location     Type
 11683 ;;		None
 11684 ;; Return value:  Size  Location     Type
 11685 ;;                  1    wreg      enum E3103
 11686 ;; Registers used:
 11687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11688 ;; Tracked objects:
 11689 ;;		On entry : 0/0
 11690 ;;		On exit  : 0/0
 11691 ;;		Unchanged: 0/0
 11692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11695 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11696 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11697 ;;Total ram usage:        2 bytes
 11698 ;; Hardware stack levels used: 1
 11699 ;; Hardware stack levels required when called: 7
 11700 ;; This function calls:
 11701 ;;		Absolute function
 11702 ;;		_I2C_CallbackReturnReset
 11703 ;;		_I2C_CallbackReturnStop
 11704 ;;		_I2C_DO_RX_NACK_RESTART
 11705 ;;		_I2C_DO_RX_NACK_STOP
 11706 ;;		_I2C_MasterGetRxData
 11707 ;;		_I2C_MasterSendAck
 11708 ;;		_rd1RegCompleteHandler
 11709 ;;		_rd2RegCompleteHandler
 11710 ;;		_rdBlkRegCompleteHandler
 11711 ;;		_wr1RegCompleteHandler
 11712 ;;		_wr2RegCompleteHandler
 11713 ;; This function is called by:
 11714 ;;		_I2C_MasterFsm
 11715 ;; This function uses a non-reentrant model
 11716 ;;
 11717                           
 11718                           	psect	text74
 11719  003E1A                     __ptext74:
 11720                           	callstack 0
 11721  003E1A                     _I2C_DO_RX:
 11722                           	callstack 16
 11723  003E1A                     
 11724                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 11725  003E1A  EC6F  F026         	call	_I2C_MasterGetRxData	;wreg free
 11726  003E1E  C11D  FFD9         	movff	_I2C_Status+29,fsr2l
 11727  003E22  C11E  FFDA         	movff	_I2C_Status+30,fsr2h
 11728  003E26  6EDF               	movwf	indf2,c
 11729  003E28  0101               	movlb	1	; () banked
 11730  003E2A  4B1D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 11731  003E2C  2B1E               	incf	(_I2C_Status+30)& (0+255),f,b
 11732  003E2E                     
 11733                           ; BSR set to: 1
 11734                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
 11735  003E2E  071F               	decf	(_I2C_Status+31)& (0+255),f,b
 11736  003E30  A0D8               	btfss	status,0,c
 11737  003E32  0720               	decf	(_I2C_Status+32)& (0+255),f,b
 11738  003E34  511F               	movf	(_I2C_Status+31)& (0+255),w,b
 11739  003E36  1120               	iorwf	(_I2C_Status+32)& (0+255),w,b
 11740  003E38  B4D8               	btfsc	status,2,c
 11741  003E3A  EF21  F01F         	goto	u3021
 11742  003E3E  EF23  F01F         	goto	u3020
 11743  003E42                     u3021:
 11744  003E42  EF28  F01F         	goto	l294
 11745  003E46                     u3020:
 11746  003E46                     
 11747                           ; BSR set to: 1
 11748                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
 11749  003E46  EC5F  F026         	call	_I2C_MasterSendAck	;wreg free
 11750  003E4A                     
 11751                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
 11752  003E4A  0E05               	movlw	5
 11753  003E4C  EF5F  F01F         	goto	l295
 11754  003E50                     l294:
 11755                           
 11756                           ; BSR set to: 1
 11757                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
 11758  003E50  8723               	bsf	(_I2C_Status+35)& (0+255),3,b
 11759                           
 11760                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 11761  003E52  EF33  F01F         	goto	l4232
 11762  003E56                     l4222:
 11763                           
 11764                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
 11765  003E56  EC3F  F026         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
 11766  003E5A  EF5F  F01F         	goto	l295
 11767  003E5E                     l4226:
 11768                           
 11769                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
 11770  003E5E  EC43  F026         	call	_I2C_DO_RX_NACK_STOP	;wreg free
 11771  003E62  EF5F  F01F         	goto	l295
 11772  003E66                     l4232:
 11773                           
 11774                           ; BSR set to: 1
 11775  003E66  C10C  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 11776  003E6A  C10D  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 11777  003E6E  D802               	call	u3038
 11778  003E70  EF43  F01F         	goto	u3039
 11779  003E74                     u3038:
 11780  003E74  0005               	push	
 11781  003E76  6EFA               	movwf	pclath,c
 11782  003E78  5100               	movf	_I2C_Status& (0+255),w,b
 11783  003E7A  6EFD               	movwf	tosl,c
 11784  003E7C  5101               	movf	(_I2C_Status+1)& (0+255),w,b
 11785  003E7E  6EFE               	movwf	tosh,c
 11786  003E80  6AFF               	clrf	tosu,c
 11787  003E82  50FA               	movf	pclath,w,c
 11788  003E84  0012               	return		;indir
 11789  003E86                     u3039:
 11790  003E86  6E10               	movwf	??_I2C_DO_RX^0,c
 11791  003E88  6A11               	clrf	(??_I2C_DO_RX+1)^0,c
 11792                           
 11793                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11794                           ; Switch size 1, requested type "simple"
 11795                           ; Number of cases is 1, Range of values is 0 to 0
 11796                           ; switch strategies available:
 11797                           ; Name         Instructions Cycles
 11798                           ; simple_byte            4     3 (average)
 11799                           ;	Chosen strategy is simple_byte
 11800  003E8A  5011               	movf	(??_I2C_DO_RX+1)^0,w,c
 11801  003E8C  0A00               	xorlw	0	; case 0
 11802  003E8E  B4D8               	btfsc	status,2,c
 11803  003E90  EF4C  F01F         	goto	l7786
 11804  003E94  EF2F  F01F         	goto	l4226
 11805  003E98                     l7786:
 11806                           
 11807                           ; Switch size 1, requested type "simple"
 11808                           ; Number of cases is 4, Range of values is 1 to 4
 11809                           ; switch strategies available:
 11810                           ; Name         Instructions Cycles
 11811                           ; simple_byte           13     7 (average)
 11812                           ;	Chosen strategy is simple_byte
 11813  003E98  5010               	movf	??_I2C_DO_RX^0,w,c
 11814  003E9A  0A01               	xorlw	1	; case 1
 11815  003E9C  B4D8               	btfsc	status,2,c
 11816  003E9E  EF2F  F01F         	goto	l4226
 11817  003EA2  0A03               	xorlw	3	; case 2
 11818  003EA4  B4D8               	btfsc	status,2,c
 11819  003EA6  EF2B  F01F         	goto	l4222
 11820  003EAA  0A01               	xorlw	1	; case 3
 11821  003EAC  B4D8               	btfsc	status,2,c
 11822  003EAE  EF2B  F01F         	goto	l4222
 11823  003EB2  0A07               	xorlw	7	; case 4
 11824  003EB4  B4D8               	btfsc	status,2,c
 11825  003EB6  EF2F  F01F         	goto	l4226
 11826  003EBA  EF2F  F01F         	goto	l4226
 11827  003EBE                     l295:
 11828  003EBE  0012               	return		;funcret
 11829  003EC0                     __end_of_I2C_DO_RX:
 11830                           	callstack 0
 11831                           
 11832 ;; *************** function _I2C_DO_TX *****************
 11833 ;; Defined at:
 11834 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
 11835 ;; Parameters:    Size  Location     Type
 11836 ;;		None
 11837 ;; Auto vars:     Size  Location     Type
 11838 ;;		None
 11839 ;; Return value:  Size  Location     Type
 11840 ;;                  1    wreg      enum E3103
 11841 ;; Registers used:
 11842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11843 ;; Tracked objects:
 11844 ;;		On entry : 0/0
 11845 ;;		On exit  : 0/0
 11846 ;;		Unchanged: 0/0
 11847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11850 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11851 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11852 ;;Total ram usage:        2 bytes
 11853 ;; Hardware stack levels used: 1
 11854 ;; Hardware stack levels required when called: 7
 11855 ;; This function calls:
 11856 ;;		Absolute function
 11857 ;;		_I2C_CallbackReturnReset
 11858 ;;		_I2C_CallbackReturnStop
 11859 ;;		_I2C_DO_SEND_RESTART_READ
 11860 ;;		_I2C_DO_SEND_RESTART_WRITE
 11861 ;;		_I2C_DO_SEND_STOP
 11862 ;;		_I2C_MasterIsNack
 11863 ;;		_I2C_MasterSendTxData
 11864 ;;		_rd1RegCompleteHandler
 11865 ;;		_rd2RegCompleteHandler
 11866 ;;		_rdBlkRegCompleteHandler
 11867 ;;		_wr1RegCompleteHandler
 11868 ;;		_wr2RegCompleteHandler
 11869 ;; This function is called by:
 11870 ;;		_I2C_MasterFsm
 11871 ;; This function uses a non-reentrant model
 11872 ;;
 11873                           
 11874                           	psect	text75
 11875  003A98                     __ptext75:
 11876                           	callstack 0
 11877  003A98                     _I2C_DO_TX:
 11878                           	callstack 16
 11879  003A98                     
 11880                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
 11881  003A98  ECE4  F025         	call	_I2C_MasterIsNack	;wreg free
 11882  003A9C  0900               	iorlw	0
 11883  003A9E  B4D8               	btfsc	status,2,c
 11884  003AA0  EF54  F01D         	goto	u2991
 11885  003AA4  EF56  F01D         	goto	u2990
 11886  003AA8                     u2991:
 11887  003AA8  EF91  F01D         	goto	l278
 11888  003AAC                     u2990:
 11889  003AAC  EF64  F01D         	goto	l4192
 11890  003AB0                     l4178:
 11891                           
 11892                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 11893  003AB0  EC57  F026         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
 11894  003AB4  EFAD  F01D         	goto	l281
 11895  003AB8                     l4182:
 11896                           
 11897                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 11898  003AB8  EC53  F026         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
 11899  003ABC  EFAD  F01D         	goto	l281
 11900  003AC0                     l4186:
 11901                           
 11902                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
 11903  003AC0  EC4B  F026         	call	_I2C_DO_SEND_STOP	;wreg free
 11904  003AC4  EFAD  F01D         	goto	l281
 11905  003AC8                     l4192:
 11906  003AC8  C112  F00E         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
 11907  003ACC  C113  F00F         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
 11908  003AD0  D802               	call	u3008
 11909  003AD2  EF75  F01D         	goto	u3009
 11910  003AD6                     u3008:
 11911  003AD6  0005               	push	
 11912  003AD8  6EFA               	movwf	pclath,c
 11913  003ADA  0101               	movlb	1	; () banked
 11914  003ADC  5106               	movf	(_I2C_Status+6)& (0+255),w,b
 11915  003ADE  6EFD               	movwf	tosl,c
 11916  003AE0  5107               	movf	(_I2C_Status+7)& (0+255),w,b
 11917  003AE2  6EFE               	movwf	tosh,c
 11918  003AE4  6AFF               	clrf	tosu,c
 11919  003AE6  50FA               	movf	pclath,w,c
 11920  003AE8  0012               	return		;indir
 11921  003AEA                     u3009:
 11922  003AEA  6E10               	movwf	??_I2C_DO_TX^0,c
 11923  003AEC  6A11               	clrf	(??_I2C_DO_TX+1)^0,c
 11924                           
 11925                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11926                           ; Switch size 1, requested type "simple"
 11927                           ; Number of cases is 1, Range of values is 0 to 0
 11928                           ; switch strategies available:
 11929                           ; Name         Instructions Cycles
 11930                           ; simple_byte            4     3 (average)
 11931                           ;	Chosen strategy is simple_byte
 11932  003AEE  5011               	movf	(??_I2C_DO_TX+1)^0,w,c
 11933  003AF0  0A00               	xorlw	0	; case 0
 11934  003AF2  B4D8               	btfsc	status,2,c
 11935  003AF4  EF7E  F01D         	goto	l7788
 11936  003AF8  EF60  F01D         	goto	l4186
 11937  003AFC                     l7788:
 11938                           
 11939                           ; Switch size 1, requested type "simple"
 11940                           ; Number of cases is 4, Range of values is 1 to 4
 11941                           ; switch strategies available:
 11942                           ; Name         Instructions Cycles
 11943                           ; simple_byte           13     7 (average)
 11944                           ;	Chosen strategy is simple_byte
 11945  003AFC  5010               	movf	??_I2C_DO_TX^0,w,c
 11946  003AFE  0A01               	xorlw	1	; case 1
 11947  003B00  B4D8               	btfsc	status,2,c
 11948  003B02  EF60  F01D         	goto	l4186
 11949  003B06  0A03               	xorlw	3	; case 2
 11950  003B08  B4D8               	btfsc	status,2,c
 11951  003B0A  EF58  F01D         	goto	l4178
 11952  003B0E  0A01               	xorlw	1	; case 3
 11953  003B10  B4D8               	btfsc	status,2,c
 11954  003B12  EF5C  F01D         	goto	l4182
 11955  003B16  0A07               	xorlw	7	; case 4
 11956  003B18  B4D8               	btfsc	status,2,c
 11957  003B1A  EF60  F01D         	goto	l4186
 11958  003B1E  EF60  F01D         	goto	l4186
 11959  003B22                     l278:
 11960                           
 11961                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
 11962  003B22  0101               	movlb	1	; () banked
 11963  003B24  9123               	bcf	(_I2C_Status+35)& (0+255),0,b
 11964  003B26                     
 11965                           ; BSR set to: 1
 11966                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 11967  003B26  C11D  FFD9         	movff	_I2C_Status+29,fsr2l
 11968  003B2A  C11E  FFDA         	movff	_I2C_Status+30,fsr2h
 11969  003B2E  4B1D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 11970  003B30  2B1E               	incf	(_I2C_Status+30)& (0+255),f,b
 11971  003B32  50DF               	movf	indf2,w,c
 11972  003B34  EC5B  F026         	call	_I2C_MasterSendTxData
 11973  003B38                     
 11974                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 11975  003B38  0101               	movlb	1	; () banked
 11976  003B3A  071F               	decf	(_I2C_Status+31)& (0+255),f,b
 11977  003B3C  A0D8               	btfss	status,0,c
 11978  003B3E  0720               	decf	(_I2C_Status+32)& (0+255),f,b
 11979  003B40  511F               	movf	(_I2C_Status+31)& (0+255),w,b
 11980  003B42  1120               	iorwf	(_I2C_Status+32)& (0+255),w,b
 11981  003B44  A4D8               	btfss	status,2,c
 11982  003B46  EFA7  F01D         	goto	u3011
 11983  003B4A  EFA9  F01D         	goto	u3010
 11984  003B4E                     u3011:
 11985  003B4E  EFAC  F01D         	goto	l4200
 11986  003B52                     u3010:
 11987  003B52                     
 11988                           ; BSR set to: 1
 11989  003B52  0E06               	movlw	6
 11990  003B54  EFAD  F01D         	goto	l281
 11991  003B58                     l4200:
 11992                           
 11993                           ; BSR set to: 1
 11994  003B58  0E03               	movlw	3
 11995  003B5A                     l281:
 11996  003B5A  0012               	return		;funcret
 11997  003B5C                     __end_of_I2C_DO_TX:
 11998                           	callstack 0
 11999                           
 12000 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 12001 ;; Defined at:
 12002 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
 12003 ;; Parameters:    Size  Location     Type
 12004 ;;		None
 12005 ;; Auto vars:     Size  Location     Type
 12006 ;;		None
 12007 ;; Return value:  Size  Location     Type
 12008 ;;                  1    wreg      enum E3103
 12009 ;; Registers used:
 12010 ;;		wreg, status,2, status,0, cstack
 12011 ;; Tracked objects:
 12012 ;;		On entry : 0/0
 12013 ;;		On exit  : 0/0
 12014 ;;		Unchanged: 0/0
 12015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12020 ;;Total ram usage:        0 bytes
 12021 ;; Hardware stack levels used: 1
 12022 ;; Hardware stack levels required when called: 5
 12023 ;; This function calls:
 12024 ;;		_I2C_MasterSendTxData
 12025 ;; This function is called by:
 12026 ;;		_I2C_MasterFsm
 12027 ;; This function uses a non-reentrant model
 12028 ;;
 12029                           
 12030                           	psect	text76
 12031  004BEC                     __ptext76:
 12032                           	callstack 0
 12033  004BEC                     _I2C_DO_SEND_ADR_WRITE:
 12034                           	callstack 18
 12035  004BEC                     
 12036                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
 12037  004BEC  0101               	movlb	1	; () banked
 12038  004BEE  8123               	bsf	(_I2C_Status+35)& (0+255),0,b
 12039  004BF0                     
 12040                           ; BSR set to: 1
 12041                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                          );
 12042  004BF0  511C               	movf	(_I2C_Status+28)& (0+255),w,b
 12043  004BF2  251C               	addwf	(_I2C_Status+28)& (0+255),w,b
 12044  004BF4  EC5B  F026         	call	_I2C_MasterSendTxData
 12045  004BF8                     
 12046                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
 12047  004BF8  0E03               	movlw	3
 12048  004BFA  0012               	return		;funcret
 12049  004BFC                     __end_of_I2C_DO_SEND_ADR_WRITE:
 12050                           	callstack 0
 12051                           
 12052 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 12053 ;; Defined at:
 12054 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
 12055 ;; Parameters:    Size  Location     Type
 12056 ;;		None
 12057 ;; Auto vars:     Size  Location     Type
 12058 ;;		None
 12059 ;; Return value:  Size  Location     Type
 12060 ;;                  1    wreg      enum E3103
 12061 ;; Registers used:
 12062 ;;		wreg, status,0, cstack
 12063 ;; Tracked objects:
 12064 ;;		On entry : 0/0
 12065 ;;		On exit  : 0/0
 12066 ;;		Unchanged: 0/0
 12067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12072 ;;Total ram usage:        0 bytes
 12073 ;; Hardware stack levels used: 1
 12074 ;; Hardware stack levels required when called: 5
 12075 ;; This function calls:
 12076 ;;		_I2C_MasterSendTxData
 12077 ;; This function is called by:
 12078 ;;		_I2C_MasterFsm
 12079 ;; This function uses a non-reentrant model
 12080 ;;
 12081                           
 12082                           	psect	text77
 12083  004BFC                     __ptext77:
 12084                           	callstack 0
 12085  004BFC                     _I2C_DO_SEND_ADR_READ:
 12086                           	callstack 18
 12087  004BFC                     
 12088                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
 12089  004BFC  0101               	movlb	1	; () banked
 12090  004BFE  8123               	bsf	(_I2C_Status+35)& (0+255),0,b
 12091  004C00                     
 12092                           ; BSR set to: 1
 12093                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                           | 1);
 12094  004C00  80D8               	bsf	status,0,c
 12095  004C02  351C               	rlcf	(_I2C_Status+28)& (0+255),w,b
 12096  004C04  EC5B  F026         	call	_I2C_MasterSendTxData
 12097  004C08                     
 12098                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
 12099  004C08  0E05               	movlw	5
 12100  004C0A  0012               	return		;funcret
 12101  004C0C                     __end_of_I2C_DO_SEND_ADR_READ:
 12102                           	callstack 0
 12103                           
 12104 ;; *************** function _I2C_DO_IDLE *****************
 12105 ;; Defined at:
 12106 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
 12107 ;; Parameters:    Size  Location     Type
 12108 ;;		None
 12109 ;; Auto vars:     Size  Location     Type
 12110 ;;		None
 12111 ;; Return value:  Size  Location     Type
 12112 ;;                  1    wreg      enum E3103
 12113 ;; Registers used:
 12114 ;;		wreg, status,2
 12115 ;; Tracked objects:
 12116 ;;		On entry : 0/0
 12117 ;;		On exit  : 0/0
 12118 ;;		Unchanged: 0/0
 12119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12124 ;;Total ram usage:        0 bytes
 12125 ;; Hardware stack levels used: 1
 12126 ;; Hardware stack levels required when called: 4
 12127 ;; This function calls:
 12128 ;;		Nothing
 12129 ;; This function is called by:
 12130 ;;		_I2C_MasterFsm
 12131 ;; This function uses a non-reentrant model
 12132 ;;
 12133                           
 12134                           	psect	text78
 12135  004C24                     __ptext78:
 12136                           	callstack 0
 12137  004C24                     _I2C_DO_IDLE:
 12138                           	callstack 19
 12139  004C24                     
 12140                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
 12141  004C24  0101               	movlb	1	; () banked
 12142  004C26  9323               	bcf	(_I2C_Status+35)& (0+255),1,b
 12143  004C28                     
 12144                           ; BSR set to: 1
 12145                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
 12146  004C28  0E00               	movlw	0
 12147  004C2A  6F22               	movwf	(_I2C_Status+34)& (0+255),b
 12148  004C2C                     
 12149                           ; BSR set to: 1
 12150                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
 12151  004C2C  0E0E               	movlw	14
 12152  004C2E                     
 12153                           ; BSR set to: 1
 12154  004C2E  0012               	return		;funcret
 12155  004C30                     __end_of_I2C_DO_IDLE:
 12156                           	callstack 0
 12157                           
 12158 ;; *************** function _I2C_DO_TX_EMPTY *****************
 12159 ;; Defined at:
 12160 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
 12161 ;; Parameters:    Size  Location     Type
 12162 ;;		None
 12163 ;; Auto vars:     Size  Location     Type
 12164 ;;		None
 12165 ;; Return value:  Size  Location     Type
 12166 ;;                  1    wreg      enum E3103
 12167 ;; Registers used:
 12168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12169 ;; Tracked objects:
 12170 ;;		On entry : 0/0
 12171 ;;		On exit  : 0/0
 12172 ;;		Unchanged: 0/0
 12173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12176 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12177 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12178 ;;Total ram usage:        2 bytes
 12179 ;; Hardware stack levels used: 1
 12180 ;; Hardware stack levels required when called: 7
 12181 ;; This function calls:
 12182 ;;		Absolute function
 12183 ;;		_I2C_CallbackReturnReset
 12184 ;;		_I2C_CallbackReturnStop
 12185 ;;		_I2C_DO_SEND_RESTART
 12186 ;;		_I2C_DO_SEND_STOP
 12187 ;;		_I2C_MasterSetIrq
 12188 ;;		_rd1RegCompleteHandler
 12189 ;;		_rd2RegCompleteHandler
 12190 ;;		_rdBlkRegCompleteHandler
 12191 ;;		_wr1RegCompleteHandler
 12192 ;;		_wr2RegCompleteHandler
 12193 ;; This function is called by:
 12194 ;;		_I2C_MasterFsm
 12195 ;; This function uses a non-reentrant model
 12196 ;;
 12197                           
 12198                           	psect	text79
 12199  0040EE                     __ptext79:
 12200                           	callstack 0
 12201  0040EE                     _I2C_DO_TX_EMPTY:
 12202                           	callstack 16
 12203  0040EE                     
 12204                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
 12205  0040EE  0101               	movlb	1	; () banked
 12206  0040F0  8723               	bsf	(_I2C_Status+35)& (0+255),3,b
 12207                           
 12208                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 12209  0040F2  EF88  F020         	goto	l4266
 12210  0040F6                     l4250:
 12211                           
 12212                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
 12213  0040F6  EC4F  F026         	call	_I2C_DO_SEND_RESTART	;wreg free
 12214  0040FA  EFB4  F020         	goto	l312
 12215  0040FE                     l4254:
 12216                           
 12217                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
 12218  0040FE  EC6D  F026         	call	_I2C_MasterSetIrq	;wreg free
 12219  004102                     
 12220                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
 12221  004102  0E03               	movlw	3
 12222  004104  EFB4  F020         	goto	l312
 12223  004108                     l4260:
 12224                           
 12225                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
 12226  004108  EC4B  F026         	call	_I2C_DO_SEND_STOP	;wreg free
 12227  00410C  EFB4  F020         	goto	l312
 12228  004110                     l4266:
 12229                           
 12230                           ; BSR set to: 1
 12231  004110  C10C  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 12232  004114  C10D  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 12233  004118  D802               	call	u3048
 12234  00411A  EF98  F020         	goto	u3049
 12235  00411E                     u3048:
 12236  00411E  0005               	push	
 12237  004120  6EFA               	movwf	pclath,c
 12238  004122  5100               	movf	_I2C_Status& (0+255),w,b
 12239  004124  6EFD               	movwf	tosl,c
 12240  004126  5101               	movf	(_I2C_Status+1)& (0+255),w,b
 12241  004128  6EFE               	movwf	tosh,c
 12242  00412A  6AFF               	clrf	tosu,c
 12243  00412C  50FA               	movf	pclath,w,c
 12244  00412E  0012               	return		;indir
 12245  004130                     u3049:
 12246  004130  6E10               	movwf	??_I2C_DO_TX_EMPTY^0,c
 12247  004132  6A11               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
 12248                           
 12249                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12250                           ; Switch size 1, requested type "simple"
 12251                           ; Number of cases is 1, Range of values is 0 to 0
 12252                           ; switch strategies available:
 12253                           ; Name         Instructions Cycles
 12254                           ; simple_byte            4     3 (average)
 12255                           ;	Chosen strategy is simple_byte
 12256  004134  5011               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
 12257  004136  0A00               	xorlw	0	; case 0
 12258  004138  B4D8               	btfsc	status,2,c
 12259  00413A  EFA1  F020         	goto	l7790
 12260  00413E  EF84  F020         	goto	l4260
 12261  004142                     l7790:
 12262                           
 12263                           ; Switch size 1, requested type "simple"
 12264                           ; Number of cases is 4, Range of values is 1 to 4
 12265                           ; switch strategies available:
 12266                           ; Name         Instructions Cycles
 12267                           ; simple_byte           13     7 (average)
 12268                           ;	Chosen strategy is simple_byte
 12269  004142  5010               	movf	??_I2C_DO_TX_EMPTY^0,w,c
 12270  004144  0A01               	xorlw	1	; case 1
 12271  004146  B4D8               	btfsc	status,2,c
 12272  004148  EF84  F020         	goto	l4260
 12273  00414C  0A03               	xorlw	3	; case 2
 12274  00414E  B4D8               	btfsc	status,2,c
 12275  004150  EF7B  F020         	goto	l4250
 12276  004154  0A01               	xorlw	1	; case 3
 12277  004156  B4D8               	btfsc	status,2,c
 12278  004158  EF7B  F020         	goto	l4250
 12279  00415C  0A07               	xorlw	7	; case 4
 12280  00415E  B4D8               	btfsc	status,2,c
 12281  004160  EF7F  F020         	goto	l4254
 12282  004164  EF84  F020         	goto	l4260
 12283  004168                     l312:
 12284  004168  0012               	return		;funcret
 12285  00416A                     __end_of_I2C_DO_TX_EMPTY:
 12286                           	callstack 0
 12287                           
 12288 ;; *************** function _I2C_MasterSetIrq *****************
 12289 ;; Defined at:
 12290 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
 12291 ;; Parameters:    Size  Location     Type
 12292 ;;		None
 12293 ;; Auto vars:     Size  Location     Type
 12294 ;;		None
 12295 ;; Return value:  Size  Location     Type
 12296 ;;                  1    wreg      void 
 12297 ;; Registers used:
 12298 ;;		None
 12299 ;; Tracked objects:
 12300 ;;		On entry : 0/0
 12301 ;;		On exit  : 0/0
 12302 ;;		Unchanged: 0/0
 12303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12308 ;;Total ram usage:        0 bytes
 12309 ;; Hardware stack levels used: 1
 12310 ;; Hardware stack levels required when called: 4
 12311 ;; This function calls:
 12312 ;;		Nothing
 12313 ;; This function is called by:
 12314 ;;		_I2C_DO_TX_EMPTY
 12315 ;; This function uses a non-reentrant model
 12316 ;;
 12317                           
 12318                           	psect	text80
 12319  004CDA                     __ptext80:
 12320                           	callstack 0
 12321  004CDA                     _I2C_MasterSetIrq:
 12322                           	callstack 18
 12323  004CDA                     
 12324                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
 12325  004CDA  869E               	bsf	158,3,c	;volatile
 12326  004CDC  0012               	return		;funcret
 12327  004CDE                     __end_of_I2C_MasterSetIrq:
 12328                           	callstack 0
 12329                           
 12330 ;; *************** function _I2C_MasterIsNack *****************
 12331 ;; Defined at:
 12332 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
 12333 ;; Parameters:    Size  Location     Type
 12334 ;;		None
 12335 ;; Auto vars:     Size  Location     Type
 12336 ;;		None
 12337 ;; Return value:  Size  Location     Type
 12338 ;;                  1    wreg      _Bool 
 12339 ;; Registers used:
 12340 ;;		wreg
 12341 ;; Tracked objects:
 12342 ;;		On entry : 0/0
 12343 ;;		On exit  : 0/0
 12344 ;;		Unchanged: 0/0
 12345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12350 ;;Total ram usage:        0 bytes
 12351 ;; Hardware stack levels used: 1
 12352 ;; Hardware stack levels required when called: 4
 12353 ;; This function calls:
 12354 ;;		Nothing
 12355 ;; This function is called by:
 12356 ;;		_I2C_MasterFsm
 12357 ;;		_I2C_DO_TX
 12358 ;; This function uses a non-reentrant model
 12359 ;;
 12360                           
 12361                           	psect	text81
 12362  004BC8                     __ptext81:
 12363                           	callstack 0
 12364  004BC8                     _I2C_MasterIsNack:
 12365                           	callstack 19
 12366  004BC8                     
 12367                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
 12368  004BC8  BCC5               	btfsc	197,6,c	;volatile
 12369  004BCA  EFE9  F025         	goto	u2981
 12370  004BCE  EFEC  F025         	goto	u2980
 12371  004BD2                     u2981:
 12372  004BD2  0E01               	movlw	1
 12373  004BD4  EFED  F025         	goto	u2986
 12374  004BD8                     u2980:
 12375  004BD8  0E00               	movlw	0
 12376  004BDA                     u2986:
 12377  004BDA  0012               	return		;funcret
 12378  004BDC                     __end_of_I2C_MasterIsNack:
 12379                           	callstack 0
 12380                           
 12381 ;; *************** function _I2C_MasterSendTxData *****************
 12382 ;; Defined at:
 12383 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
 12384 ;; Parameters:    Size  Location     Type
 12385 ;;  data            1    wreg     unsigned char 
 12386 ;; Auto vars:     Size  Location     Type
 12387 ;;  data            1    4[COMRAM] unsigned char 
 12388 ;; Return value:  Size  Location     Type
 12389 ;;                  1    wreg      void 
 12390 ;; Registers used:
 12391 ;;		wreg
 12392 ;; Tracked objects:
 12393 ;;		On entry : 0/0
 12394 ;;		On exit  : 0/0
 12395 ;;		Unchanged: 0/0
 12396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12398 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12400 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12401 ;;Total ram usage:        1 bytes
 12402 ;; Hardware stack levels used: 1
 12403 ;; Hardware stack levels required when called: 4
 12404 ;; This function calls:
 12405 ;;		Nothing
 12406 ;; This function is called by:
 12407 ;;		_I2C_DO_SEND_ADR_READ
 12408 ;;		_I2C_DO_SEND_ADR_WRITE
 12409 ;;		_I2C_DO_TX
 12410 ;; This function uses a non-reentrant model
 12411 ;;
 12412                           
 12413                           	psect	text82
 12414  004CB6                     __ptext82:
 12415                           	callstack 0
 12416  004CB6                     _I2C_MasterSendTxData:
 12417                           	callstack 18
 12418                           
 12419                           ;incstack = 0
 12420                           ;I2C_MasterSendTxData@data stored from wreg
 12421  004CB6  6E05               	movwf	I2C_MasterSendTxData@data^0,c
 12422  004CB8                     
 12423                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
 12424  004CB8  C005  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
 12425  004CBC  0012               	return		;funcret
 12426  004CBE                     __end_of_I2C_MasterSendTxData:
 12427                           	callstack 0
 12428                           
 12429 ;; *************** function _I2C_MasterSendAck *****************
 12430 ;; Defined at:
 12431 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
 12432 ;; Parameters:    Size  Location     Type
 12433 ;;		None
 12434 ;; Auto vars:     Size  Location     Type
 12435 ;;		None
 12436 ;; Return value:  Size  Location     Type
 12437 ;;                  1    wreg      void 
 12438 ;; Registers used:
 12439 ;;		None
 12440 ;; Tracked objects:
 12441 ;;		On entry : 0/0
 12442 ;;		On exit  : 0/0
 12443 ;;		Unchanged: 0/0
 12444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12449 ;;Total ram usage:        0 bytes
 12450 ;; Hardware stack levels used: 1
 12451 ;; Hardware stack levels required when called: 4
 12452 ;; This function calls:
 12453 ;;		Nothing
 12454 ;; This function is called by:
 12455 ;;		_I2C_DO_RX
 12456 ;;		_I2C_DO_RX_ACK
 12457 ;; This function uses a non-reentrant model
 12458 ;;
 12459                           
 12460                           	psect	text83
 12461  004CBE                     __ptext83:
 12462                           	callstack 0
 12463  004CBE                     _I2C_MasterSendAck:
 12464                           	callstack 18
 12465  004CBE                     
 12466                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
 12467  004CBE  9AC5               	bcf	197,5,c	;volatile
 12468                           
 12469                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
 12470  004CC0  88C5               	bsf	197,4,c	;volatile
 12471  004CC2  0012               	return		;funcret
 12472  004CC4                     __end_of_I2C_MasterSendAck:
 12473                           	callstack 0
 12474                           
 12475 ;; *************** function _I2C_MasterGetRxData *****************
 12476 ;; Defined at:
 12477 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
 12478 ;; Parameters:    Size  Location     Type
 12479 ;;		None
 12480 ;; Auto vars:     Size  Location     Type
 12481 ;;		None
 12482 ;; Return value:  Size  Location     Type
 12483 ;;                  1    wreg      unsigned char 
 12484 ;; Registers used:
 12485 ;;		wreg, status,2
 12486 ;; Tracked objects:
 12487 ;;		On entry : 0/0
 12488 ;;		On exit  : 0/0
 12489 ;;		Unchanged: 0/0
 12490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12495 ;;Total ram usage:        0 bytes
 12496 ;; Hardware stack levels used: 1
 12497 ;; Hardware stack levels required when called: 4
 12498 ;; This function calls:
 12499 ;;		Nothing
 12500 ;; This function is called by:
 12501 ;;		_I2C_DO_RX
 12502 ;; This function uses a non-reentrant model
 12503 ;;
 12504                           
 12505                           	psect	text84
 12506  004CDE                     __ptext84:
 12507                           	callstack 0
 12508  004CDE                     _I2C_MasterGetRxData:
 12509                           	callstack 18
 12510  004CDE                     
 12511                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
 12512  004CDE  50C9               	movf	201,w,c	;volatile
 12513  004CE0  0012               	return		;funcret
 12514  004CE2                     __end_of_I2C_MasterGetRxData:
 12515                           	callstack 0
 12516                           
 12517 ;; *************** function _I2C_MasterSendNack *****************
 12518 ;; Defined at:
 12519 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
 12520 ;; Parameters:    Size  Location     Type
 12521 ;;		None
 12522 ;; Auto vars:     Size  Location     Type
 12523 ;;		None
 12524 ;; Return value:  Size  Location     Type
 12525 ;;                  1    wreg      void 
 12526 ;; Registers used:
 12527 ;;		None
 12528 ;; Tracked objects:
 12529 ;;		On entry : 0/0
 12530 ;;		On exit  : 0/0
 12531 ;;		Unchanged: 0/0
 12532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12537 ;;Total ram usage:        0 bytes
 12538 ;; Hardware stack levels used: 1
 12539 ;; Hardware stack levels required when called: 4
 12540 ;; This function calls:
 12541 ;;		Nothing
 12542 ;; This function is called by:
 12543 ;;		_I2C_DO_RX_NACK_STOP
 12544 ;;		_I2C_DO_RX_NACK_RESTART
 12545 ;; This function uses a non-reentrant model
 12546 ;;
 12547                           
 12548                           	psect	text85
 12549  004CC4                     __ptext85:
 12550                           	callstack 0
 12551  004CC4                     _I2C_MasterSendNack:
 12552                           	callstack 18
 12553  004CC4                     
 12554                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
 12555  004CC4  8AC5               	bsf	197,5,c	;volatile
 12556                           
 12557                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
 12558  004CC6  88C5               	bsf	197,4,c	;volatile
 12559  004CC8  0012               	return		;funcret
 12560  004CCA                     __end_of_I2C_MasterSendNack:
 12561                           	callstack 0
 12562                           
 12563 ;; *************** function _I2C_MasterStartRx *****************
 12564 ;; Defined at:
 12565 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
 12566 ;; Parameters:    Size  Location     Type
 12567 ;;		None
 12568 ;; Auto vars:     Size  Location     Type
 12569 ;;		None
 12570 ;; Return value:  Size  Location     Type
 12571 ;;                  1    wreg      void 
 12572 ;; Registers used:
 12573 ;;		None
 12574 ;; Tracked objects:
 12575 ;;		On entry : 0/0
 12576 ;;		On exit  : 0/0
 12577 ;;		Unchanged: 0/0
 12578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12583 ;;Total ram usage:        0 bytes
 12584 ;; Hardware stack levels used: 1
 12585 ;; Hardware stack levels required when called: 4
 12586 ;; This function calls:
 12587 ;;		Nothing
 12588 ;; This function is called by:
 12589 ;;		_I2C_DO_RCEN
 12590 ;; This function uses a non-reentrant model
 12591 ;;
 12592                           
 12593                           	psect	text86
 12594  004CE2                     __ptext86:
 12595                           	callstack 0
 12596  004CE2                     _I2C_MasterStartRx:
 12597                           	callstack 18
 12598  004CE2                     
 12599                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
 12600  004CE2  86C5               	bsf	197,3,c	;volatile
 12601  004CE4  0012               	return		;funcret
 12602  004CE6                     __end_of_I2C_MasterStartRx:
 12603                           	callstack 0
 12604                           
 12605 ;; *************** function _I2C_CallbackReturnReset *****************
 12606 ;; Defined at:
 12607 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
 12608 ;; Parameters:    Size  Location     Type
 12609 ;;  funPtr          2   13[COMRAM] PTR void 
 12610 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12611 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12612 ;; Auto vars:     Size  Location     Type
 12613 ;;		None
 12614 ;; Return value:  Size  Location     Type
 12615 ;;                  1    wreg      enum E360
 12616 ;; Registers used:
 12617 ;;		wreg
 12618 ;; Tracked objects:
 12619 ;;		On entry : 0/0
 12620 ;;		On exit  : 0/0
 12621 ;;		Unchanged: 0/0
 12622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12623 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12626 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12627 ;;Total ram usage:        2 bytes
 12628 ;; Hardware stack levels used: 1
 12629 ;; Hardware stack levels required when called: 4
 12630 ;; This function calls:
 12631 ;;		Nothing
 12632 ;; This function is called by:
 12633 ;;		_I2C_Open
 12634 ;;		_I2C_DO_TX
 12635 ;;		_I2C_DO_RX
 12636 ;;		_I2C_DO_TX_EMPTY
 12637 ;;		_I2C_DO_ADDRESS_NACK
 12638 ;;		_I2C_DO_RX_EMPTY
 12639 ;; This function uses a non-reentrant model
 12640 ;;
 12641                           
 12642                           	psect	text87
 12643  004CE6                     __ptext87:
 12644                           	callstack 0
 12645  004CE6                     _I2C_CallbackReturnReset:
 12646                           	callstack 18
 12647  004CE6                     
 12648                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
 12649  004CE6  0E05               	movlw	5
 12650  004CE8  0012               	return		;funcret
 12651  004CEA                     __end_of_I2C_CallbackReturnReset:
 12652                           	callstack 0
 12653                           
 12654 ;; *************** function _I2C_CallbackReturnStop *****************
 12655 ;; Defined at:
 12656 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
 12657 ;; Parameters:    Size  Location     Type
 12658 ;;  funPtr          2   13[COMRAM] PTR void 
 12659 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12660 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12661 ;; Auto vars:     Size  Location     Type
 12662 ;;		None
 12663 ;; Return value:  Size  Location     Type
 12664 ;;                  1    wreg      enum E360
 12665 ;; Registers used:
 12666 ;;		wreg
 12667 ;; Tracked objects:
 12668 ;;		On entry : 0/0
 12669 ;;		On exit  : 0/0
 12670 ;;		Unchanged: 0/0
 12671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12676 ;;Total ram usage:        2 bytes
 12677 ;; Hardware stack levels used: 1
 12678 ;; Hardware stack levels required when called: 4
 12679 ;; This function calls:
 12680 ;;		Nothing
 12681 ;; This function is called by:
 12682 ;;		_I2C_Open
 12683 ;;		_I2C_SetCallback
 12684 ;;		_I2C_DO_TX
 12685 ;;		_I2C_DO_RX
 12686 ;;		_I2C_DO_TX_EMPTY
 12687 ;;		_I2C_DO_ADDRESS_NACK
 12688 ;;		_I2C_DO_RX_EMPTY
 12689 ;; This function uses a non-reentrant model
 12690 ;;
 12691                           
 12692                           	psect	text88
 12693  004CEA                     __ptext88:
 12694                           	callstack 0
 12695  004CEA                     _I2C_CallbackReturnStop:
 12696                           	callstack 18
 12697  004CEA                     
 12698                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
 12699  004CEA  0E01               	movlw	1
 12700  004CEC  0012               	return		;funcret
 12701  004CEE                     __end_of_I2C_CallbackReturnStop:
 12702                           	callstack 0
 12703                           
 12704 ;; *************** function _rdBlkRegCompleteHandler *****************
 12705 ;; Defined at:
 12706 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 12707 ;; Parameters:    Size  Location     Type
 12708 ;;  ptr             2   13[COMRAM] PTR void 
 12709 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12710 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12711 ;; Auto vars:     Size  Location     Type
 12712 ;;		None
 12713 ;; Return value:  Size  Location     Type
 12714 ;;                  1    wreg      enum E360
 12715 ;; Registers used:
 12716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12717 ;; Tracked objects:
 12718 ;;		On entry : 0/0
 12719 ;;		On exit  : 0/0
 12720 ;;		Unchanged: 0/0
 12721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12725 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12726 ;;Total ram usage:        2 bytes
 12727 ;; Hardware stack levels used: 1
 12728 ;; Hardware stack levels required when called: 6
 12729 ;; This function calls:
 12730 ;;		_I2C_SetBuffer
 12731 ;;		_I2C_SetDataCompleteCallback
 12732 ;; This function is called by:
 12733 ;;		_I2C_ReadDataBlock
 12734 ;;		_I2C_DO_TX
 12735 ;;		_I2C_DO_RX
 12736 ;;		_I2C_DO_TX_EMPTY
 12737 ;;		_I2C_DO_ADDRESS_NACK
 12738 ;;		_I2C_DO_RX_EMPTY
 12739 ;; This function uses a non-reentrant model
 12740 ;;
 12741                           
 12742                           	psect	text89
 12743  00478C                     __ptext89:
 12744                           	callstack 0
 12745  00478C                     _rdBlkRegCompleteHandler:
 12746                           	callstack 16
 12747  00478C                     
 12748                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 12749  00478C  EE20 F002          	lfsr	2,2
 12750  004790  500E               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
 12751  004792  26D9               	addwf	fsr2l,f,c
 12752  004794  500F               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
 12753  004796  22DA               	addwfc	fsr2h,f,c
 12754  004798  CFDE F005          	movff	postinc2,I2C_SetBuffer@buffer
 12755  00479C  CFDD F006          	movff	postdec2,I2C_SetBuffer@buffer+1
 12756  0047A0  C00E  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 12757  0047A4  C00F  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 12758  0047A8  CFDE F007          	movff	postinc2,I2C_SetBuffer@bufferSize
 12759  0047AC  CFDD F008          	movff	postdec2,I2C_SetBuffer@bufferSize+1
 12760  0047B0  EC46  F025         	call	_I2C_SetBuffer	;wreg free
 12761  0047B4                     
 12762                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12763  0047B4  0E00               	movlw	0
 12764  0047B6  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12765  0047B8  0E00               	movlw	0
 12766  0047BA  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12767  0047BC  0E00               	movlw	0
 12768  0047BE  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12769  0047C0  0E00               	movlw	0
 12770  0047C2  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12771  0047C4  ECC3  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 12772  0047C8                     
 12773                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 12774  0047C8  0E02               	movlw	2
 12775  0047CA  0012               	return		;funcret
 12776  0047CC                     __end_of_rdBlkRegCompleteHandler:
 12777                           	callstack 0
 12778                           
 12779 ;; *************** function _wr1RegCompleteHandler *****************
 12780 ;; Defined at:
 12781 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 12782 ;; Parameters:    Size  Location     Type
 12783 ;;  ptr             2   13[COMRAM] PTR void 
 12784 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12785 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12786 ;; Auto vars:     Size  Location     Type
 12787 ;;		None
 12788 ;; Return value:  Size  Location     Type
 12789 ;;                  1    wreg      enum E360
 12790 ;; Registers used:
 12791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12792 ;; Tracked objects:
 12793 ;;		On entry : 0/0
 12794 ;;		On exit  : 0/0
 12795 ;;		Unchanged: 0/0
 12796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12797 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12800 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12801 ;;Total ram usage:        2 bytes
 12802 ;; Hardware stack levels used: 1
 12803 ;; Hardware stack levels required when called: 6
 12804 ;; This function calls:
 12805 ;;		_I2C_SetBuffer
 12806 ;;		_I2C_SetDataCompleteCallback
 12807 ;; This function is called by:
 12808 ;;		_I2C_Write1ByteRegister
 12809 ;;		_I2C_DO_TX
 12810 ;;		_I2C_DO_RX
 12811 ;;		_I2C_DO_TX_EMPTY
 12812 ;;		_I2C_DO_ADDRESS_NACK
 12813 ;;		_I2C_DO_RX_EMPTY
 12814 ;; This function uses a non-reentrant model
 12815 ;;
 12816                           
 12817                           	psect	text90
 12818  004912                     __ptext90:
 12819                           	callstack 0
 12820  004912                     _wr1RegCompleteHandler:
 12821                           	callstack 16
 12822  004912                     
 12823                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 12824  004912  C00E  F005         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 12825  004916  C00F  F006         	movff	wr1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 12826  00491A  0E00               	movlw	0
 12827  00491C  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12828  00491E  0E01               	movlw	1
 12829  004920  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 12830  004922  EC46  F025         	call	_I2C_SetBuffer	;wreg free
 12831  004926                     
 12832                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12833  004926  0E00               	movlw	0
 12834  004928  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12835  00492A  0E00               	movlw	0
 12836  00492C  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12837  00492E  0E00               	movlw	0
 12838  004930  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12839  004932  0E00               	movlw	0
 12840  004934  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12841  004936  ECC3  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 12842  00493A                     
 12843                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 12844  00493A  0E04               	movlw	4
 12845  00493C  0012               	return		;funcret
 12846  00493E                     __end_of_wr1RegCompleteHandler:
 12847                           	callstack 0
 12848                           
 12849 ;; *************** function _rd2RegCompleteHandler *****************
 12850 ;; Defined at:
 12851 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 12852 ;; Parameters:    Size  Location     Type
 12853 ;;  ptr             2   13[COMRAM] PTR void 
 12854 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12855 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12856 ;; Auto vars:     Size  Location     Type
 12857 ;;		None
 12858 ;; Return value:  Size  Location     Type
 12859 ;;                  1    wreg      enum E360
 12860 ;; Registers used:
 12861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12862 ;; Tracked objects:
 12863 ;;		On entry : 0/0
 12864 ;;		On exit  : 0/0
 12865 ;;		Unchanged: 0/0
 12866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12867 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12870 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12871 ;;Total ram usage:        2 bytes
 12872 ;; Hardware stack levels used: 1
 12873 ;; Hardware stack levels required when called: 6
 12874 ;; This function calls:
 12875 ;;		_I2C_SetBuffer
 12876 ;;		_I2C_SetDataCompleteCallback
 12877 ;; This function is called by:
 12878 ;;		_I2C_Read2ByteRegister
 12879 ;;		_I2C_DO_TX
 12880 ;;		_I2C_DO_RX
 12881 ;;		_I2C_DO_TX_EMPTY
 12882 ;;		_I2C_DO_ADDRESS_NACK
 12883 ;;		_I2C_DO_RX_EMPTY
 12884 ;; This function uses a non-reentrant model
 12885 ;;
 12886                           
 12887                           	psect	text91
 12888  00493E                     __ptext91:
 12889                           	callstack 0
 12890  00493E                     _rd2RegCompleteHandler:
 12891                           	callstack 16
 12892  00493E                     
 12893                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 12894  00493E  C00E  F005         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 12895  004942  C00F  F006         	movff	rd2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 12896  004946  0E00               	movlw	0
 12897  004948  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12898  00494A  0E02               	movlw	2
 12899  00494C  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 12900  00494E  EC46  F025         	call	_I2C_SetBuffer	;wreg free
 12901  004952                     
 12902                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12903  004952  0E00               	movlw	0
 12904  004954  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12905  004956  0E00               	movlw	0
 12906  004958  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12907  00495A  0E00               	movlw	0
 12908  00495C  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12909  00495E  0E00               	movlw	0
 12910  004960  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12911  004962  ECC3  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 12912  004966                     
 12913                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 12914  004966  0E02               	movlw	2
 12915  004968  0012               	return		;funcret
 12916  00496A                     __end_of_rd2RegCompleteHandler:
 12917                           	callstack 0
 12918                           
 12919 ;; *************** function _rd1RegCompleteHandler *****************
 12920 ;; Defined at:
 12921 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 12922 ;; Parameters:    Size  Location     Type
 12923 ;;  ptr             2   13[COMRAM] PTR void 
 12924 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12925 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12926 ;; Auto vars:     Size  Location     Type
 12927 ;;		None
 12928 ;; Return value:  Size  Location     Type
 12929 ;;                  1    wreg      enum E360
 12930 ;; Registers used:
 12931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12932 ;; Tracked objects:
 12933 ;;		On entry : 0/0
 12934 ;;		On exit  : 0/0
 12935 ;;		Unchanged: 0/0
 12936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12937 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12940 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12941 ;;Total ram usage:        2 bytes
 12942 ;; Hardware stack levels used: 1
 12943 ;; Hardware stack levels required when called: 6
 12944 ;; This function calls:
 12945 ;;		_I2C_SetBuffer
 12946 ;;		_I2C_SetDataCompleteCallback
 12947 ;; This function is called by:
 12948 ;;		_I2C_Read1ByteRegister
 12949 ;;		_I2C_DO_TX
 12950 ;;		_I2C_DO_RX
 12951 ;;		_I2C_DO_TX_EMPTY
 12952 ;;		_I2C_DO_ADDRESS_NACK
 12953 ;;		_I2C_DO_RX_EMPTY
 12954 ;; This function uses a non-reentrant model
 12955 ;;
 12956                           
 12957                           	psect	text92
 12958  00496A                     __ptext92:
 12959                           	callstack 0
 12960  00496A                     _rd1RegCompleteHandler:
 12961                           	callstack 16
 12962  00496A                     
 12963                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 12964  00496A  C00E  F005         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 12965  00496E  C00F  F006         	movff	rd1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 12966  004972  0E00               	movlw	0
 12967  004974  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12968  004976  0E01               	movlw	1
 12969  004978  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 12970  00497A  EC46  F025         	call	_I2C_SetBuffer	;wreg free
 12971  00497E                     
 12972                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12973  00497E  0E00               	movlw	0
 12974  004980  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12975  004982  0E00               	movlw	0
 12976  004984  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12977  004986  0E00               	movlw	0
 12978  004988  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12979  00498A  0E00               	movlw	0
 12980  00498C  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12981  00498E  ECC3  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 12982  004992                     
 12983                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 12984  004992  0E02               	movlw	2
 12985  004994  0012               	return		;funcret
 12986  004996                     __end_of_rd1RegCompleteHandler:
 12987                           	callstack 0
 12988                           
 12989 ;; *************** function _wr2RegCompleteHandler *****************
 12990 ;; Defined at:
 12991 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 12992 ;; Parameters:    Size  Location     Type
 12993 ;;  ptr             2   13[COMRAM] PTR void 
 12994 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12995 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12996 ;; Auto vars:     Size  Location     Type
 12997 ;;		None
 12998 ;; Return value:  Size  Location     Type
 12999 ;;                  1    wreg      enum E360
 13000 ;; Registers used:
 13001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13002 ;; Tracked objects:
 13003 ;;		On entry : 0/0
 13004 ;;		On exit  : 0/0
 13005 ;;		Unchanged: 0/0
 13006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13007 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13010 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13011 ;;Total ram usage:        2 bytes
 13012 ;; Hardware stack levels used: 1
 13013 ;; Hardware stack levels required when called: 6
 13014 ;; This function calls:
 13015 ;;		_I2C_SetBuffer
 13016 ;;		_I2C_SetDataCompleteCallback
 13017 ;; This function is called by:
 13018 ;;		_I2C_Write2ByteRegister
 13019 ;;		_I2C_DO_TX
 13020 ;;		_I2C_DO_RX
 13021 ;;		_I2C_DO_TX_EMPTY
 13022 ;;		_I2C_DO_ADDRESS_NACK
 13023 ;;		_I2C_DO_RX_EMPTY
 13024 ;; This function uses a non-reentrant model
 13025 ;;
 13026                           
 13027                           	psect	text93
 13028  004996                     __ptext93:
 13029                           	callstack 0
 13030  004996                     _wr2RegCompleteHandler:
 13031                           	callstack 16
 13032  004996                     
 13033                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 13034  004996  C00E  F005         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 13035  00499A  C00F  F006         	movff	wr2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 13036  00499E  0E00               	movlw	0
 13037  0049A0  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 13038  0049A2  0E02               	movlw	2
 13039  0049A4  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 13040  0049A6  EC46  F025         	call	_I2C_SetBuffer	;wreg free
 13041  0049AA                     
 13042                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 13043  0049AA  0E00               	movlw	0
 13044  0049AC  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 13045  0049AE  0E00               	movlw	0
 13046  0049B0  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 13047  0049B2  0E00               	movlw	0
 13048  0049B4  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 13049  0049B6  0E00               	movlw	0
 13050  0049B8  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 13051  0049BA  ECC3  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 13052  0049BE                     
 13053                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 13054  0049BE  0E04               	movlw	4
 13055  0049C0  0012               	return		;funcret
 13056  0049C2                     __end_of_wr2RegCompleteHandler:
 13057                           	callstack 0
 13058                           
 13059 ;; *************** function _I2C_SetDataCompleteCallback *****************
 13060 ;; Defined at:
 13061 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
 13062 ;; Parameters:    Size  Location     Type
 13063 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
 13064 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 13065 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 13066 ;;  ptr             2   11[COMRAM] PTR void 
 13067 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 13068 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 13069 ;; Auto vars:     Size  Location     Type
 13070 ;;		None
 13071 ;; Return value:  Size  Location     Type
 13072 ;;                  1    wreg      void 
 13073 ;; Registers used:
 13074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13075 ;; Tracked objects:
 13076 ;;		On entry : 0/0
 13077 ;;		On exit  : 0/0
 13078 ;;		Unchanged: 0/0
 13079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13080 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13083 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13084 ;;Total ram usage:        4 bytes
 13085 ;; Hardware stack levels used: 1
 13086 ;; Hardware stack levels required when called: 5
 13087 ;; This function calls:
 13088 ;;		_I2C_SetCallback
 13089 ;; This function is called by:
 13090 ;;		_I2C_Read2ByteRegister
 13091 ;;		_rd1RegCompleteHandler
 13092 ;;		_rd2RegCompleteHandler
 13093 ;;		_wr1RegCompleteHandler
 13094 ;;		_wr2RegCompleteHandler
 13095 ;;		_rdBlkRegCompleteHandler
 13096 ;;		_I2C_Read1ByteRegister
 13097 ;;		_I2C_Write1ByteRegister
 13098 ;;		_I2C_Write2ByteRegister
 13099 ;;		_I2C_ReadDataBlock
 13100 ;; This function uses a non-reentrant model
 13101 ;;
 13102                           
 13103                           	psect	text94
 13104  004B86                     __ptext94:
 13105                           	callstack 0
 13106  004B86                     _I2C_SetDataCompleteCallback:
 13107                           	callstack 16
 13108  004B86                     
 13109                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 13110  004B86  C00A  F005         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
 13111  004B8A  C00B  F006         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
 13112  004B8E  C00C  F007         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
 13113  004B92  C00D  F008         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
 13114  004B96  0E00               	movlw	0
 13115  004B98  ECB5  F020         	call	_I2C_SetCallback
 13116  004B9C  0012               	return		;funcret
 13117  004B9E                     __end_of_I2C_SetDataCompleteCallback:
 13118                           	callstack 0
 13119                           
 13120 ;; *************** function _I2C_SetCallback *****************
 13121 ;; Defined at:
 13122 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
 13123 ;; Parameters:    Size  Location     Type
 13124 ;;  idx             1    wreg     enum E3121
 13125 ;;  cb              2    4[COMRAM] PTR FTN(PTR void ,)enum 
 13126 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 13127 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 13128 ;;  ptr             2    6[COMRAM] PTR void 
 13129 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 13130 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 13131 ;; Auto vars:     Size  Location     Type
 13132 ;;  idx             1    8[COMRAM] enum E3121
 13133 ;; Return value:  Size  Location     Type
 13134 ;;                  1    wreg      void 
 13135 ;; Registers used:
 13136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13137 ;; Tracked objects:
 13138 ;;		On entry : 0/0
 13139 ;;		On exit  : 0/0
 13140 ;;		Unchanged: 0/0
 13141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13142 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13143 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13145 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13146 ;;Total ram usage:        5 bytes
 13147 ;; Hardware stack levels used: 1
 13148 ;; Hardware stack levels required when called: 4
 13149 ;; This function calls:
 13150 ;;		Nothing
 13151 ;; This function is called by:
 13152 ;;		_I2C_SetDataCompleteCallback
 13153 ;;		_I2C_SetAddressNackCallback
 13154 ;;		_I2C_SetWriteCollisionCallback
 13155 ;;		_I2C_SetDataNackCallback
 13156 ;;		_I2C_SetTimeoutCallback
 13157 ;; This function uses a non-reentrant model
 13158 ;;
 13159                           
 13160                           	psect	text95
 13161  00416A                     __ptext95:
 13162                           	callstack 0
 13163  00416A                     _I2C_SetCallback:
 13164                           	callstack 22
 13165                           
 13166                           ;incstack = 0
 13167                           ;I2C_SetCallback@idx stored from wreg
 13168  00416A  6E09               	movwf	I2C_SetCallback@idx^0,c
 13169  00416C                     
 13170                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
 13171  00416C  5005               	movf	I2C_SetCallback@cb^0,w,c
 13172  00416E  1006               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
 13173  004170  B4D8               	btfsc	status,2,c
 13174  004172  EFBD  F020         	goto	u2961
 13175  004176  EFBF  F020         	goto	u2960
 13176  00417A                     u2961:
 13177  00417A  EFD9  F020         	goto	l4030
 13178  00417E                     u2960:
 13179  00417E                     
 13180                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
 13181  00417E  5009               	movf	I2C_SetCallback@idx^0,w,c
 13182  004180  0D02               	mullw	2
 13183  004182  0E00               	movlw	low _I2C_Status
 13184  004184  24F3               	addwf	243,w,c
 13185  004186  6ED9               	movwf	fsr2l,c
 13186  004188  0E01               	movlw	high _I2C_Status
 13187  00418A  20F4               	addwfc	prodh,w,c
 13188  00418C  6EDA               	movwf	fsr2h,c
 13189  00418E  C005  FFDE         	movff	I2C_SetCallback@cb,postinc2
 13190  004192  C006  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
 13191                           
 13192                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
 13193  004196  5009               	movf	I2C_SetCallback@idx^0,w,c
 13194  004198  0D02               	mullw	2
 13195  00419A  0E0C               	movlw	low (_I2C_Status+12)
 13196  00419C  24F3               	addwf	243,w,c
 13197  00419E  6ED9               	movwf	fsr2l,c
 13198  0041A0  0E01               	movlw	high (_I2C_Status+12)
 13199  0041A2  20F4               	addwfc	prodh,w,c
 13200  0041A4  6EDA               	movwf	fsr2h,c
 13201  0041A6  C007  FFDE         	movff	I2C_SetCallback@ptr,postinc2
 13202  0041AA  C008  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
 13203                           
 13204                           ;mcc_generated_files/i2c_master.c: 304:     }
 13205  0041AE  EFF1  F020         	goto	l256
 13206  0041B2                     l4030:
 13207                           
 13208                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 13209  0041B2  5009               	movf	I2C_SetCallback@idx^0,w,c
 13210  0041B4  0D02               	mullw	2
 13211  0041B6  0E00               	movlw	low _I2C_Status
 13212  0041B8  24F3               	addwf	243,w,c
 13213  0041BA  6ED9               	movwf	fsr2l,c
 13214  0041BC  0E01               	movlw	high _I2C_Status
 13215  0041BE  20F4               	addwfc	prodh,w,c
 13216  0041C0  6EDA               	movwf	fsr2h,c
 13217  0041C2  0EEA               	movlw	low _I2C_CallbackReturnStop
 13218  0041C4  6EDE               	movwf	postinc2,c
 13219  0041C6  0E4C               	movlw	high _I2C_CallbackReturnStop
 13220  0041C8  6EDD               	movwf	postdec2,c
 13221                           
 13222                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 13223  0041CA  5009               	movf	I2C_SetCallback@idx^0,w,c
 13224  0041CC  0D02               	mullw	2
 13225  0041CE  0E0C               	movlw	low (_I2C_Status+12)
 13226  0041D0  24F3               	addwf	243,w,c
 13227  0041D2  6ED9               	movwf	fsr2l,c
 13228  0041D4  0E01               	movlw	high (_I2C_Status+12)
 13229  0041D6  20F4               	addwfc	prodh,w,c
 13230  0041D8  6EDA               	movwf	fsr2h,c
 13231  0041DA  0E00               	movlw	0
 13232  0041DC  6EDE               	movwf	postinc2,c
 13233  0041DE  0E00               	movlw	0
 13234  0041E0  6EDD               	movwf	postdec2,c
 13235  0041E2                     l256:
 13236  0041E2  0012               	return		;funcret
 13237  0041E4                     __end_of_I2C_SetCallback:
 13238                           	callstack 0
 13239                           
 13240 ;; *************** function _I2C_SetBuffer *****************
 13241 ;; Defined at:
 13242 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
 13243 ;; Parameters:    Size  Location     Type
 13244 ;;  buffer          2    4[COMRAM] PTR void 
 13245 ;;		 -> INA219_WriteRegister@writeBuffer(3), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteR
      +egister@reg(1), 
 13246 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
 13247 ;;		 -> I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1
      +), 
 13248 ;;  bufferSize      2    6[COMRAM] unsigned int 
 13249 ;; Auto vars:     Size  Location     Type
 13250 ;;		None
 13251 ;; Return value:  Size  Location     Type
 13252 ;;                  1    wreg      void 
 13253 ;; Registers used:
 13254 ;;		wreg, status,2, status,0
 13255 ;; Tracked objects:
 13256 ;;		On entry : 0/0
 13257 ;;		On exit  : 0/0
 13258 ;;		Unchanged: 0/0
 13259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13260 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13263 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13264 ;;Total ram usage:        4 bytes
 13265 ;; Hardware stack levels used: 1
 13266 ;; Hardware stack levels required when called: 4
 13267 ;; This function calls:
 13268 ;;		Nothing
 13269 ;; This function is called by:
 13270 ;;		_I2C_Read2ByteRegister
 13271 ;;		_I2C_WriteNBytes
 13272 ;;		_rd1RegCompleteHandler
 13273 ;;		_rd2RegCompleteHandler
 13274 ;;		_wr1RegCompleteHandler
 13275 ;;		_wr2RegCompleteHandler
 13276 ;;		_rdBlkRegCompleteHandler
 13277 ;;		_I2C_Read1ByteRegister
 13278 ;;		_I2C_Write1ByteRegister
 13279 ;;		_I2C_Write2ByteRegister
 13280 ;;		_I2C_ReadNBytes
 13281 ;;		_I2C_ReadDataBlock
 13282 ;; This function uses a non-reentrant model
 13283 ;;
 13284                           
 13285                           	psect	text96
 13286  004A8C                     __ptext96:
 13287                           	callstack 0
 13288  004A8C                     _I2C_SetBuffer:
 13289                           	callstack 23
 13290  004A8C                     
 13291                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
 13292  004A8C  0101               	movlb	1	; () banked
 13293  004A8E  A723               	btfss	(_I2C_Status+35)& (0+255),3,b
 13294  004A90  EF4C  F025         	goto	u2971
 13295  004A94  EF4E  F025         	goto	u2970
 13296  004A98                     u2971:
 13297  004A98  EF57  F025         	goto	l236
 13298  004A9C                     u2970:
 13299  004A9C                     
 13300                           ; BSR set to: 1
 13301                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
 13302  004A9C  C005  F11D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
 13303  004AA0  C006  F11E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
 13304  004AA4                     
 13305                           ; BSR set to: 1
 13306                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
 13307  004AA4  C007  F11F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
 13308  004AA8  C008  F120         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 13309  004AAC                     
 13310                           ; BSR set to: 1
 13311                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
 13312  004AAC  9723               	bcf	(_I2C_Status+35)& (0+255),3,b
 13313  004AAE                     l236:
 13314                           
 13315                           ; BSR set to: 1
 13316  004AAE  0012               	return		;funcret
 13317  004AB0                     __end_of_I2C_SetBuffer:
 13318                           	callstack 0
 13319                           
 13320 ;; *************** function _I2C_MasterStop *****************
 13321 ;; Defined at:
 13322 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 13323 ;; Parameters:    Size  Location     Type
 13324 ;;		None
 13325 ;; Auto vars:     Size  Location     Type
 13326 ;;		None
 13327 ;; Return value:  Size  Location     Type
 13328 ;;                  1    wreg      void 
 13329 ;; Registers used:
 13330 ;;		None
 13331 ;; Tracked objects:
 13332 ;;		On entry : 0/0
 13333 ;;		On exit  : 0/0
 13334 ;;		Unchanged: 0/0
 13335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13340 ;;Total ram usage:        0 bytes
 13341 ;; Hardware stack levels used: 1
 13342 ;; Hardware stack levels required when called: 4
 13343 ;; This function calls:
 13344 ;;		Nothing
 13345 ;; This function is called by:
 13346 ;;		_I2C_DO_SEND_STOP
 13347 ;; This function uses a non-reentrant model
 13348 ;;
 13349                           
 13350                           	psect	text97
 13351  004CEE                     __ptext97:
 13352                           	callstack 0
 13353  004CEE                     _I2C_MasterStop:
 13354                           	callstack 17
 13355  004CEE                     
 13356                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
 13357  004CEE  84C5               	bsf	197,2,c	;volatile
 13358  004CF0  0012               	return		;funcret
 13359  004CF2                     __end_of_I2C_MasterStop:
 13360                           	callstack 0
 13361                           
 13362 ;; *************** function _I2C_MasterEnableRestart *****************
 13363 ;; Defined at:
 13364 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
 13365 ;; Parameters:    Size  Location     Type
 13366 ;;		None
 13367 ;; Auto vars:     Size  Location     Type
 13368 ;;		None
 13369 ;; Return value:  Size  Location     Type
 13370 ;;                  1    wreg      void 
 13371 ;; Registers used:
 13372 ;;		None
 13373 ;; Tracked objects:
 13374 ;;		On entry : 0/0
 13375 ;;		On exit  : 0/0
 13376 ;;		Unchanged: 0/0
 13377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13382 ;;Total ram usage:        0 bytes
 13383 ;; Hardware stack levels used: 1
 13384 ;; Hardware stack levels required when called: 4
 13385 ;; This function calls:
 13386 ;;		Nothing
 13387 ;; This function is called by:
 13388 ;;		_I2C_DO_SEND_RESTART_READ
 13389 ;;		_I2C_DO_SEND_RESTART_WRITE
 13390 ;;		_I2C_DO_SEND_RESTART
 13391 ;;		_I2C_DO_RX_EMPTY
 13392 ;; This function uses a non-reentrant model
 13393 ;;
 13394                           
 13395                           	psect	text98
 13396  004CF2                     __ptext98:
 13397                           	callstack 0
 13398  004CF2                     _I2C_MasterEnableRestart:
 13399                           	callstack 17
 13400  004CF2                     
 13401                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
 13402  004CF2  82C5               	bsf	197,1,c	;volatile
 13403  004CF4  0012               	return		;funcret
 13404  004CF6                     __end_of_I2C_MasterEnableRestart:
 13405                           	callstack 0
 13406                           
 13407 ;; *************** function _I2C_MasterStart *****************
 13408 ;; Defined at:
 13409 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
 13410 ;; Parameters:    Size  Location     Type
 13411 ;;		None
 13412 ;; Auto vars:     Size  Location     Type
 13413 ;;		None
 13414 ;; Return value:  Size  Location     Type
 13415 ;;                  1    wreg      void 
 13416 ;; Registers used:
 13417 ;;		None
 13418 ;; Tracked objects:
 13419 ;;		On entry : 0/0
 13420 ;;		On exit  : 0/0
 13421 ;;		Unchanged: 0/0
 13422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13427 ;;Total ram usage:        0 bytes
 13428 ;; Hardware stack levels used: 1
 13429 ;; Hardware stack levels required when called: 4
 13430 ;; This function calls:
 13431 ;;		Nothing
 13432 ;; This function is called by:
 13433 ;;		_I2C_MasterOperation
 13434 ;; This function uses a non-reentrant model
 13435 ;;
 13436                           
 13437                           	psect	text99
 13438  004CF6                     __ptext99:
 13439                           	callstack 0
 13440  004CF6                     _I2C_MasterStart:
 13441                           	callstack 21
 13442  004CF6                     
 13443                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
 13444  004CF6  80C5               	bsf	197,0,c	;volatile
 13445  004CF8  0012               	return		;funcret
 13446  004CFA                     __end_of_I2C_MasterStart:
 13447                           	callstack 0
 13448                           
 13449 ;; *************** function _I2C_Close *****************
 13450 ;; Defined at:
 13451 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
 13452 ;; Parameters:    Size  Location     Type
 13453 ;;		None
 13454 ;; Auto vars:     Size  Location     Type
 13455 ;;  returnValue     1    4[COMRAM] enum E355
 13456 ;; Return value:  Size  Location     Type
 13457 ;;                  1    wreg      enum E355
 13458 ;; Registers used:
 13459 ;;		wreg, status,2, cstack
 13460 ;; Tracked objects:
 13461 ;;		On entry : 0/0
 13462 ;;		On exit  : 0/0
 13463 ;;		Unchanged: 0/0
 13464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13466 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13468 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13469 ;;Total ram usage:        1 bytes
 13470 ;; Hardware stack levels used: 1
 13471 ;; Hardware stack levels required when called: 5
 13472 ;; This function calls:
 13473 ;;		_I2C_MasterClearIrq
 13474 ;;		_I2C_MasterClose
 13475 ;;		_I2C_MasterDisableIrq
 13476 ;; This function is called by:
 13477 ;;		_I2C_Read2ByteRegister
 13478 ;;		_I2C_WriteNBytes
 13479 ;;		_I2C_Read1ByteRegister
 13480 ;;		_I2C_Write1ByteRegister
 13481 ;;		_I2C_Write2ByteRegister
 13482 ;;		_I2C_ReadNBytes
 13483 ;;		_I2C_ReadDataBlock
 13484 ;; This function uses a non-reentrant model
 13485 ;;
 13486                           
 13487                           	psect	text100
 13488  0049C2                     __ptext100:
 13489                           	callstack 0
 13490  0049C2                     _I2C_Close:
 13491                           	callstack 22
 13492  0049C2                     
 13493                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
 13494  0049C2  0E01               	movlw	1
 13495  0049C4  6E05               	movwf	I2C_Close@returnValue^0,c
 13496  0049C6                     
 13497                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
 13498  0049C6  0101               	movlb	1	; () banked
 13499  0049C8  B323               	btfsc	(_I2C_Status+35)& (0+255),1,b
 13500  0049CA  EFE9  F024         	goto	u3651
 13501  0049CE  EFEB  F024         	goto	u3650
 13502  0049D2                     u3651:
 13503  0049D2  EFF5  F024         	goto	l4688
 13504  0049D6                     u3650:
 13505  0049D6                     
 13506                           ; BSR set to: 1
 13507                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
 13508  0049D6  9523               	bcf	(_I2C_Status+35)& (0+255),2,b
 13509                           
 13510                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
 13511  0049D8  691C               	setf	(_I2C_Status+28)& (0+255),b
 13512  0049DA                     
 13513                           ; BSR set to: 1
 13514                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
 13515  0049DA  EC81  F026         	call	_I2C_MasterClearIrq	;wreg free
 13516                           
 13517                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
 13518  0049DE  EC7D  F026         	call	_I2C_MasterDisableIrq	;wreg free
 13519                           
 13520                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
 13521  0049E2  EC7F  F026         	call	_I2C_MasterClose	;wreg free
 13522  0049E6                     
 13523                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
 13524  0049E6  C122  F005         	movff	_I2C_Status+34,I2C_Close@returnValue
 13525  0049EA                     l4688:
 13526                           
 13527                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
 13528  0049EA  5005               	movf	I2C_Close@returnValue^0,w,c
 13529  0049EC  0012               	return		;funcret
 13530  0049EE                     __end_of_I2C_Close:
 13531                           	callstack 0
 13532                           
 13533 ;; *************** function _I2C_MasterDisableIrq *****************
 13534 ;; Defined at:
 13535 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
 13536 ;; Parameters:    Size  Location     Type
 13537 ;;		None
 13538 ;; Auto vars:     Size  Location     Type
 13539 ;;		None
 13540 ;; Return value:  Size  Location     Type
 13541 ;;                  1    wreg      void 
 13542 ;; Registers used:
 13543 ;;		None
 13544 ;; Tracked objects:
 13545 ;;		On entry : 0/0
 13546 ;;		On exit  : 0/0
 13547 ;;		Unchanged: 0/0
 13548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13553 ;;Total ram usage:        0 bytes
 13554 ;; Hardware stack levels used: 1
 13555 ;; Hardware stack levels required when called: 4
 13556 ;; This function calls:
 13557 ;;		Nothing
 13558 ;; This function is called by:
 13559 ;;		_I2C_Close
 13560 ;;		_I2C_SetTimeOut
 13561 ;; This function uses a non-reentrant model
 13562 ;;
 13563                           
 13564                           	psect	text101
 13565  004CFA                     __ptext101:
 13566                           	callstack 0
 13567  004CFA                     _I2C_MasterDisableIrq:
 13568                           	callstack 22
 13569  004CFA                     
 13570                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
 13571  004CFA  969D               	bcf	157,3,c	;volatile
 13572  004CFC  0012               	return		;funcret
 13573  004CFE                     __end_of_I2C_MasterDisableIrq:
 13574                           	callstack 0
 13575                           
 13576 ;; *************** function _I2C_MasterClose *****************
 13577 ;; Defined at:
 13578 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
 13579 ;; Parameters:    Size  Location     Type
 13580 ;;		None
 13581 ;; Auto vars:     Size  Location     Type
 13582 ;;		None
 13583 ;; Return value:  Size  Location     Type
 13584 ;;                  1    wreg      void 
 13585 ;; Registers used:
 13586 ;;		None
 13587 ;; Tracked objects:
 13588 ;;		On entry : 0/0
 13589 ;;		On exit  : 0/0
 13590 ;;		Unchanged: 0/0
 13591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13596 ;;Total ram usage:        0 bytes
 13597 ;; Hardware stack levels used: 1
 13598 ;; Hardware stack levels required when called: 4
 13599 ;; This function calls:
 13600 ;;		Nothing
 13601 ;; This function is called by:
 13602 ;;		_I2C_Close
 13603 ;; This function uses a non-reentrant model
 13604 ;;
 13605                           
 13606                           	psect	text102
 13607  004CFE                     __ptext102:
 13608                           	callstack 0
 13609  004CFE                     _I2C_MasterClose:
 13610                           	callstack 22
 13611  004CFE                     
 13612                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
 13613  004CFE  9AC6               	bcf	198,5,c	;volatile
 13614  004D00  0012               	return		;funcret
 13615  004D02                     __end_of_I2C_MasterClose:
 13616                           	callstack 0
 13617                           
 13618 ;; *************** function _I2C_MasterClearIrq *****************
 13619 ;; Defined at:
 13620 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
 13621 ;; Parameters:    Size  Location     Type
 13622 ;;		None
 13623 ;; Auto vars:     Size  Location     Type
 13624 ;;		None
 13625 ;; Return value:  Size  Location     Type
 13626 ;;                  1    wreg      void 
 13627 ;; Registers used:
 13628 ;;		None
 13629 ;; Tracked objects:
 13630 ;;		On entry : 0/0
 13631 ;;		On exit  : 0/0
 13632 ;;		Unchanged: 0/0
 13633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13638 ;;Total ram usage:        0 bytes
 13639 ;; Hardware stack levels used: 1
 13640 ;; Hardware stack levels required when called: 4
 13641 ;; This function calls:
 13642 ;;		Nothing
 13643 ;; This function is called by:
 13644 ;;		_I2C_Open
 13645 ;;		_I2C_Close
 13646 ;;		_I2C_MasterFsm
 13647 ;; This function uses a non-reentrant model
 13648 ;;
 13649                           
 13650                           	psect	text103
 13651  004D02                     __ptext103:
 13652                           	callstack 0
 13653  004D02                     _I2C_MasterClearIrq:
 13654                           	callstack 22
 13655  004D02                     
 13656                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
 13657  004D02  969E               	bcf	158,3,c	;volatile
 13658  004D04  0012               	return		;funcret
 13659  004D06                     __end_of_I2C_MasterClearIrq:
 13660                           	callstack 0
 13661                           
 13662 ;; *************** function _INA219_Initialize *****************
 13663 ;; Defined at:
 13664 ;;		line 20 in file "ina219.c"
 13665 ;; Parameters:    Size  Location     Type
 13666 ;;		None
 13667 ;; Auto vars:     Size  Location     Type
 13668 ;;		None
 13669 ;; Return value:  Size  Location     Type
 13670 ;;                  1    wreg      void 
 13671 ;; Registers used:
 13672 ;;		None
 13673 ;; Tracked objects:
 13674 ;;		On entry : 0/0
 13675 ;;		On exit  : 0/0
 13676 ;;		Unchanged: 0/0
 13677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13682 ;;Total ram usage:        0 bytes
 13683 ;; Hardware stack levels used: 1
 13684 ;; Hardware stack levels required when called: 4
 13685 ;; This function calls:
 13686 ;;		Nothing
 13687 ;; This function is called by:
 13688 ;;		_main
 13689 ;; This function uses a non-reentrant model
 13690 ;;
 13691                           
 13692                           	psect	text104
 13693  004D0A                     __ptext104:
 13694                           	callstack 0
 13695  004D0A                     _INA219_Initialize:
 13696                           	callstack 26
 13697  004D0A  0012               	return		;funcret
 13698  004D0C                     __end_of_INA219_Initialize:
 13699                           	callstack 0
 13700                           
 13701 ;; *************** function _INTERRUPT_InterruptManager *****************
 13702 ;; Defined at:
 13703 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 13704 ;; Parameters:    Size  Location     Type
 13705 ;;		None
 13706 ;; Auto vars:     Size  Location     Type
 13707 ;;		None
 13708 ;; Return value:  Size  Location     Type
 13709 ;;                  1    wreg      void 
 13710 ;; Registers used:
 13711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 13712 ;; Tracked objects:
 13713 ;;		On entry : 0/0
 13714 ;;		On exit  : 0/0
 13715 ;;		Unchanged: 0/0
 13716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13719 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13720 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13721 ;;Total ram usage:        4 bytes
 13722 ;; Hardware stack levels used: 1
 13723 ;; Hardware stack levels required when called: 3
 13724 ;; This function calls:
 13725 ;;		Absolute function
 13726 ;;		_EUSART_Receive_ISR
 13727 ;;		_EUSART_Transmit_ISR
 13728 ;; This function is called by:
 13729 ;;		Interrupt level 2
 13730 ;; This function uses a non-reentrant model
 13731 ;;
 13732                           
 13733                           	psect	intcode
 13734  000008                     __pintcode:
 13735                           	callstack 0
 13736  000008                     _INTERRUPT_InterruptManager:
 13737                           	callstack 15
 13738                           
 13739                           ;incstack = 0
 13740  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13741  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 13742  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 13743  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 13744  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 13745  00001A                     
 13746                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 13747  00001A  ACF2               	btfss	242,6,c	;volatile
 13748  00001C  EF12  F000         	goto	i2u584_41
 13749  000020  EF14  F000         	goto	i2u584_40
 13750  000024                     i2u584_41:
 13751  000024  EF4E  F000         	goto	i2l671
 13752  000028                     i2u584_40:
 13753  000028                     
 13754                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 13755  000028  A89D               	btfss	157,4,c	;volatile
 13756  00002A  EF19  F000         	goto	i2u585_41
 13757  00002E  EF1B  F000         	goto	i2u585_40
 13758  000032                     i2u585_41:
 13759  000032  EF31  F000         	goto	i2l666
 13760  000036                     i2u585_40:
 13761  000036  A89E               	btfss	158,4,c	;volatile
 13762  000038  EF20  F000         	goto	i2u586_41
 13763  00003C  EF22  F000         	goto	i2u586_40
 13764  000040                     i2u586_41:
 13765  000040  EF31  F000         	goto	i2l666
 13766  000044                     i2u586_40:
 13767  000044                     
 13768                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART_TxDefaultInterruptHandler();
 13769  000044  D802               	call	i2u587_48
 13770  000046  EF2F  F000         	goto	i2u587_49
 13771  00004A                     i2u587_48:
 13772  00004A  0005               	push	
 13773  00004C  6EFA               	movwf	pclath,c
 13774  00004E  0101               	movlb	1	; () banked
 13775  000050  51B5               	movf	_EUSART_TxDefaultInterruptHandler& (0+255),w,b
 13776  000052  6EFD               	movwf	tosl,c
 13777  000054  51B6               	movf	(_EUSART_TxDefaultInterruptHandler+1)& (0+255),w,b
 13778  000056  6EFE               	movwf	tosh,c
 13779  000058  6AFF               	clrf	tosu,c
 13780  00005A  50FA               	movf	pclath,w,c
 13781  00005C  0012               	return		;indir
 13782  00005E                     i2u587_49:
 13783                           
 13784                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 13785  00005E  EF4E  F000         	goto	i2l671
 13786  000062                     i2l666:
 13787  000062  AA9D               	btfss	157,5,c	;volatile
 13788  000064  EF36  F000         	goto	i2u588_41
 13789  000068  EF38  F000         	goto	i2u588_40
 13790  00006C                     i2u588_41:
 13791  00006C  EF4E  F000         	goto	i2l667
 13792  000070                     i2u588_40:
 13793  000070  AA9E               	btfss	158,5,c	;volatile
 13794  000072  EF3D  F000         	goto	i2u589_41
 13795  000076  EF3F  F000         	goto	i2u589_40
 13796  00007A                     i2u589_41:
 13797  00007A  EF4E  F000         	goto	i2l667
 13798  00007E                     i2u589_40:
 13799  00007E                     
 13800                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART_RxDefaultInterruptHandler();
 13801  00007E  D802               	call	i2u590_48
 13802  000080  EF4C  F000         	goto	i2u590_49
 13803  000084                     i2u590_48:
 13804  000084  0005               	push	
 13805  000086  6EFA               	movwf	pclath,c
 13806  000088  0101               	movlb	1	; () banked
 13807  00008A  51B3               	movf	_EUSART_RxDefaultInterruptHandler& (0+255),w,b
 13808  00008C  6EFD               	movwf	tosl,c
 13809  00008E  51B4               	movf	(_EUSART_RxDefaultInterruptHandler+1)& (0+255),w,b
 13810  000090  6EFE               	movwf	tosh,c
 13811  000092  6AFF               	clrf	tosu,c
 13812  000094  50FA               	movf	pclath,w,c
 13813  000096  0012               	return		;indir
 13814  000098                     i2u590_49:
 13815                           
 13816                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 13817  000098  EF4E  F000         	goto	i2l671
 13818  00009C                     i2l667:
 13819  00009C                     i2l671:
 13820  00009C  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 13821  0000A0  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 13822  0000A4  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 13823  0000A8  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 13824  0000AC  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13825  0000AE  0011               	retfie		f
 13826  0000B0                     __end_of_INTERRUPT_InterruptManager:
 13827                           	callstack 0
 13828                           
 13829 ;; *************** function _EUSART_Transmit_ISR *****************
 13830 ;; Defined at:
 13831 ;;		line 206 in file "mcc_generated_files/eusart.c"
 13832 ;; Parameters:    Size  Location     Type
 13833 ;;		None
 13834 ;; Auto vars:     Size  Location     Type
 13835 ;;		None
 13836 ;; Return value:  Size  Location     Type
 13837 ;;                  1    wreg      void 
 13838 ;; Registers used:
 13839 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13840 ;; Tracked objects:
 13841 ;;		On entry : 0/0
 13842 ;;		On exit  : 0/0
 13843 ;;		Unchanged: 0/0
 13844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13849 ;;Total ram usage:        0 bytes
 13850 ;; Hardware stack levels used: 1
 13851 ;; This function calls:
 13852 ;;		Nothing
 13853 ;; This function is called by:
 13854 ;;		_EUSART_Initialize
 13855 ;;		_INTERRUPT_InterruptManager
 13856 ;; This function uses a non-reentrant model
 13857 ;;
 13858                           
 13859                           	psect	text106
 13860  00474A                     __ptext106:
 13861                           	callstack 0
 13862  00474A                     _EUSART_Transmit_ISR:
 13863                           	callstack 17
 13864  00474A                     
 13865                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 13866  00474A  0E08               	movlw	8
 13867  00474C  0100               	movlb	0	; () banked
 13868  00474E  61FE               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
 13869  004750  EFAC  F023         	goto	i2u564_41
 13870  004754  EFAE  F023         	goto	i2u564_40
 13871  004758                     i2u564_41:
 13872  004758  EFC4  F023         	goto	i2l607
 13873  00475C                     i2u564_40:
 13874  00475C                     
 13875                           ; BSR set to: 0
 13876                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
 13877  00475C  0E3E               	movlw	low _eusartTxBuffer
 13878  00475E  2459               	addwf	_eusartTxTail^0,w,c	;volatile
 13879  004760  6ED9               	movwf	fsr2l,c
 13880  004762  6ADA               	clrf	fsr2h,c
 13881  004764  0E01               	movlw	high _eusartTxBuffer
 13882  004766  22DA               	addwfc	fsr2h,f,c
 13883  004768  50DF               	movf	indf2,w,c
 13884  00476A  6EAD               	movwf	173,c	;volatile
 13885  00476C                     
 13886                           ; BSR set to: 0
 13887  00476C  2A59               	incf	_eusartTxTail^0,f,c	;volatile
 13888  00476E                     
 13889                           ; BSR set to: 0
 13890                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 13891  00476E  0E07               	movlw	7
 13892  004770  6459               	cpfsgt	_eusartTxTail^0,c	;volatile
 13893  004772  EFBD  F023         	goto	i2u565_41
 13894  004776  EFBF  F023         	goto	i2u565_40
 13895  00477A                     i2u565_41:
 13896  00477A  EFC1  F023         	goto	i2l5932
 13897  00477E                     i2u565_40:
 13898  00477E                     
 13899                           ; BSR set to: 0
 13900                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 13901  00477E  0E00               	movlw	0
 13902  004780  6E59               	movwf	_eusartTxTail^0,c	;volatile
 13903  004782                     i2l5932:
 13904                           
 13905                           ; BSR set to: 0
 13906                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 13907  004782  2BFE               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 13908                           
 13909                           ;mcc_generated_files/eusart.c: 218:     }
 13910  004784  EFC5  F023         	goto	i2l610
 13911  004788                     i2l607:
 13912                           
 13913                           ; BSR set to: 0
 13914                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TX1IE = 0;
 13915  004788  989D               	bcf	157,4,c	;volatile
 13916  00478A                     i2l610:
 13917                           
 13918                           ; BSR set to: 0
 13919  00478A  0012               	return		;funcret
 13920  00478C                     __end_of_EUSART_Transmit_ISR:
 13921                           	callstack 0
 13922                           
 13923 ;; *************** function _EUSART_Receive_ISR *****************
 13924 ;; Defined at:
 13925 ;;		line 225 in file "mcc_generated_files/eusart.c"
 13926 ;; Parameters:    Size  Location     Type
 13927 ;;		None
 13928 ;; Auto vars:     Size  Location     Type
 13929 ;;		None
 13930 ;; Return value:  Size  Location     Type
 13931 ;;                  1    wreg      void 
 13932 ;; Registers used:
 13933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 13934 ;; Tracked objects:
 13935 ;;		On entry : 0/0
 13936 ;;		On exit  : 0/0
 13937 ;;		Unchanged: 0/0
 13938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13943 ;;Total ram usage:        0 bytes
 13944 ;; Hardware stack levels used: 1
 13945 ;; Hardware stack levels required when called: 2
 13946 ;; This function calls:
 13947 ;;		Absolute function
 13948 ;;		_EUSART_DefaultErrorHandler
 13949 ;;		_EUSART_DefaultFramingErrorHandler
 13950 ;;		_EUSART_DefaultOverrunErrorHandler
 13951 ;;		_EUSART_RxDataHandler
 13952 ;; This function is called by:
 13953 ;;		_EUSART_Initialize
 13954 ;;		_INTERRUPT_InterruptManager
 13955 ;; This function uses a non-reentrant model
 13956 ;;
 13957                           
 13958                           	psect	text107
 13959  003B5C                     __ptext107:
 13960                           	callstack 0
 13961  003B5C                     _EUSART_Receive_ISR:
 13962                           	callstack 15
 13963  003B5C                     
 13964                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 13965  003B5C  0E2E               	movlw	low _eusartRxStatusBuffer
 13966  003B5E  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 13967  003B60  6ED9               	movwf	fsr2l,c
 13968  003B62  6ADA               	clrf	fsr2h,c
 13969  003B64  0E01               	movlw	high _eusartRxStatusBuffer
 13970  003B66  22DA               	addwfc	fsr2h,f,c
 13971  003B68  0E00               	movlw	0
 13972  003B6A  6EDF               	movwf	indf2,c
 13973  003B6C                     
 13974                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
 13975  003B6C  A4AB               	btfss	171,2,c	;volatile
 13976  003B6E  EFBB  F01D         	goto	i2u566_41
 13977  003B72  EFBD  F01D         	goto	i2u566_40
 13978  003B76                     i2u566_41:
 13979  003B76  EFD1  F01D         	goto	i2l5942
 13980  003B7A                     i2u566_40:
 13981  003B7A                     
 13982                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 13983  003B7A  0E2E               	movlw	low _eusartRxStatusBuffer
 13984  003B7C  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 13985  003B7E  6ED9               	movwf	fsr2l,c
 13986  003B80  6ADA               	clrf	fsr2h,c
 13987  003B82  0E01               	movlw	high _eusartRxStatusBuffer
 13988  003B84  22DA               	addwfc	fsr2h,f,c
 13989  003B86  0101               	movlb	1	; () banked
 13990  003B88  82DF               	bsf	indf2,1,c
 13991  003B8A                     
 13992                           ; BSR set to: 1
 13993                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 13994  003B8A  D802               	call	i2u567_48
 13995  003B8C  EFD1  F01D         	goto	i2u567_49
 13996  003B90                     i2u567_48:
 13997  003B90  0005               	push	
 13998  003B92  6EFA               	movwf	pclath,c
 13999  003B94  51B1               	movf	_EUSART_FramingErrorHandler& (0+255),w,b
 14000  003B96  6EFD               	movwf	tosl,c
 14001  003B98  51B2               	movf	(_EUSART_FramingErrorHandler+1)& (0+255),w,b
 14002  003B9A  6EFE               	movwf	tosh,c
 14003  003B9C  6AFF               	clrf	tosu,c
 14004  003B9E  50FA               	movf	pclath,w,c
 14005  003BA0  0012               	return		;indir
 14006  003BA2                     i2u567_49:
 14007  003BA2                     i2l5942:
 14008                           
 14009                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
 14010  003BA2  A2AB               	btfss	171,1,c	;volatile
 14011  003BA4  EFD6  F01D         	goto	i2u568_41
 14012  003BA8  EFD8  F01D         	goto	i2u568_40
 14013  003BAC                     i2u568_41:
 14014  003BAC  EFEC  F01D         	goto	i2l5948
 14015  003BB0                     i2u568_40:
 14016  003BB0                     
 14017                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 14018  003BB0  0E2E               	movlw	low _eusartRxStatusBuffer
 14019  003BB2  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 14020  003BB4  6ED9               	movwf	fsr2l,c
 14021  003BB6  6ADA               	clrf	fsr2h,c
 14022  003BB8  0E01               	movlw	high _eusartRxStatusBuffer
 14023  003BBA  22DA               	addwfc	fsr2h,f,c
 14024  003BBC  0101               	movlb	1	; () banked
 14025  003BBE  84DF               	bsf	indf2,2,c
 14026  003BC0                     
 14027                           ; BSR set to: 1
 14028                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 14029  003BC0  D802               	call	i2u569_48
 14030  003BC2  EFEC  F01D         	goto	i2u569_49
 14031  003BC6                     i2u569_48:
 14032  003BC6  0005               	push	
 14033  003BC8  6EFA               	movwf	pclath,c
 14034  003BCA  51AF               	movf	_EUSART_OverrunErrorHandler& (0+255),w,b
 14035  003BCC  6EFD               	movwf	tosl,c
 14036  003BCE  51B0               	movf	(_EUSART_OverrunErrorHandler+1)& (0+255),w,b
 14037  003BD0  6EFE               	movwf	tosh,c
 14038  003BD2  6AFF               	clrf	tosu,c
 14039  003BD4  50FA               	movf	pclath,w,c
 14040  003BD6  0012               	return		;indir
 14041  003BD8                     i2u569_49:
 14042  003BD8                     i2l5948:
 14043                           
 14044                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 14045  003BD8  0E2E               	movlw	low _eusartRxStatusBuffer
 14046  003BDA  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 14047  003BDC  6ED9               	movwf	fsr2l,c
 14048  003BDE  6ADA               	clrf	fsr2h,c
 14049  003BE0  0E01               	movlw	high _eusartRxStatusBuffer
 14050  003BE2  22DA               	addwfc	fsr2h,f,c
 14051  003BE4  50DF               	movf	indf2,w,c
 14052  003BE6  B4D8               	btfsc	status,2,c
 14053  003BE8  EFF8  F01D         	goto	i2u570_41
 14054  003BEC  EFFA  F01D         	goto	i2u570_40
 14055  003BF0                     i2u570_41:
 14056  003BF0  EF09  F01E         	goto	i2l5952
 14057  003BF4                     i2u570_40:
 14058  003BF4                     
 14059                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 14060  003BF4  D802               	call	i2u571_48
 14061  003BF6  EF07  F01E         	goto	i2u571_49
 14062  003BFA                     i2u571_48:
 14063  003BFA  0005               	push	
 14064  003BFC  6EFA               	movwf	pclath,c
 14065  003BFE  0101               	movlb	1	; () banked
 14066  003C00  51AD               	movf	_EUSART_ErrorHandler& (0+255),w,b
 14067  003C02  6EFD               	movwf	tosl,c
 14068  003C04  51AE               	movf	(_EUSART_ErrorHandler+1)& (0+255),w,b
 14069  003C06  6EFE               	movwf	tosh,c
 14070  003C08  6AFF               	clrf	tosu,c
 14071  003C0A  50FA               	movf	pclath,w,c
 14072  003C0C  0012               	return		;indir
 14073  003C0E                     i2u571_49:
 14074                           
 14075                           ;mcc_generated_files/eusart.c: 242:     } else {
 14076  003C0E  EF0B  F01E         	goto	i2l617
 14077  003C12                     i2l5952:
 14078                           
 14079                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 14080  003C12  ECF7  F024         	call	_EUSART_RxDataHandler	;wreg free
 14081  003C16                     i2l617:
 14082  003C16  0012               	return		;funcret
 14083  003C18                     __end_of_EUSART_Receive_ISR:
 14084                           	callstack 0
 14085                           
 14086 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 14087 ;; Defined at:
 14088 ;;		line 261 in file "mcc_generated_files/eusart.c"
 14089 ;; Parameters:    Size  Location     Type
 14090 ;;		None
 14091 ;; Auto vars:     Size  Location     Type
 14092 ;;		None
 14093 ;; Return value:  Size  Location     Type
 14094 ;;                  1    wreg      void 
 14095 ;; Registers used:
 14096 ;;		None
 14097 ;; Tracked objects:
 14098 ;;		On entry : 0/0
 14099 ;;		On exit  : 0/0
 14100 ;;		Unchanged: 0/0
 14101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14106 ;;Total ram usage:        0 bytes
 14107 ;; Hardware stack levels used: 1
 14108 ;; This function calls:
 14109 ;;		Nothing
 14110 ;; This function is called by:
 14111 ;;		_EUSART_Initialize
 14112 ;;		_EUSART_Receive_ISR
 14113 ;; This function uses a non-reentrant model
 14114 ;;
 14115                           
 14116                           	psect	text108
 14117  004CCA                     __ptext108:
 14118                           	callstack 0
 14119  004CCA                     _EUSART_DefaultOverrunErrorHandler:
 14120                           	callstack 16
 14121  004CCA                     
 14122                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
 14123  004CCA  98AB               	bcf	171,4,c	;volatile
 14124                           
 14125                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
 14126  004CCC  88AB               	bsf	171,4,c	;volatile
 14127  004CCE  0012               	return		;funcret
 14128  004CD0                     __end_of_EUSART_DefaultOverrunErrorHandler:
 14129                           	callstack 0
 14130                           
 14131 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 14132 ;; Defined at:
 14133 ;;		line 259 in file "mcc_generated_files/eusart.c"
 14134 ;; Parameters:    Size  Location     Type
 14135 ;;		None
 14136 ;; Auto vars:     Size  Location     Type
 14137 ;;		None
 14138 ;; Return value:  Size  Location     Type
 14139 ;;                  1    wreg      void 
 14140 ;; Registers used:
 14141 ;;		None
 14142 ;; Tracked objects:
 14143 ;;		On entry : 0/0
 14144 ;;		On exit  : 0/0
 14145 ;;		Unchanged: 0/0
 14146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14151 ;;Total ram usage:        0 bytes
 14152 ;; Hardware stack levels used: 1
 14153 ;; This function calls:
 14154 ;;		Nothing
 14155 ;; This function is called by:
 14156 ;;		_EUSART_Initialize
 14157 ;;		_EUSART_Receive_ISR
 14158 ;; This function uses a non-reentrant model
 14159 ;;
 14160                           
 14161                           	psect	text109
 14162  004D0C                     __ptext109:
 14163                           	callstack 0
 14164  004D0C                     _EUSART_DefaultFramingErrorHandler:
 14165                           	callstack 16
 14166  004D0C  0012               	return		;funcret
 14167  004D0E                     __end_of_EUSART_DefaultFramingErrorHandler:
 14168                           	callstack 0
 14169                           
 14170 ;; *************** function _EUSART_DefaultErrorHandler *****************
 14171 ;; Defined at:
 14172 ;;		line 269 in file "mcc_generated_files/eusart.c"
 14173 ;; Parameters:    Size  Location     Type
 14174 ;;		None
 14175 ;; Auto vars:     Size  Location     Type
 14176 ;;		None
 14177 ;; Return value:  Size  Location     Type
 14178 ;;                  1    wreg      void 
 14179 ;; Registers used:
 14180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14181 ;; Tracked objects:
 14182 ;;		On entry : 0/0
 14183 ;;		On exit  : 0/0
 14184 ;;		Unchanged: 0/0
 14185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14190 ;;Total ram usage:        0 bytes
 14191 ;; Hardware stack levels used: 1
 14192 ;; Hardware stack levels required when called: 1
 14193 ;; This function calls:
 14194 ;;		_EUSART_RxDataHandler
 14195 ;; This function is called by:
 14196 ;;		_EUSART_Initialize
 14197 ;;		_EUSART_Receive_ISR
 14198 ;; This function uses a non-reentrant model
 14199 ;;
 14200                           
 14201                           	psect	text110
 14202  004CD0                     __ptext110:
 14203                           	callstack 0
 14204  004CD0                     _EUSART_DefaultErrorHandler:
 14205                           	callstack 15
 14206  004CD0                     
 14207                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 14208  004CD0  ECF7  F024         	call	_EUSART_RxDataHandler	;wreg free
 14209  004CD4  0012               	return		;funcret
 14210  004CD6                     __end_of_EUSART_DefaultErrorHandler:
 14211                           	callstack 0
 14212                           
 14213 ;; *************** function _EUSART_RxDataHandler *****************
 14214 ;; Defined at:
 14215 ;;		line 249 in file "mcc_generated_files/eusart.c"
 14216 ;; Parameters:    Size  Location     Type
 14217 ;;		None
 14218 ;; Auto vars:     Size  Location     Type
 14219 ;;		None
 14220 ;; Return value:  Size  Location     Type
 14221 ;;                  1    wreg      void 
 14222 ;; Registers used:
 14223 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14224 ;; Tracked objects:
 14225 ;;		On entry : 0/0
 14226 ;;		On exit  : 0/0
 14227 ;;		Unchanged: 0/0
 14228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14233 ;;Total ram usage:        0 bytes
 14234 ;; Hardware stack levels used: 1
 14235 ;; This function calls:
 14236 ;;		Nothing
 14237 ;; This function is called by:
 14238 ;;		_EUSART_Receive_ISR
 14239 ;;		_EUSART_DefaultErrorHandler
 14240 ;; This function uses a non-reentrant model
 14241 ;;
 14242                           
 14243                           	psect	text111
 14244  0049EE                     __ptext111:
 14245                           	callstack 0
 14246  0049EE                     _EUSART_RxDataHandler:
 14247                           	callstack 16
 14248  0049EE                     
 14249                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
 14250  0049EE  0E36               	movlw	low _eusartRxBuffer
 14251  0049F0  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 14252  0049F2  6ED9               	movwf	fsr2l,c
 14253  0049F4  6ADA               	clrf	fsr2h,c
 14254  0049F6  0E01               	movlw	high _eusartRxBuffer
 14255  0049F8  22DA               	addwfc	fsr2h,f,c
 14256  0049FA  CFAE FFDF          	movff	4014,indf2	;volatile
 14257  0049FE  2A58               	incf	_eusartRxHead^0,f,c	;volatile
 14258  004A00                     
 14259                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 14260  004A00  0E07               	movlw	7
 14261  004A02  6458               	cpfsgt	_eusartRxHead^0,c	;volatile
 14262  004A04  EF06  F025         	goto	i2u536_41
 14263  004A08  EF08  F025         	goto	i2u536_40
 14264  004A0C                     i2u536_41:
 14265  004A0C  EF0A  F025         	goto	i2l5662
 14266  004A10                     i2u536_40:
 14267  004A10                     
 14268                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 14269  004A10  0E00               	movlw	0
 14270  004A12  6E58               	movwf	_eusartRxHead^0,c	;volatile
 14271  004A14                     i2l5662:
 14272                           
 14273                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 14274  004A14  2A56               	incf	_eusartRxCount^0,f,c	;volatile
 14275  004A16  0012               	return		;funcret
 14276  004A18                     __end_of_EUSART_RxDataHandler:
 14277                           	callstack 0
 14278                           
 14279                           	psect	text112
 14280  000000                     __ptext112:
 14281                           	callstack 0
 14282  000000                     
 14283                           	psect	rparam
 14284  0000                     
 14285                           	psect	temp
 14286  00005B                     btemp:
 14287                           	callstack 0
 14288  00005B                     	ds	1
 14289  0000                     int$flags	set	btemp
 14290  0000                     wtemp8	set	btemp+1
 14291  0000                     ttemp5	set	btemp+1
 14292  0000                     ttemp6	set	btemp+4
 14293  0000                     ttemp7	set	btemp+8
 14294                           
 14295                           	psect	idloc
 14296                           
 14297                           ;Config register IDLOC0 @ 0x200000
 14298                           ;	unspecified, using default values
 14299  200000                     	org	2097152
 14300  200000  FF                 	db	255
 14301                           
 14302                           ;Config register IDLOC1 @ 0x200001
 14303                           ;	unspecified, using default values
 14304  200001                     	org	2097153
 14305  200001  FF                 	db	255
 14306                           
 14307                           ;Config register IDLOC2 @ 0x200002
 14308                           ;	unspecified, using default values
 14309  200002                     	org	2097154
 14310  200002  FF                 	db	255
 14311                           
 14312                           ;Config register IDLOC3 @ 0x200003
 14313                           ;	unspecified, using default values
 14314  200003                     	org	2097155
 14315  200003  FF                 	db	255
 14316                           
 14317                           ;Config register IDLOC4 @ 0x200004
 14318                           ;	unspecified, using default values
 14319  200004                     	org	2097156
 14320  200004  FF                 	db	255
 14321                           
 14322                           ;Config register IDLOC5 @ 0x200005
 14323                           ;	unspecified, using default values
 14324  200005                     	org	2097157
 14325  200005  FF                 	db	255
 14326                           
 14327                           ;Config register IDLOC6 @ 0x200006
 14328                           ;	unspecified, using default values
 14329  200006                     	org	2097158
 14330  200006  FF                 	db	255
 14331                           
 14332                           ;Config register IDLOC7 @ 0x200007
 14333                           ;	unspecified, using default values
 14334  200007                     	org	2097159
 14335  200007  FF                 	db	255
 14336                           
 14337                           	psect	config
 14338                           
 14339                           ; Padding undefined space
 14340  300000                     	org	3145728
 14341  300000  FF                 	db	255
 14342                           
 14343                           ;Config register CONFIG1H @ 0x300001
 14344                           ;	Oscillator Selection bits
 14345                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
 14346                           ;	Fail-Safe Clock Monitor Enable bit
 14347                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 14348                           ;	Internal/External Oscillator Switchover bit
 14349                           ;	IESO = OFF, Oscillator Switchover mode disabled
 14350  300001                     	org	3145729
 14351  300001  08                 	db	8
 14352                           
 14353                           ;Config register CONFIG2L @ 0x300002
 14354                           ;	Power-up Timer Enable bit
 14355                           ;	PWRT = OFF, PWRT disabled
 14356                           ;	Brown-out Reset Enable bits
 14357                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 14358                           ;	Brown Out Reset Voltage bits
 14359                           ;	BORV = 18, VBOR set to 1.8 V nominal
 14360  300002                     	org	3145730
 14361  300002  1F                 	db	31
 14362                           
 14363                           ;Config register CONFIG2H @ 0x300003
 14364                           ;	Watchdog Timer Enable bit
 14365                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 14366                           ;	Watchdog Timer Postscale Select bits
 14367                           ;	WDTPS = 32768, 1:32768
 14368  300003                     	org	3145731
 14369  300003  1E                 	db	30
 14370                           
 14371                           ; Padding undefined space
 14372  300004                     	org	3145732
 14373  300004  FF                 	db	255
 14374                           
 14375                           ;Config register CONFIG3H @ 0x300005
 14376                           ;	CCP2 MUX bit
 14377                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 14378                           ;	PORTB A/D Enable bit
 14379                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 14380                           ;	Low-Power Timer1 Oscillator Enable bit
 14381                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 14382                           ;	HFINTOSC Fast Start-up
 14383                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 14384                           ;	MCLR Pin Enable bit
 14385                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
 14386  300005                     	org	3145733
 14387  300005  0B                 	db	11
 14388                           
 14389                           ;Config register CONFIG4L @ 0x300006
 14390                           ;	Stack Full/Underflow Reset Enable bit
 14391                           ;	STVREN = ON, Stack full/underflow will cause Reset
 14392                           ;	Single-Supply ICSP Enable bit
 14393                           ;	LVP = OFF, Single-Supply ICSP disabled
 14394                           ;	Extended Instruction Set Enable bit
 14395                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 14396                           ;	Background Debugger Enable bit
 14397                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 14398  300006                     	org	3145734
 14399  300006  81                 	db	129
 14400                           
 14401                           ; Padding undefined space
 14402  300007                     	org	3145735
 14403  300007  FF                 	db	255
 14404                           
 14405                           ;Config register CONFIG5L @ 0x300008
 14406                           ;	Code Protection Block 0
 14407                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 14408                           ;	Code Protection Block 1
 14409                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 14410                           ;	Code Protection Block 2
 14411                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 14412                           ;	Code Protection Block 3
 14413                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 14414  300008                     	org	3145736
 14415  300008  0F                 	db	15
 14416                           
 14417                           ;Config register CONFIG5H @ 0x300009
 14418                           ;	Boot Block Code Protection bit
 14419                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 14420                           ;	Data EEPROM Code Protection bit
 14421                           ;	CPD = OFF, Data EEPROM not code-protected
 14422  300009                     	org	3145737
 14423  300009  C0                 	db	192
 14424                           
 14425                           ;Config register CONFIG6L @ 0x30000A
 14426                           ;	Write Protection Block 0
 14427                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 14428                           ;	Write Protection Block 1
 14429                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 14430                           ;	Write Protection Block 2
 14431                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 14432                           ;	Write Protection Block 3
 14433                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 14434  30000A                     	org	3145738
 14435  30000A  0F                 	db	15
 14436                           
 14437                           ;Config register CONFIG6H @ 0x30000B
 14438                           ;	Configuration Register Write Protection bit
 14439                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 14440                           ;	Boot Block Write Protection bit
 14441                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 14442                           ;	Data EEPROM Write Protection bit
 14443                           ;	WRTD = OFF, Data EEPROM not write-protected
 14444  30000B                     	org	3145739
 14445  30000B  E0                 	db	224
 14446                           
 14447                           ;Config register CONFIG7L @ 0x30000C
 14448                           ;	Table Read Protection Block 0
 14449                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 14450                           ;	Table Read Protection Block 1
 14451                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 14452                           ;	Table Read Protection Block 2
 14453                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 14454                           ;	Table Read Protection Block 3
 14455                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 14456  30000C                     	org	3145740
 14457  30000C  0F                 	db	15
 14458                           
 14459                           ;Config register CONFIG7H @ 0x30000D
 14460                           ;	Boot Block Table Read Protection bit
 14461                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 14462  30000D                     	org	3145741
 14463  30000D  40                 	db	64
 14464                           tosu	equ	0xFFF
 14465                           tosh	equ	0xFFE
 14466                           tosl	equ	0xFFD
 14467                           stkptr	equ	0xFFC
 14468                           pclatu	equ	0xFFB
 14469                           pclath	equ	0xFFA
 14470                           pcl	equ	0xFF9
 14471                           tblptru	equ	0xFF8
 14472                           tblptrh	equ	0xFF7
 14473                           tblptrl	equ	0xFF6
 14474                           tablat	equ	0xFF5
 14475                           prodh	equ	0xFF4
 14476                           prodl	equ	0xFF3
 14477                           indf0	equ	0xFEF
 14478                           postinc0	equ	0xFEE
 14479                           postdec0	equ	0xFED
 14480                           preinc0	equ	0xFEC
 14481                           plusw0	equ	0xFEB
 14482                           fsr0h	equ	0xFEA
 14483                           fsr0l	equ	0xFE9
 14484                           wreg	equ	0xFE8
 14485                           indf1	equ	0xFE7
 14486                           postinc1	equ	0xFE6
 14487                           postdec1	equ	0xFE5
 14488                           preinc1	equ	0xFE4
 14489                           plusw1	equ	0xFE3
 14490                           fsr1h	equ	0xFE2
 14491                           fsr1l	equ	0xFE1
 14492                           bsr	equ	0xFE0
 14493                           indf2	equ	0xFDF
 14494                           postinc2	equ	0xFDE
 14495                           postdec2	equ	0xFDD
 14496                           preinc2	equ	0xFDC
 14497                           plusw2	equ	0xFDB
 14498                           fsr2h	equ	0xFDA
 14499                           fsr2l	equ	0xFD9
 14500                           status	equ	0xFD8

Data Sizes:
    Strings     122
    Constant    32
    Data        4
    BSS         203
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      90
    BANK0           160    131     159
    BANK1           256      6     191
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2630$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2636$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2642$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX_EMPTY$2648$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2647	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2642	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_RX$2641	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2636	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_TX$2635	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX$2630	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2629	const PTR FTN()enum E3103 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2067_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_4(CODE[26]), STR_3(CODE[26]), STR_2(CODE[25]), STR_1(CODE[26]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_4(CODE[26]), STR_3(CODE[26]), STR_2(CODE[25]), STR_1(CODE[26]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_4(CODE[26]), STR_3(CODE[26]), STR_2(CODE[25]), STR_1(CODE[26]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_4(CODE[26]), STR_3(CODE[26]), STR_2(CODE[25]), STR_1(CODE[26]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    INA219_ReadRegister@data	PTR unsigned short  size(2) Largest target is 2
		 -> INA219_getCurrent_raw@value(COMRAM[2]), INA219_getShuntVoltage_raw@value(COMRAM[2]), INA219_getBusVoltage_raw@value(COMRAM[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> INA219_WriteRegister@writeBuffer(COMRAM[3]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> INA219_WriteRegister@writeBuffer(COMRAM[3]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> INA219_WriteRegister@writeBuffer(COMRAM[3]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E3103[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S96$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0

    I2C_WriteNBytes@data	PTR unsigned char  size(2) Largest target is 3
		 -> INA219_WriteRegister@writeBuffer(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _main->_INA219_getBusVoltage_V
    _main->_INA219_getShuntVoltage_mV
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _INA219_setCalibration_32V_2A->_INA219_WriteRegister
    _INA219_getShuntVoltage_mV->___flmul
    _INA219_getShuntVoltage_raw->_INA219_ReadRegister
    _INA219_getPower_mW->___flmul
    _INA219_getPower_raw->_INA219_WriteRegister
    _INA219_WriteRegister->_I2C_WriteNBytes
    _INA219_getCurrent_mA->___flmul
    ___fldiv->___xxtofl
    _INA219_getCurrent_raw->_INA219_ReadRegister
    _INA219_getBusVoltage_V->___flmul
    ___xxtofl->_INA219_getCurrent_raw
    ___xxtofl->_INA219_getPower_raw
    ___flmul->___fldiv
    _INA219_getBusVoltage_raw->_INA219_ReadRegister
    _INA219_ReadRegister->_I2C_Read2ByteRegister
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    ___flsub->___flmul
    ___flge->___flmul
    _INA219_getShuntVoltage_mV->___flmul
    _INA219_getPower_mW->___flmul
    _INA219_getCurrent_mA->___flmul
    _INA219_getBusVoltage_V->___flmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  540750
                                            129 BANK0      2     2      0
                  _INA219_Initialize
             _INA219_getBusVoltage_V
               _INA219_getCurrent_mA
                 _INA219_getPower_mW
          _INA219_getShuntVoltage_mV
       _INA219_setCalibration_32V_2A
                  _SYSTEM_Initialize
                            ___fldiv
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   40285
                                            127 BANK0      2     2      0
                                              0 BANK1      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   39826
                                            119 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   39299
                                             97 BANK0     22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   30620
                                             29 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             10 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3957
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             75 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             17 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     986
                                             17 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    3385
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2282
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _INA219_setCalibration_32V_2A                         0     0      0   93470
               _INA219_WriteRegister
 ---------------------------------------------------------------------------------
 (1) _INA219_getShuntVoltage_mV                            6     2      4  100544
                                             83 COMRAM     2     2      0
                                             17 BANK0      4     0      4
         _INA219_getShuntVoltage_raw
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _INA219_getShuntVoltage_raw                           4     2      2   95419
                                             32 COMRAM     4     2      2
                _INA219_ReadRegister
 ---------------------------------------------------------------------------------
 (1) _INA219_getPower_mW                                   8     4      4   98673
                                             17 BANK0      8     4      4
                _INA219_getPower_raw
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _INA219_getPower_raw                                  4     2      2   93514
                                             32 COMRAM     4     2      2
               _INA219_WriteRegister
 ---------------------------------------------------------------------------------
 (2) _INA219_WriteRegister                                 6     4      2   93470
                                             26 COMRAM     6     4      2
                    _I2C_WriteNBytes
 ---------------------------------------------------------------------------------
 (3) _I2C_WriteNBytes                                      5     1      4   92646
                                             21 COMRAM     5     1      4
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (1) _INA219_getCurrent_mA                                 8     4      4  103661
                                             17 BANK0      8     4      4
              _INA219_getCurrent_raw
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3083
                                             50 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _INA219_getCurrent_raw                                4     2      2   95419
                                             32 COMRAM     4     2      2
                _INA219_ReadRegister
 ---------------------------------------------------------------------------------
 (1) _INA219_getBusVoltage_V                               8     4      4  100544
                                             83 COMRAM     2     2      0
                                             17 BANK0      6     2      4
           _INA219_getBusVoltage_raw
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     778
                                             36 COMRAM    14    10      4
              _INA219_getCurrent_raw (ARG)
                _INA219_getPower_raw (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4313
                                             75 COMRAM     8     0      8
                                              0 BANK0     17    17      0
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _INA219_getBusVoltage_raw                             4     2      2   95419
                                             32 COMRAM     4     2      2
                _INA219_ReadRegister
 ---------------------------------------------------------------------------------
 (3) _INA219_ReadRegister                                  3     1      2   95373
                                             29 COMRAM     3     1      2
              _I2C_Read2ByteRegister
 ---------------------------------------------------------------------------------
 (4) _I2C_Read2ByteRegister                                8     6      2   95101
                                             21 COMRAM     8     6      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetAddressNackCallback                           4     0      4    1870
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_Open                                             2     2      0      46
                                              4 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterWrite                                      0     0      0   88620
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOperation                                  2     2      0   88620
                                             19 COMRAM     2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (6) _I2C_Poller                                           0     0      0   88574
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterFsm                                        2     2      0   88574
                                             17 COMRAM     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX_EMPTY                                      2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX                                            2     2      0   22149
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendTxData                                 1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX                                            2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_ADDRESS_NACK                                  2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _wr2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _wr1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rdBlkRegCompleteHandler                              2     0      2    4390
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _I2C_SetDataCompleteCallback                         4     0      4    2478
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C_SetCallback                                      5     1      4     914
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _I2C_SetBuffer                                        4     0      4    1868
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnStop                               2     0      2       0
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnReset                              2     0      2     265
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Close                                            1     1      0      24
                                              4 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INA219_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INA219_Initialize
   _INA219_getBusVoltage_V
     _INA219_getBusVoltage_raw
       _INA219_ReadRegister
         _I2C_Read2ByteRegister
           _I2C_Close
             _I2C_MasterClearIrq
             _I2C_MasterClose
             _I2C_MasterDisableIrq
           _I2C_MasterWrite
             _I2C_MasterOperation
               _I2C_MasterStart
               _I2C_Poller
                 _I2C_MasterFsm
                   _I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _I2C_CallbackReturnReset *
                     _I2C_CallbackReturnStop *
                     _I2C_DO_SEND_RESTART *
                       _I2C_MasterEnableRestart
                     _I2C_DO_SEND_STOP *
                       _I2C_MasterStop
                     _rd1RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                     _rd2RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                     _rdBlkRegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                     _wr1RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                     _wr2RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                   _I2C_DO_IDLE *
                   _I2C_DO_RCEN *
                     _I2C_MasterStartRx
                   _I2C_DO_RESET *
                   _I2C_DO_RX *
                     Absolute function(Fake) *
                     _I2C_CallbackReturnReset *
                     _I2C_CallbackReturnStop *
                     _I2C_DO_RX_NACK_RESTART *
                       _I2C_MasterSendNack
                     _I2C_DO_RX_NACK_STOP *
                       _I2C_MasterSendNack
                     _I2C_MasterGetRxData *
                     _I2C_MasterSendAck *
                     _rd1RegCompleteHandler *
                     _rd2RegCompleteHandler *
                     _rdBlkRegCompleteHandler *
                     _wr1RegCompleteHandler *
                     _wr2RegCompleteHandler *
                   _I2C_DO_RX_ACK *
                     _I2C_MasterSendAck
                   _I2C_DO_RX_NACK_RESTART *
                   _I2C_DO_RX_NACK_STOP *
                   _I2C_DO_SEND_ADR_READ *
                     _I2C_MasterSendTxData
                   _I2C_DO_SEND_ADR_WRITE *
                     _I2C_MasterSendTxData
                   _I2C_DO_SEND_RESTART *
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                   _I2C_DO_TX *
                     Absolute function(Fake) *
                     _I2C_CallbackReturnReset *
                     _I2C_CallbackReturnStop *
                     _I2C_DO_SEND_RESTART_READ *
                     _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_DO_SEND_STOP *
                     _I2C_MasterIsNack *
                     _I2C_MasterSendTxData *
                     _rd1RegCompleteHandler *
                     _rd2RegCompleteHandler *
                     _rdBlkRegCompleteHandler *
                     _wr1RegCompleteHandler *
                     _wr2RegCompleteHandler *
                   _I2C_DO_TX_EMPTY *
                     Absolute function(Fake) *
                     _I2C_CallbackReturnReset *
                     _I2C_CallbackReturnStop *
                     _I2C_DO_SEND_RESTART *
                     _I2C_DO_SEND_STOP *
                     _I2C_MasterSetIrq *
                     _rd1RegCompleteHandler *
                     _rd2RegCompleteHandler *
                     _rdBlkRegCompleteHandler *
                     _wr1RegCompleteHandler *
                     _wr2RegCompleteHandler *
                   _I2C_MasterClearIrq *
                   _I2C_MasterIsNack *
                 _I2C_MasterWaitForEvent
           _I2C_Open
             _I2C_MasterClearIrq
             _I2C_MasterOpen
           _I2C_SetAddressNackCallback
             _I2C_SetCallback
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
     ___flmul
       ___fldiv (ARG)
         ___xxtofl (ARG)
           _INA219_getCurrent_raw (ARG)
             _INA219_ReadRegister
           _INA219_getPower_raw (ARG)
             _INA219_WriteRegister
               _I2C_WriteNBytes
                 _I2C_Close
                 _I2C_MasterWrite
                 _I2C_Open
                 _I2C_SetAddressNackCallback
                 _I2C_SetBuffer
       ___xxtofl (ARG)
     ___xxtofl
   _INA219_getCurrent_mA
     _INA219_getCurrent_raw
     ___fldiv
     ___flmul
     ___xxtofl
   _INA219_getPower_mW
     _INA219_getPower_raw
     ___flmul
     ___xxtofl
   _INA219_getShuntVoltage_mV
     _INA219_getShuntVoltage_raw
       _INA219_ReadRegister
     ___flmul
     ___xxtofl
   _INA219_setCalibration_32V_2A
     _INA219_WriteRegister
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   ___fldiv
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6      BF       7       74.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     83      9F       5       99.4%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      5A       1       95.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B8      32        0.0%
DATA                 0      0     1B8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 21 10:04:55 2021

                ?_EUSART_SetRxInterruptHandler 0005                         ??_I2C_DO_SEND_ADR_READ 0005  
                     INA219_WriteRegister@data 001B                      __end_of_INA219_Initialize 4D0C  
                  __size_of_I2C_MasterSendNack 0006                             __size_of_I2C_Close 002C  
                                 ___fldiv@aexp 004B                                   ___fldiv@bexp 004A  
                                 ___fldiv@sign 0043                        ??_I2C_DO_SEND_ADR_WRITE 0006  
                                  _SSPSTATbits 000FC7                                             l42 4068  
                                           l90 4994                                             l93 4968  
                                           l69 457A                                             l96 493C  
                                           l99 49C0                                   ___awdiv@sign 000A  
                          ___wmul@multiplicand 0007                     __end_of_INA219_getPower_mW 40EE  
                          __size_of_I2C_Poller 001E                          ??_I2C_DO_SEND_RESTART 0005  
                 __size_of_I2C_MasterOperation 0044                                            l102 47CA  
                                          l213 3FE2                                            l223 4748  
                                          l312 4168                                            l217 49EC  
                __size_of_I2C_MasterSendTxData 0008                                            l209 4BC6  
                                          l402 4CF0                                            l306 4C22  
                                          l330 4CB4                                            l411 4CC8  
                                          l236 4AAE                                            l405 4BDA  
                                          l333 4CAC                                            l229 4C7C  
                                          l245 4B84                                            l342 4C94  
                                          l262 4B0C                                            l239 4B9C  
                                          l351 4C16                                            l256 41E2  
                                          l408 4CC2                                            l432 4CDC  
                                          l272 4C0A                                            l336 4CA4  
                                          l281 3B5A                                            l345 4C8C  
                                          l426 4CFC                                            l266 433C  
                                          l275 4BFA                                            l339 4C9C  
                                          l435 4BDC                                            l348 4C84  
                                          l604 4C38                                            l429 4D04  
                                          l381 4D00                                            l365 4CEC  
                                          l269 4C2E                                            l357 43A2  
                                          l390 4CF4                                            l278 3B22  
                                          l294 3E50                                            l295 3EBE  
                                          l439 4BEA                                            l368 4CE8  
                                          l384 4CE0                                            l456 4BB2  
                                          l633 4C6A                                            l378 4AD0  
                                          l642 4C4C                                            l570 4258  
                                          l387 4CBC                                            l459 4C42  
                                          l396 4CE4                                            l740 4AEE  
                                          l636 4C60                                            l660 4CD8  
                                          l492 4910                                            l645 4C56  
                                          l734 4D0A                                            l399 4CF8  
                                          l743 48AA                                            l639 4C74  
                                          l761 4B54                                            l737 4A8A  
                                          l770 4626                                            l594 4590  
                                          l755 4B6C                                            l595 45A6  
                                          l764 4B3C                                            l773 3E18  
                                          l758 4B24                                            l598 45D2  
                                          l767 42CC                                            l776 40EC  
                                          l779 4A64                         ??_EUSART_RxDataHandler 0001  
                                          _pad 390E                         fp__I2C_DO_RX_NACK_STOP 0000  
                       _I2C_MasterWaitForEvent 4BDC                 ?_EUSART_SetFramingErrorHandler 0005  
                                 ___awmod@sign 000A                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                                 ___flmul@aexp 0065                                   ___flmul@bexp 006A  
                  __end_of_INA219_getPower_raw 4B3E                   ??_I2C_SetAddressNackCallback 000E  
                                 ___flmul@sign 0064                                   ___flmul@temp 006F  
                                 ___flmul@prod 006B                       ??_I2C_CallbackReturnStop 0010  
                                 _I2C_DO_RESET 4C0C                                   ___fltol@exp1 000E  
                                         l1010 3A96                                           l1023 3CC6  
                                         l1044 36EC                        ??_rd2RegCompleteHandler 0010  
                                         l1053 483A                                           l1038 3D70  
                                         l1400 296E                                           l1049 3732  
                                         l1410 2A9E                                           l1402 29E6  
                                         l1403 29D4                                           l1307 1F32  
                                         l1324 204C                                           l1316 2202  
                                         l1308 1F20                                           l1076 362C  
                                         l1333 211C                                           l1309 1EE6  
                                         l1501 3996                                           l1334 210A  
                                         l1503 39D2                                           l1441 317C  
                                         l1361 2E76                                           l1521 1D42  
                                         l1434 30E4                                           l1363 2CD6  
                                         l4100 4CA6                                           l1372 2D1C  
                                         l1620 25CA                                           l1437 3240  
                                         l1349 46C0                                           l1613 26B0  
                                         l4030 41B2                                           l4102 4CAA  
                                         l1374 2D94                                           l1366 2C9A  
                                         l1375 2D82                                           l4040 4AAC  
                                         l4032 4B86                                           l4112 4CDE  
                                         l4200 3B58                                           l4120 4C82  
                                         l1448 31D8                                           l1393 2778  
                                         l1457 4A3E                                           l4042 4CF2  
                                         l4034 4A8C                                           l4026 416C  
                                         l4050 497E                                           l4130 4CE2  
                                         l4210 3E28                                           l4106 4C96  
                                         l1714 3F54                                           l1722 4704  
                                         l1626 43FE                                           l1539 14BA  
                                         l1627 4406                                           l4044 4CEE  
                                         l4036 4A9C                                           l4028 417E  
                                         l4052 4992                                           l4060 4966  
                                         l4140 4CEA                                           l4116 4CBE  
                                         l4212 3E2E                                           l4132 4C9E  
                                         l4108 4C9A                                           l4124 4C86  
                                         l1397 2ADC                                           l1637 3830  
                                         l4038 4AA4                                           l4046 4CC4  
                                         l4150 4C24                                           l4222 3E56  
                                         l4214 3E46                                           l4134 4CA2  
                                         l4126 4C8A                                           l4118 4C7E  
                                         l4302 435A                                           l1734 48E0  
                                         l1567 18F8                                           l4072 4996  
                                         l4048 496A                                           l4056 493E  
                                         l4064 4912                                           l4080 478C  
                                         l4144 4CE6                                           l4152 4C28  
                                         l4160 4C00                                           l4232 3E66  
                                         l4216 3E4A                                           l4208 3E1A  
                                         l4240 4C18                                           l1728 44C4  
                                         l1753 4466                                           l4074 49AA  
                                         l4058 4952                                           l4066 4926  
                                         l4082 47B4                                           l4138 4CDA  
                                         l4250 40F6                                           l4154 4C2C  
                                         l4162 4C08                                           l4170 4BF8  
                                         l4226 3E5E                                           l4242 4C1C  
                                         l4330 42CE                                           l1666 33D2  
                                         l1498 3954                                           l1738 390C  
                                         l1675 308C                                           l4148 4D02  
                                         l4076 49BE                                           l4068 493A  
                                         l4084 47C8                                           l4092 4CB8  
                                         l4260 4108                                           l4244 4C20  
                                         l4332 42D2                                           l1748 445E  
                                         l1685 4872                                           l1693 4678  
                                         l1669 33DA                                           l4342 4CF6  
                                         l4254 40FE                                           l4158 4BFC  
                                         l4166 4BEC                                           l4182 3AB8  
                                         l4174 3A98                                           l4094 4CAE  
                                         l4334 42E2                                           l4350 4AFC  
                                         l1678 2FD0                                           l4088 4BC8  
                                         l4256 4102                                           l4248 40EE  
                                         l4168 4BF0                                           l4192 3AC8  
                                         l4096 4CB2                                           l4280 4C0C  
                                         l4336 42F6                                           l4344 4AF0  
                                         l4266 4110                                           l4194 3B26  
                                         l4186 3AC0                                           l4178 3AB0  
                                         l4274 4C8E                                           l4282 4C10  
                                         l4290 4342                                           l4338 42FC  
                                         l4346 4AF4                                           l4370 4ACE  
                                         l5250 4018                                           l7010 360C  
                                         l1699 4802                                           l4196 3B38  
                                         l4276 4C92                                           l4284 4C14  
                                         l4292 434A                                           l4348 4AF8  
                                         l4380 470C                                           l5252 402C  
                                         l5244 3FE6                                           l7012 361C  
                                         l7004 35E0                                           l7020 3932  
                                         l4374 4CFA                                           l4198 3B52  
                                         l4390 473A                                           l4382 471C  
                                         l4366 4AB0                                           l4630 3F70  
                                         l5254 4040                                           l5246 3FEE  
                                         l5270 4562                                           l5262 4524  
                                         l7102 483C                                           l7110 4640  
                                         l7006 35EC                                           l6310 457E  
                                         l7030 3978                                           l7022 3940  
                                         ?_pad 0017                                           l4376 4CFE  
                                         l4296 4352                                           l4288 433E  
                                         l4392 473E                                           l4384 471E  
                                         l4368 4ABE                                           l4640 3F82  
                                         l4632 3F72                                           l4624 3F58  
                                         l5256 4044                                           l5248 4004  
                                         l5272 4566                                           l5264 4524  
                                         l7112 466E                                           l6400 1E5C  
                                         l7008 35FC                                           l7040 3754  
                                         l6320 45CA                                           l6312 459E  
                                         l7032 39A6                                           l7024 394C  
                                         l7016 390E                                           l7200 1420  
                                         l7120 10A6                                           l4394 4742  
                                         l4386 4722                                           l4378 4708  
                                         l4650 3FA4                                           l4642 3F84  
                                         l4634 3F74                                           l4626 3F5C  
                                         l5258 4058                                           l5266 453A  
                                         l7114 4672                                           l7106 4628  
                                         l6410 1E70                                           l6402 1E60  
                                         l7042 3792                                           l7050 37D2  
                                         l6322 45CE                                           l6314 45A8  
                                         l6330 3ED2                                           l7034 39BA  
                                         l7026 3960                                           l7018 391E  
                                         l7210 148C                                           l7202 1454  
                                         l7130 10FA                                           l7122 10B6  
                                         l4388 4732                                           l4396 4746  
                                         l4660 3FCC                                           l4652 3FAC  
                                         l4644 3F8C                                           l4636 3F76  
                                         l4628 3F6C                                           l5268 454E  
                                         l7108 462C                                           l6500 20CC  
                                         l6412 1E74                                           l6404 1E64  
                                         l6420 1E84                                           l7052 37E4  
                                         l7044 37BA                                           l6316 45B8  
                                         l6324 45D0                                           l6308 457E  
                                         l6332 3EE4                                           l7028 3974  
                                         l7060 4468                                           l7300 1914  
                                         l7212 1494                                           l7204 1464  
                                         l7140 1140                                           l7132 1102  
                                         l7124 10C4                                           l4662 3FD4  
                                         l4654 3FB4                                           l4646 3F94  
                                         l4638 3F7A                                           l6502 20DA  
                                         l6430 1EF4                                           l6422 1E88  
                                         l6414 1E78                                           l6406 1E68  
                                         l6350 1D70                                           l6342 1D44  
                                         l7046 37C6                                           l7038 3734  
                                         l6318 45BA                                           l6326 4C32  
                                         l6334 3EEE                                           l7062 4478  
                                         l7070 4450                                           l7310 19BA  
                                         l7302 1978                                           l7230 1544  
                                         l7222 14D8                                           l7214 14AE  
                                         l7206 1468                                           l7150 117C  
                                         l7142 1148                                           l7134 1114  
                                         l7126 10CC                                           l7118 109C  
                                         l4680 49C6                                           l4664 3FD8  
                                         l4656 3FBC                                           l4648 3F9C  
                                         l4672 4B6E                                           l6600 2B70  
                                         l5800 4214                                           l6512 212C  
                                         l6520 2182                                           l6504 20DE  
                                         l6440 1F1E                                           l6432 1F00  
                                         l6424 1EB2                                           l6416 1E7C  
                                         l6408 1E6C                                           l6360 1DAA  
                                         l6352 1D80                                           l6344 1D50  
                                         l7056 3828                                           l7080 2F04  
                                         l6336 3F0C                                           l6328 3EC0  
                                         l7064 4408                                           l7400 1C76  
                                         l7320 19F6                                           l7304 1988  
                                         l7312 19C2                                           l7240 1582  
                                         l7224 14EA                                           l7232 1548  
                                         l7208 147A                                           l7216 14C6  
                                         l7160 11F8                                           l7144 114C  
                                         l7136 1122                                           l7128 10F0  
                                         l4682 49D6                                           l4674 4C76  
                                         l4666 3FDC                                           l4658 3FC4  
                                         l6610 2BAA                                           l6602 2B80  
                                         l5650 4C58                                           l5802 4220  
                                         l6530 21D4                                           l6522 2192  
                                         l6514 2138                                           l6506 20EC  
                                         l6450 1F74                                           l6442 1F40  
                                         l6434 1F04                                           l6426 1ECE  
                                         l6418 1E80                                           l6370 1DD8  
                                         l6362 1DB0                                           l6354 1D90  
                                         l6346 1D5E                                           l7082 2F12  
                                         l7090 2FF4                                           l7074 2E78  
                                         l6338 3F42                                           l7410 1CC6  
                                         l7402 1C86                                           l7330 1A22  
                                         l7322 19FC                                           l7314 19D4  
                                         l7306 199A                                           l7250 15D0  
                                         l7242 1586                                           l7234 1550  
                                         l7226 1506                                           l7162 1202  
                                         l7154 11B2                                           l7146 1150  
                                         l7138 1134                                           l4684 49DA  
                                         l4668 3FE0                                           l5812 4B56  
                                         l6700 2E6A                                           l6612 2BC0  
                                         l6604 2B90                                           l5820 4B1C  
                                         l5652 4C6C                                           l5644 4C4E  
                                         l5804 422C                                           l6540 21F2  
                                         l6532 21DA                                           l6524 21A2  
                                         l6516 2146                                           l6508 2102  
                                         l6460 1FAE                                           l6452 1F82  
                                         l6444 1F50                                           l6436 1F12  
                                         l6428 1EDE                                           l6380 1E0C  
                                         l6372 1DDA                                           l6364 1DC2  
                                         l6356 1D92                                           l6348 1D60  
                                         l7092 3030                                           l7076 2E98  
                                         l7068 443E                                           l7420 1D02  
                                         l7412 1CD8                                           l7404 1C8C  
                                         l7324 1A08                                           l7316 19E2  
                                         l7332 1A28                                           l7340 1A56  
                                         l7308 19AC                                           l7260 1668  
                                         l7244 1598                                           l7252 15D8  
                                         l7236 1562                                           l7228 153C  
                                         l7180 12D6                                           l7172 1286  
                                         l7156 11C4                                           l7148 1156  
                                         l7500 227C                                           l4686 49E6  
                                         l4678 49C2                                           l5814 4B64  
                                         l6710 26B2                                           l6702 2E6C  
                                         l6630 2C14                                           l6614 2BD0  
                                         l6622 2BF0                                           l6606 2B92  
                                         l5670 4A74                                           l5830 4B26  
                                         l5646 4C44                                           l5806 4256  
                                         l7430 325A                                           l6534 21DC  
                                         l6526 21C2                                           l6518 2180  
                                         l6470 201A                                           l6462 1FB0  
                                         l6454 1F90                                           l6438 1F14  
                                         l6390 1E48                                           l6374 1DEA  
                                         l6382 1E14                                           l6366 1DC4  
                                         l6358 1D9A                                           l7094 3044  
                                         l7086 2F84                                           l7078 2EF0  
                                         l6550 46E4                                           l7414 1CE4  
                                         l7406 1C92                                           l7422 1D1E  
                                         l7350 1B0C                                           l7342 1AAE  
                                         l7334 1A3A                                           l7326 1A18  
                                         l7318 19F2                                           l7270 174C  
                                         l7262 16C0                                           l7254 15E0  
                                         l7246 15A6                                           l7238 1574  
                                         l7190 134E                                           l7174 1298  
                                         l7158 11E0                                           l7166 122A  
                                         l7510 2318                                           l7502 228A  
                                         l4688 49EA                                           l5672 4AD4  
                                         l6800 298C                                           l6720 26F0  
                                         l6712 26C0                                           l5840 30AE  
                                         l5824 4B3E                                           l6640 2C66  
                                         l6632 2C2E                                           l6624 2C00  
                                         l6616 2BD8                                           l6608 2B9A  
                                         l5664 4A68                                           l5832 4B34  
                                         l7600 4096                                           l5648 4C62  
                                         l7432 325E                                           l6536 21E2  
                                         l6528 21C6                                           l6480 2072  
                                         l6472 201C                                           l6464 1FBA  
                                         l6456 1F9C                                           l6448 1F64  
                                         l6392 1E4C                                           l6384 1E24  
                                         l6376 1DFA                                           l6368 1DCA  
                                         l7096 306C                                           l7088 2FC0  
                                         l6544 46C2                                           l6552 48AC  
                                         l7416 1CEC                                           l7360 1B5C  
                                         l7352 1B28                                           l7344 1AE2  
                                         l7336 1A4C                                           l7328 1A1C  
                                         l7280 17E6                                           l7272 1780  
                                         l7264 16F4                                           l7256 15F0  
                                         l7248 15BE                                           l7192 1382  
                                         l7176 12B4                                           l7168 1250  
                                         l7184 12FE                                           l7520 23A8  
                                         l7504 22B0                                           l6810 29F6  
                                         l6802 2990                                           l6730 2722  
                                         l6722 2700                                           l6714 26CE  
                                         l5850 3126                                           l5842 30F4  
                                         l5826 4B4C                                           l6650 2CC2  
                                         l6642 2C76                                           l6634 2C3E  
                                         l6626 2C00                                           l6618 2BDC  
                                         l7610 3E08                                           l5666 4A6C  
                                         l7602 40DC                                           l5818 4B0E  
                                         l5770 48E2                                           l7450 331A  
                                         l7442 32BE                                           l7434 327C  
                                         l7426 3242                                           l6538 21F0  
                                         l6490 20A0                                           l6474 202C  
                                         l6458 1FA0                                           l6466 1FC0  
                                         l6394 1E50                                           l6386 1E36  
                                         l6378 1E0A                                           l7098 307C  
                                         l6546 46CE                                           l6554 48B8  
                                         l6562 47CC                                           l7418 1CFC  
                                         l7370 1B9E                                           l7362 1B6C  
                                         l7354 1B3A                                           l7346 1AEA  
                                         l7338 1A50                                           l7290 18BE  
                                         l7282 181A                                           l7274 1794  
                                         l7258 1604                                           l7266 16FA  
                                         l7194 1388                                           l7186 1318  
                                         l7178 12CC                                           l7530 244A  
                                         l7522 23DC                                           l7514 2362  
                                         l7506 22EA                                           l6820 2A58  
                                         l6812 2A02                                           l6804 299E  
                                         l6740 2762                                           l6732 2730  
                                         l6724 2706                                           l6716 26D0  
                                         l5860 31AE                                           l5852 3132  
                                         l5844 310A                                           l5836 3090  
                                         l6660 2D02                                           l6652 2CC4  
                                         l6644 2C8A                                           l6636 2C4E  
                                         l6580 2B0A                                           l6572 2ADE  
                                         l5668 4A70                                           l5764 4BB4  
                                         l5780 490E                                           l5772 48FA  
                                         l7460 33A4                                           l7444 32D4  
                                         l7436 32B4                                           l7428 3256  
                                         l6900 3C44                                           l6492 20AE  
                                         l6484 2086                                           l6468 1FE6  
                                         l6476 203C                                           l6396 1E54  
                                         l6388 1E44                                           l6548 46E0  
                                         l6556 48BC                                           l7380 1BCE  
                                         l7372 1BAC                                           l7364 1B7E  
                                         l7356 1B48                                           l7348 1AEE  
                                         l7284 1872                                           l7292 18C2  
                                         l7276 17C6                                           l7268 1718  
                                         l7196 13E4                                           l7540 24E2  
                                         l7532 2458                                           l7524 23EC  
                                         l7508 230A                                           l7516 2374  
                                         l7620 33DC                                           l6830 2AC0  
                                         l6822 2A6C                                           l6814 2A10  
                                         l6806 29CC                                           l6750 27AC  
                                         l6742 2768                                           l6734 2732  
                                         l6726 2716                                           l6718 26E0  
                                         l5870 31EC                                           l5862 31BA  
                                         l5854 3164                                           l5838 30A0  
                                         l6670 2D3E                                           l6662 2D0C  
                                         l6654 2CD4                                           l6646 2C98  
                                         l6638 2C5E                                           l6590 2B44  
                                         l6582 2B1A                                           l6574 2AEA  
                                         l7606 3D72                                           l5790 4200  
                                         l5766 4BC4                                           l5782 4C3A  
                                         l5774 48FC                                           l6566 4A40  
                                         l7462 33B6                                           l7454 3352  
                                         l7446 32DC                                           l7438 32B8  
                                         l6910 3C7C                                           l6902 3C4C  
                                         l6494 20B6                                           l6486 2090  
                                         l6478 2062                                           l6398 1E58  
                                         l6558 48D4                                           l7390 1C30  
                                         l7382 1BF4                                           l7374 1BB4  
                                         l7366 1B86                                           l7358 1B58  
                                         l7294 18D2                                           l7286 1876  
                                         l7278 17D6                                           l7198 1418  
                                         l7470 385C                                           l7550 25DA  
                                         l7534 2488                                           l7526 2420  
                                         l7518 2398                                           l7614 4A18  
                                         l7630 3406                                           l7622 33E0  
                                         l6832 2AC2                                           l6824 2A86  
                                         l6816 2A3A                                           l6760 27FC  
                                         l6752 27B8                                           l6744 2788  
                                         l6736 2742                                           l6728 271C  
                                         l5872 3210                                           l5864 31C8  
                                         l5856 3166                                           l5848 311E  
                                         l6680 2DB0                                           l6672 2D4C  
                                         l6664 2D1A                                           l6656 2CE6  
                                         l6648 2CA4                                           l6592 2B4A  
                                         l6584 2B2A                                           l6576 2AF8  
                                         l7608 3D9E                                           l5792 4204  
                                         l5784 41E4                                           l5768 4CD6  
                                         l5776 4902                                           l6568 4A5C  
                                         l7448 32E4                                           l6920 3CB6  
                                         l6912 3C92                                           l6904 3C5E  
                                         l6496 20BA                                           l6488 209E  
                                         l6840 467A                                           l7392 1C4A  
                                         l7384 1C10                                           l7376 1BBC  
                                         l7368 1B96                                           l7296 18E4  
                                         l7288 18AA                                           l7480 38AC  
                                         l7560 264E                                           l7544 2554  
                                         l7528 2432                                           l7616 4A22  
                                         l7640 3458                                           l7632 3408  
                                         l7624 33FC                                           l6826 2AA2  
                                         l6834 2AC8                                           l6818 2A3E  
                                         l6770 283E                                           l6762 2808  
                                         l6754 27C2                                           l6746 2798  
                                         l6738 2752                                           l5874 3220  
                                         l5866 31E6                                           l5858 3172  
                                         l6690 2E1C                                           l6682 2DBE  
                                         l6674 2D7A                                           l6658 2CFC  
                                         l6666 2D2C                                           l6594 2B50  
                                         l6586 2B2C                                           l6578 2AFA  
                                         l5954 4874                                           l5794 4208  
                                         l5786 41E6                                           l5778 4904  
                                         l5890 4B9E                                           l7458 3392  
                                         l6850 39E6                                           l6922 3CBE  
                                         l6914 3C9A                                           l6906 3C66  
                                         l6930 3D06                                           l6498 20CA  
                                         l6842 468C                                           l7394 1C50  
                                         l7386 1C18                                           l7378 1BC8  
                                         l7298 18F0                                           l7482 38BE  
                                         l7474 3868                                           l7546 2566  
                                         l7554 2606                                           l7538 24B4  
                                         l7490 222A                                           l7570 2678  
                                         l7650 3504                                           l7642 348C  
                                         l7634 341C                                           l7626 3400  
                                         l6836 2ACC                                           l6828 2AB2  
                                         l6780 28A0                                           l6772 284A  
                                         l6764 2814                                           l6756 27D8  
                                         l5876 322E                                           l5868 31E8  
                                         l6692 2E36                                           l6684 2DE8  
                                         l6668 2D3A                                           l6596 2B5E  
                                         l6588 2B34                                           l5956 488E  
                                         l5796 420C                                           l5788 41F2  
                                         l5892 4BA2                                           l6860 3A0C  
                                         l6852 39EE                                           l6916 3CA0  
                                         l6908 3C6E                                           l6932 3D34  
                                         l7396 1C62                                           l7388 1C1E  
                                         l7484 38E8                                           l7476 3876  
                                         l7468 3832                                           l7572 269E  
                                         l7556 262C                                           l7564 265C  
                                         l7548 259A                                           l7492 2238  
                                         l7580 43AC                                           l7644 34AA  
                                         l7636 3430                                           l7628 3404  
                                         l6790 2936                                           l6782 28AC  
                                         l6774 285A                                           l6766 2822  
                                         l6758 27E4                                           l5878 3230  
                                         l6694 2E52                                           l6678 2DA4  
                                         l6686 2DEC                                           l6598 2B60  
                                         l5958 489C                                           l5798 4210  
                                         l5894 4BA6                                           l6870 3A44  
                                         l6862 3A14                                           l6854 39F2  
                                         l6846 39D4                                           l6918 3CA6  
                                         l6934 3D44                                           l6926 3CC8  
                                         l6950 36AC                                           l6942 362E  
                                         l7398 1C6E                                           l7478 388E  
                                         l7566 266A                                           l7558 263A  
                                         l7494 224A                                           l7582 43BA  
                                         l7646 34C8                                           l7638 3444  
                                         l6792 2954                                           l6784 28C8  
                                         l6776 2874                                           l6768 282E  
                                         l7592 425A                                           l6696 2E56  
                                         l6688 2E06                                           l5896 4BAA  
                                         l6880 3A70                                           l6872 3A4A  
                                         l6864 3A26                                           l6856 3A00  
                                         l6848 39D8                                           l6936 3D68  
                                         l6928 3CF6                                           l6960 3730  
                                         l6952 36BA                                           l6944 365E  
                                         l7496 224E                                           l7488 2204  
                                         l7584 43E0                                           l7648 34E6  
                                         l6794 295E                                           l6786 28F2  
                                         l6778 2884                                           l7594 4266  
                                         l6698 2E64                                           l7586 45D4  
                                         l5898 4BAE                                           l6874 3A60  
                                         l6866 3A2E                                           l6882 3A76  
                                         l6858 3A08                                           l6890 3C18  
                                         l6938 3D6E                                           l6954 36CC  
                                         l6946 366E                                           l7498 2274  
                                         l7578 43A4                                           l6796 296C  
                                         l6788 2928                                           l7588 45E0  
                                         l6884 3A86                                           l6876 3A68  
                                         l6868 3A36                                           l6892 3C1C  
                                         l6956 36DA                                           l6948 369C  
                                         l6964 4804                                           l6980 357C  
                                         l6972 3528                                           l7790 4142  
                                         l6798 297E                                           l7598 406A  
                                         l7782 3304                                           l6886 3A8E  
                                         l6878 3A6A                                           l6894 3C2A  
                                         l6958 372A                                           l6966 481A  
                                         l6982 357E                                           l6974 353E  
                                         l7784 438C                                           l6896 3C32  
                                         l6968 482A                                           l6984 358E  
                                         l7786 3E98                                           l6898 3C36  
                                         l6994 35B8                                           l6986 3592  
                                         l6978 3552                                           l7788 3AFC  
                                         l6996 35C2                                           l6988 35A0  
                                         l6998 35CC                                           STR_1 103B  
                                         STR_2 106F                                           STR_3 1055  
                                         STR_4 1021                                           STR_5 1088  
                                         STR_6 1090                                           STR_9 108C  
                                         u3010 3B52                                           u3011 3B4E  
                                         u3020 3E46                                           u3100 42E2  
                                         u3021 3E42                                           u3101 42DE  
                                         _LATA 000F89                                           u3110 42F6  
                                         _LATB 000F8A                                           u3111 42F2  
                                         _LATC 000F8B                                           u3008 3AD6  
                                         u3200 4732                                           _LATD 000F8C  
                                         u3009 3AEA                                           u3201 472E  
                                         _LATE 000F8D                                           u3130 4B0C  
                                         u3131 4B08                                           u3038 3E74  
                                         u3039 3E86                                           u3048 411E  
                                         u3128 4326                                           u3049 4130  
                                         u3129 4338                                           u3058 4368  
                                         u3090 4BEA                                           u3059 437A  
                                         u3091 4BE6                                           u3180 4ABE  
                                         u3181 4ABA                                           u3190 471C  
                                         u3191 4718                                           u6000 1D80  
                                         u6001 1D7C                                           u6010 1DC2  
                                         u6011 1DBE                                           u6100 1EF4  
                                         u6020 1DD8                                           u6101 1EF0  
                                         u6021 1DD4                                           u6110 1F12  
                                         u6030 1DEA                                           u6111 1F0E  
                                         u6031 1DE6                                           u3640 3F6C  
                                         u7000 36BA                                           u6200 2062  
                                         u6120 1F32                                           u6040 1DFA  
                                         u3641 3F68                                           u7001 36B6  
                                         u6201 205E                                           u6121 1F2E  
                                         u6041 1DF6                                           u3650 49D6  
                                         u7010 36DA                                           u6210 2072  
                                         u6130 1F40                                           u6050 1E36  
                                         u3651 49D2                                           u7011 36D6  
                                         u6211 206E                                           u6131 1F3C  
                                         u6051 1E32                                           u7020 372A  
                                         u6300 2146                                           u6220 209E  
                                         u6140 1F50                                           u6060 1E44  
                                         u7100 360C                                           u7021 3726  
                                         u6301 2142                                           u6221 209A  
                                         u6141 1F4C                                           u6061 1E40  
                                         u7101 3608                                           u5510 30A0  
                                         u7030 481A                                           u6310 2180  
                                         u6230 20AE                                           u6150 1F82  
                                         u6070 1EB2                                           u7110 391E  
                                         u5511 309C                                           u7031 4816  
                                         u6311 217C                                           u6231 20AA  
                                         u6151 1F7E                                           u6071 1EAE  
                                         u7111 391A                                           u2960 417E  
                                         u5600 322E                                           u5520 30AE  
                                         u8000 33A4                                           u6320 2192  
                                         u6240 20CA                                           u6160 1F90  
                                         u6080 1ECA                                           u7040 353E  
                                         u7200 381E                                           u7120 3940  
                                         u6400 47FE                                           u2961 417A  
                                         u5601 322A                                           u5521 30AA  
                                         u8001 33A0                                           u6321 218E  
                                         u6241 20C6                                           u6161 1F8C  
                                         u6081 1EC4                                           u7041 353A  
                                         u7201 3818                                           u7121 393C  
                                         u2970 4A9C                                           u5530 310A  
                                         u6410 2AF8                                           u8010 33B6  
                                         u6330 21A2                                           u6250 20DA  
                                         u6170 1FAE                                           u6090 1ECC  
                                         u7050 3572                                           u7210 3820  
                                         u7130 3996                                           u2971 4A98  
                                         u5531 3106                                           u6411 2AF4  
                                         u8011 33B2                                           u6331 219E  
                                         u6251 20D6                                           u6171 1FAA  
                                         u7131 3992                                           u2980 4BD8  
                                         u4660 4004                                           u5540 3160  
                                         u6500 2C98                                           u6420 2B0A  
                                         u6340 21C2                                           u6260 20EC  
                                         u6180 1FE6                                           u7060 35A0  
                                         u7140 39A6                                           u7220 44B2  
                                         u8020 385C                                           u8100 235C  
                                         u2981 4BD2                                           u4661 4000  
                                         u5541 315C                                           u6501 2C94  
                                         u6421 2B06                                           u6341 21BE  
                                         u6261 20E8                                           u6181 1FE2  
                                         u7061 359C                                           u7141 39A2  
                                         u8021 3858                                           u8101 2356  
                                         u2990 3AAC                                           u4670 4058  
                                         u5550 31AA                                           u6510 2CC2  
                                         u6430 2B1A                                           u6350 21D4  
                                         u6270 2102                                           u6190 202C  
                                         u7070 35B4                                           u7150 3774  
                                         u7310 2F80                                           u7230 44C4  
                                         u8030 388E                                           u8110 235E  
                                         u2991 3AA8                                           u4671 4054  
                                         u5551 31A6                                           u6511 2CBE  
                                         u6431 2B16                                           u6351 21D0  
                                         u6271 20FE                                           u6191 2028  
                                         u7071 35B0                                           u7055 3568  
                                         u7311 2F7C                                           u7231 44C0  
                                         u8031 388A                                           u5560 31C8  
                                         u6600 2DBE                                           u6520 2CE6  
                                         u6440 2B5E                                           u4680 453A  
                                         u7400 466E                                           u6360 21F0  
                                         u6280 2118                                           u7080 35DC  
                                         u7160 3792                                           u7320 2FA4  
                                         u7240 4438                                           u8040 38AC  
                                         u8200 262C                                           u8120 2374  
                                         u5561 31C4                                           u6601 2DBA  
                                         u6521 2CE2                                           u6441 2B5A  
                                         u4681 4536                                           u7401 466A  
                                         u6361 21EC                                           u6281 2114  
                                         u7081 35D8                                           u7161 378E  
                                         u7305 2F26                                           u7241 4432  
                                         u8041 38A8                                           u8201 2628  
                                         u8121 2370                                           u2986 4BDA  
                                         u5570 31D8                                           u6610 2E06  
                                         u6530 2CFC                                           u6450 2B70  
                                         u4690 457A                                           u6290 212C  
                                         u7090 35FC                                           u7170 37BA  
                                         u7330 2FC0                                           u7306 2F30  
                                         u6370 4704                                           u7250 443A  
                                         u7410 10C4                                           u8050 38BE  
                                         u8130 23A8                                           u8210 43FE  
                                         u5571 31D4                                           u6611 2E02  
                                         u6531 2CF8                                           u6451 2B6C  
                                         u4691 4576                                           u6291 2128  
                                         u7091 35F8                                           u7171 37B6  
                                         u7155 376A                                           u7331 2FBC  
                                         u7307 2F40                                           u6371 4700  
                                         u7227 44A8                                           u7411 10C0  
                                         u8051 38BA                                           u8131 23A4  
                                         u8211 43FA                                           u6700 2788  
                                         u5580 31E6                                           u6620 2E36  
                                         u6540 2D1A                                           u6460 2B80  
                                         u7180 37E4                                           u7340 3014  
                                         u6380 48D4                                           u7260 4450  
                                         u7500 1280                                           u7420 1114  
                                         u8060 38E8                                           u8140 23EC  
                                         u6701 2784                                           u5581 31E2  
                                         u6621 2E32                                           u6541 2D16  
                                         u6461 2B7C                                           u7181 37E0  
                                         u7325 2F9A                                           u6381 48D0  
                                         u7261 444C                                           u7501 127A  
                                         u7421 1110                                           u8061 38E4  
                                         u8141 23E8                                           u6710 2798  
                                         u5590 3220                                           u6630 2E64  
                                         u6550 2D3A                                           u6470 2BC0  
                                         u7350 3030                                           u7270 2EC0  
                                         u5910 4590                                           u6390 47FC  
                                         u7510 1282                                           u7430 1122  
                                         u8150 2432                                           u8070 222A  
                                         u6711 2794                                           u5591 321C  
                                         u6631 2E60                                           u6551 2D36  
                                         u6471 2BBC                                           u7351 302C  
                                         u5911 458C                                           u6391 47F6  
                                         u7431 111E                                           u8151 242E  
                                         u8071 2226                                           u6800 2A58  
                                         u6720 2912                                           u6640 26CE  
                                         u6560 2D4C                                           u6480 2C00  
                                         u7360 306C                                           u7280 2EF0  
                                         u5920 459E                                           u7600 14EA  
                                         u7520 1298                                           u7440 1134  
                                         u8160 24E2                                           u8080 2274  
                                         u6801 2A54                                           u6641 26CA  
                                         u6561 2D48                                           u6481 2BFC  
                                         u7361 3068                                           u7345 300A  
                                         u7281 2EEC                                           u5921 459A  
                                         u7601 14E6                                           u7521 1294  
                                         u7441 1130                                           u8161 24DE  
                                         u8081 2270                                           u6810 2A86  
                                         u6730 296C                                           u6650 26E0  
                                         u6570 2D7A                                           u6490 2C76  
                                         u7370 486C                                           u7290 2F12  
                                         u5930 45CA                                           u7610 1506  
                                         u7530 134A                                           u7450 117C  
                                         u8170 254E                                           u8090 22B0  
                                         u6811 2A82                                           u6731 2968  
                                         u6651 26DC                                           u6571 2D76  
                                         u6491 2C72                                           u7371 4866  
                                         u7195 37F6                                           u7291 2F0E  
                                         u7275 2EB6                                           u5931 45C6  
                                         u7611 1502                                           u7531 1346  
                                         u7451 1178                                           u8171 2548  
                                         u8091 22AC                                           u8227 33EC  
                                         u6820 2AC0                                           u6740 298C  
                                         u6660 26F0                                           u6580 2D90  
                                         u7380 486E                                           u6900 3C44  
                                         u5940 3ED2                                           u7700 1780  
                                         u7620 153C                                           u7540 13E0  
                                         u7460 11AC                                           u8180 2550  
                                         u6821 2ABC                                           u6741 2988  
                                         u6725 2908                                           u6661 26EC  
                                         u6581 2D8C                                           u6901 3C40  
                                         u5941 3ECE                                           u7701 177C  
                                         u7621 1538                                           u7541 13DC  
                                         u7461 11A6                                           u8237 3510  
                                         u6750 299E                                           u6670 2730  
                                         u6590 2DA4                                           u7390 4640  
                                         u6830 39E6                                           u6910 3C5E  
                                         u5950 3EE4                                           u7710 17C6  
                                         u7630 1562                                           u7550 1454  
                                         u7470 11AE                                           u8190 2566  
                                         u6751 299A                                           u6671 272C  
                                         u6591 2DA0                                           u7391 463C  
                                         u6831 39E2                                           u6911 3C5A  
                                         u5951 3EE0                                           u7711 17C2  
                                         u7631 155E                                           u7551 1450  
                                         u8191 2562                                           u6760 29CC  
                                         u6680 2742                                           u6840 3A00  
                                         u6920 3C7C                                           u5960 3F0C  
                                         u7800 19D4                                           u7720 17D6  
                                         u7640 1574                                           u7560 147A  
                                         u7480 11C4                                           u6761 29C8  
                                         u6681 273E                                           u6841 39FC  
                                         u6921 3C78                                           u5961 3F08  
                                         u7801 19D0                                           u7721 17D2  
                                         u7641 1570                                           u7561 1476  
                                         u7481 11C0                                           u6770 29E2  
                                         u6690 2752                                           u6850 3A26  
                                         u6930 3C92                                           u5970 3F42  
                                         u7810 19E2                                           u7730 1872  
                                         u7650 1582                                           u7570 148C  
                                         u7490 1250                                           u6771 29DE  
                                         u6691 274E                                           u6851 3A22  
                                         u6931 3C8E                                           u5971 3F3E  
                                         u7811 19DE                                           u7731 186E  
                                         u7651 157E                                           u7571 1488  
                                         u7491 124C                                           u6780 29F6  
                                         u6860 3A44                                           u6940 3CB6  
                                         u5980 1D5E                                           u7900 1C4A  
                                         u7820 1A3A                                           u7740 18BE  
                                         u7660 1598                                           u7580 14AE  
                                         u6781 29F2                                           u6861 3A40  
                                         u6941 3CB2                                           u5981 1D5A  
                                         u7901 1C46                                           u7821 1A36  
                                         u7741 18BA                                           u7661 1594  
                                         u7581 14AA                                           u6790 2A10  
                                         u6870 3A60                                           u6950 3CF6  
                                         u5990 1D70                                           u7910 1C62  
                                         u7830 1B0C                                           u7750 18E4  
                                         u7670 15A6                                           u7590 14D4  
                                         u6791 2A0C                                           u6871 3A5C  
                                         u6951 3CF2                                           u5991 1D6C  
                                         u7911 1C5E                                           u7831 1B08  
                                         u7751 18E0                                           u7671 15A2  
                                         u7591 14D0                                           u6880 3A86  
                                         u6960 3D34                                           u7920 1CC0  
                                         u7840 1B28                                           u7760 1988  
                                         u7680 15D0                                           u6881 3A82  
                                         u6961 3D30                                           u7921 1CBA  
                                         u7841 1B24                                           u7761 1984  
                                         u7681 15CC                                           u6890 3C2A  
                                         u6970 3D68                                           u7930 1CC2  
                                         u7850 1B3A                                           u7770 199A  
                                         u7690 1718                                           u6891 3C26  
                                         u6971 3D64                                           u7851 1B36  
                                         u7771 1996                                           u7691 1714  
                                         u6980 365E                                           u7940 1CD8  
                                         u7860 1B48                                           u7780 19AC  
                                         u6981 365A                                           u7941 1CD4  
                                         u7861 1B44                                           u7781 19A8  
                                         u7950 327C                                           u6990 369C  
                                         u7870 1B7E                                           u7790 19BA  
                                         u7951 3278                                           u6991 3698  
                                         u7871 1B7A                                           u7791 19B6  
                                         u7960 32B4                                           u7880 1BAC  
                                         u7961 32B0                                           u7881 1BA8  
                                         u7970 32D0                                           u7890 1C30  
                                         u7971 32CC                                           u7891 1C2C  
                                         u7980 338C                                           u7981 3386  
                                         u7990 338E                                           _WPUB 000F7C  
                      ??_wr2RegCompleteHandler 0010                                           _dbuf 015D  
                                         _atoi 3242                                           _main 33DC  
                     ?_I2C_CallbackReturnReset 000E                                           _prec 00EB  
                                         _nout 00E7                                           pad@i 001E  
                                         pad@p 001B                                           fsr0h 000FEA  
                                         fsr1h 000FE2                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         pad@w 0020                                           fsr2l 000FD9  
                             __end_of_I2C_Open 3FE4                                           btemp 005B  
                                ___fpclassifyf 3734                                           prodh 000FF4  
                                         prodl 000FF3                                           start 00B0  
                              ___fldiv@new_exp 0044                   fp__I2C_DO_SEND_RESTART_WRITE 0000  
                                 _tolower$2335 0011                                   ___param_bank 000000  
             __size_of_rdBlkRegCompleteHandler 0040                                          ??_pad 001D  
                             ?_I2C_MasterClose 0001                                _I2C_WriteNBytes 4522  
                                ?_EUSART_Write 0001            __size_of_I2C_SetAddressNackCallback 0018  
               __size_of_OSCILLATOR_Initialize 000A                               ?_I2C_MasterStart 0001  
                                _I2C_DO_RX_ACK 4C8E                               ?_I2C_MasterWrite 0001  
                __end_of_OSCILLATOR_Initialize 4C44                                    _writeBuffer 015A  
                                ___fltol@sign1 000D                                          ?_atoi 000C  
                              __end_of___fladd 2204                                          ?_main 0001  
                              __end_of___fldiv 2E78                                __end_of___awdiv 3A98  
                              __end_of___flneg 483C                                          STR_10 1094  
                                        STR_13 1098                                          STR_15 1098  
                              __end_of___awmod 3CC8                                __end_of___flmul 2ADE  
                              __end_of___flsub 46C2                                __end_of___fltol 362E  
                                        _ANSEL 000F7E                                ___awdiv@divisor 0007  
                                        i2l610 478A                                          i2l621 4A16  
                                        i2l630 4CD4                                          i2l607 4788  
                                        i2l624 4D0C                                          i2l617 3C16  
                                        i2l627 4CCE                                          i2l671 009C  
                                        i2l666 0062                                          i2l667 009C  
                              ___awdiv@counter 0009                                          _RCREG 000FAE  
                 __size_of_I2C_DO_RX_NACK_STOP 0008                                          _RCSTA 000FAB  
                                 vfpfcnvrt@fmt 00C3                                          _SPBRG 000FAF  
                            ??_I2C_DO_TX_EMPTY 0010                                          _TRISA 000F92  
                                        _TRISB 000F93                                          _TRISC 000F94  
                                        _TRISD 000F95                                          _TRISE 000F96  
                                        _TXREG 000FAD                                          _TXSTA 000FAC  
                  ??_INA219_getShuntVoltage_mV 0054                              __end_of_I2C_DO_RX 3EC0  
                            __end_of_I2C_DO_TX 3B5C                                          _flags 00ED  
                                        _fputc 3EC0                              __end_of_I2C_Close 49EE  
                                        _fputs 46C2                                __end_of_isdigit 4874  
                       __size_of_I2C_MasterFsm 0070                 I2C_MasterOperation@returnValue 0015  
                                        atoi@n 0019                                          pad@fp 0017  
                                        atoi@s 000C                                          _width 00E9  
                                        _putch 4C30                        _I2C_MasterEnableRestart 4CF2  
                              __end_of_isspace 467A                                __end_of_isupper 4804  
                                        pclath 000FFA                                          tablat 000FF5  
                             ?_I2C_SetCallback 0005                   I2C_SetAddressNackCallback@cb 000A  
                                        ttemp5 005C                                          ttemp6 005F  
                                        ttemp7 0063                                          status 000FD8  
                                        wtemp8 005C                                 ?___fpclassifyf 0005  
                              __end_of_tolower 4468                              ?_I2C_DO_SEND_STOP 0001  
                       __size_of_I2C_SetBuffer 0024                                __end_of_strncmp 390E  
                __size_of_INA219_WriteRegister 0026                             ??_I2C_DO_SEND_STOP 0005  
                    _ina219_powerMultiplier_mW 00F5                                  _fsmStateTable 1001  
                     fp__rd1RegCompleteHandler 0000                                __initialization 44C6  
                   __size_of_INA219_Initialize 0002                                   __end_of_atoi 33DC  
                                 __end_of_main 3528                       fp__wr1RegCompleteHandler 0000  
            __size_of_I2C_DO_SEND_RESTART_READ 0008                      ?_I2C_DO_SEND_RESTART_READ 0001  
                               ??_EUSART_Write 0005                                 ?_I2C_DO_RX_ACK 0001  
                  ?_INTERRUPT_InterruptManager 0001                 ??_EUSART_SetRxInterruptHandler 0007  
                         _INA219_getCurrent_mA 3D72                                         ??_atoi 000E  
                                       ??_main 00E1                              ?_I2C_MasterIsNack 0001  
                                __activetblptr 000003                          _I2C_Read2ByteRegister 3FE4  
                            ?_I2C_MasterSetIrq 0001               I2C_Read2ByteRegister@returnValue 001C  
                           ??_I2C_MasterIsNack 0005                    __end_of_INA219_ReadRegister 4AF0  
                           ??_I2C_MasterSetIrq 0005           fp__EUSART_DefaultFramingErrorHandler 0000  
    __end_of_EUSART_DefaultFramingErrorHandler 4D0E     __size_of_EUSART_DefaultFramingErrorHandler 0002  
          ??_EUSART_DefaultFramingErrorHandler 0001             ?_EUSART_DefaultFramingErrorHandler 0001  
            _EUSART_DefaultFramingErrorHandler 4D0C                     _EUSART_OverrunErrorHandler 01AF  
              __end_of_I2C_CallbackReturnReset 4CEA                                         ?_fputc 0007  
                                       ?_fputs 0010                __size_of_I2C_CallbackReturnStop 0004  
                             ___awdiv@dividend 0005                  I2C_SetDataCompleteCallback@cb 000A  
                                       ?_putch 0001                                         _ANSELH 000F7F  
                                 ??_I2C_Poller 0014                                         i2l6120 0036  
                                       i2l6122 0044                                         i2l6124 0070  
                                       i2l6116 001A                                         i2l6126 007E  
                                       i2l6118 0028                                         i2l5810 4CD0  
                                       i2l5660 4A10                                         i2l5662 4A14  
                                       i2l5654 49EE                                         i2l5656 49FE  
                                       i2l5808 4CCA                                         i2l5658 4A00  
                                       i2l5930 477E                                         i2l5922 474A  
                                       i2l5940 3B8A                                         i2l5932 4782  
                                       i2l5924 475C                                         i2l5950 3BF4  
                                       i2l5942 3BA2                                         i2l5934 3B5C  
                                       i2l5926 476C                                         i2l5952 3C12  
                                       i2l5944 3BB0                                         i2l5936 3B6C  
                                       i2l5928 476E                                         i2l5946 3BC0  
                                       i2l5938 3B7A                                         i2l5948 3BD8  
                                       _OSCCON 000FD3                                         _SPBRGH 000FB0  
                                       _SSPADD 000FC8                                         _SSPBUF 000FC9  
                             __end_of___xxtofl 3242                            _I2C_MasterGetRxData 4CDE  
                    _INA219_getShuntVoltage_mV 45D4                        __end_of_I2C_WriteNBytes 457C  
                   ??_INA219_getBusVoltage_raw 0023                   ??_INA219_getShuntVoltage_raw 0023  
                                 vfprintf@cfmt 00DD                                         ___flge 362E  
                                       ___fleq 3CC8                                      ??___fladd 000D  
                                       ___wmul 4A40                                      ??___fldiv 003B  
                                _I2C_MasterFsm 42CE                                      ??___awdiv 0009  
                                    ??___flneg 0009                                      ??___awmod 0009  
                                    ??___flmul 0060                                      ??___flsub 0054  
                                    ??___fltol 0009                                         _efgtoa 109C  
                          _EUSART_Transmit_ISR 474A                                         _floorf 2E78  
                                       clear_0 44FC                                         clear_1 4508  
                            I2C_SetCallback@cb 0005                               ___awdiv@quotient 000B  
                      fp__I2C_DO_SEND_ADR_READ 0000                                ___awmod@divisor 0007  
                        ?_INA219_getCurrent_mA 0071                        __size_of_I2C_MasterOpen 0022  
                                       isa$std 000001                        __size_of_I2C_MasterStop 0004  
                              ___awmod@counter 0009                        __size_of_I2C_Initialize 0014  
                                       _printf 4A18                                         pad@buf 0019  
                                _I2C_SetBuffer 4A8C                             __end_of_I2C_Poller 4B0E  
                                       _strcpy 4468                                         _strlen 48AC  
                 __end_of_I2C_MasterDisableIrq 4CFE                                         fputc@c 0007  
                                       fputs@c 0014                            _I2C_DO_ADDRESS_NACK 433E  
                                       fputs@i 0015                                         fputs@s 0010  
                                    ??_isdigit 0007                           ?_I2C_MasterGetRxData 0001  
                                    ?_I2C_Open 0001             __end_of_I2C_SetAddressNackCallback 4B86  
                   _I2C_SetAddressNackCallback 4B6E                                ___fpclassifyf@e 000D  
                              ___fpclassifyf@u 000F                                ___fpclassifyf@x 0005  
                                 __mediumconst 0000                                      ??_isspace 0007  
                                       tblptrh 000FF7                                      ??_isupper 0007  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                    ??_I2C_MasterEnableRestart 0005                               __end_of_vfprintf 4408  
                                    ??_tolower 000D                                      ??_strncmp 000B  
                         ?_EUSART_Transmit_ISR 0001            __size_of_INA219_getShuntVoltage_raw 0018  
                __size_of_INTERRUPT_Initialize 0004                                     ___flge@ff1 0071  
                              ??___fpclassifyf 0009                                     ___flge@ff2 0075  
                                 ___xxtofl@arg 002F                                   ___xxtofl@exp 002E  
                            _SYSTEM_Initialize 4B9E                                   ___xxtofl@val 0025  
                                   ___fleq@ff1 0005                                     ___fleq@ff2 0009  
                                   __accesstop 0060                        __end_of__initialization 4518  
       _ina219_powerMultiplier_mW@ina219$F1587 00EF                                     ___flneg@f1 0005  
                     ??_INA219_getBusVoltage_V 0054                            _I2C_MasterOperation 4706  
                           ?_SYSTEM_Initialize 0001                                  ___rparam_used 000001  
                         ?_I2C_DO_ADDRESS_NACK 0001                                     ___fltol@f1 0005  
         __end_of_EUSART_SetTxInterruptHandler 4C4E          __size_of_EUSART_SetTxInterruptHandler 000A  
                 _EUSART_SetTxInterruptHandler 4C44                        _rdBlkRegCompleteHandler 478C  
                   fp__rdBlkRegCompleteHandler 0000                                 __pcstackCOMRAM 0001  
                               ?_I2C_MasterFsm 0001                                ??_I2C_DO_RX_ACK 0005  
                                 __pidataBANK0 4D06                                   __pidataBANK1 4D08  
                       _I2C_CallbackReturnStop 4CEA                            ??_SYSTEM_Initialize 0007  
                                __end_of_fputc 3F56                                  __end_of_fputs 4706  
         _ina219_calibrationValue@ina219$F1585 00F3                                  __end_of_putch 4C3A  
                               ?_I2C_SetBuffer 0005                        ?_I2C_MasterWaitForEvent 0001  
               __size_of_I2C_DO_SEND_ADR_WRITE 0010             __size_of_I2C_DO_SEND_RESTART_WRITE 0008  
                       ?_I2C_Read2ByteRegister 0016                  __end_of_I2C_DO_SEND_ADR_WRITE 4BFC  
                   ?_I2C_DO_SEND_RESTART_WRITE 0001                           ?_I2C_MasterOperation 0001  
                        ??_I2C_MasterGetRxData 0005                                     ??_I2C_Open 0005  
                         _eusartRxStatusBuffer 012E                     __end_of_I2C_MasterClearIrq 4D06  
              ??_EUSART_SetOverrunErrorHandler 0007                                        ??_fputc 000B  
                        _INA219_getCurrent_raw 4B3E                      __end_of_SYSTEM_Initialize 4BB4  
                                      ??_fputs 0014                          ??_EUSART_Transmit_ISR 0001  
                   INA219_getCurrent_raw@value 0023                             _INA219_getPower_mW 406A  
                                      ??_putch 0006                              _I2C_MasterSendAck 4CBE  
        _ina219_currentDivider_mA@ina219$F1586 00F1                                     __pbssBANK0 00E3  
                                   __pbssBANK1 0100                           __end_of_EUSART_Write 45D4  
                                ??_I2C_DO_IDLE 0005                 __size_of_rd2RegCompleteHandler 002C  
                                ??_I2C_DO_RCEN 0005                  __end_of_rd2RegCompleteHandler 496A  
                 __end_of_I2C_MasterSendTxData 4CBE                             ?_I2C_MasterSendAck 0001  
                            _I2C_MasterStartRx 4CE2                 __size_of_wr2RegCompleteHandler 002C  
                        ??_I2C_DO_ADDRESS_NACK 0010                  __end_of_wr2RegCompleteHandler 49C2  
         __end_of_INA219_setCalibration_32V_2A 48AC          __size_of_INA219_setCalibration_32V_2A 0038  
                 _INA219_setCalibration_32V_2A 4874                    __size_of_EUSART_Receive_ISR 00BC  
                          ?_INA219_getPower_mW 0071                            _I2C_DO_RX_NACK_STOP 4C86  
                        _rd1RegCompleteHandler 496A                             ?_I2C_MasterStartRx 0001  
                   __end_of_I2C_MasterSendNack 4CCA                               ?_I2C_WriteNBytes 0016  
                   INA219_ReadRegister@address 0020                         I2C_WriteNBytes@address 001A  
                        _wr1RegCompleteHandler 4912                            ??_I2C_MasterSendAck 0005  
                     rd1RegCompleteHandler@ptr 000E                                        ?___flge 0071  
                ?_EUSART_SetTxInterruptHandler 0005                                        ?___fleq 0005  
             _EUSART_TxDefaultInterruptHandler 01B5                    __end_of_I2C_DO_SEND_RESTART 4CA6  
                              _I2C_DO_TX_EMPTY 40EE                            I2C_SetBuffer@buffer 0005  
                                      ?___wmul 0005                                        ?_efgtoa 007D  
               __end_of_I2C_MasterWaitForEvent 4BEC                            ??_I2C_MasterStartRx 0005  
                       ??_INA219_getCurrent_mA 0054                  __size_of_I2C_DO_SEND_ADR_READ 0010  
                                      ?_floorf 004C                                        _BAUDCON 000FB8  
             __size_of_I2C_CallbackReturnReset 0004                 _ina219_i2cAddress@ina219$F1584 01BD  
                 ??_EUSART_DefaultErrorHandler 0001                          ??_I2C_MasterOperation 0014  
                                      ?_printf 01B7                 I2C_SetDataCompleteCallback@ptr 000C  
                                      ?_strcpy 0005                                        ?_strlen 0005  
                     ??_I2C_DO_RX_NACK_RESTART 0005              __end_of_I2C_DO_SEND_RESTART_WRITE 4CAE  
                         ??_INA219_getPower_mW 0054                           ?_I2C_DO_RX_NACK_STOP 0001  
                                _eusartRxCount 0056                                      ?___xxtofl 0025  
                           __size_of_vfpfcnvrt 04AE                  __size_of_EUSART_RxDataHandler 002A  
                    __end_of_I2C_MasterSendAck 4CC4                                        _OSCTUNE 000F9B  
                     ??_EUSART_SetErrorHandler 0007                                        _SSPCON1 000FC6  
                                      _SSPCON2 000FC5                                        _SSPSTAT 000FC7  
                    __end_of_I2C_MasterStartRx 4CE6                           I2C_Close@returnValue 0005  
                 ?_I2C_SetDataCompleteCallback 000A                                      _I2C_DO_RX 3E1A  
                                    _I2C_DO_TX 3A98               __end_of_I2C_DO_SEND_RESTART_READ 4CB6  
                  INA219_WriteRegister@address 001D                   __size_of_INA219_getPower_raw 0018  
                                    _I2C_Close 49C2                      ??_rdBlkRegCompleteHandler 0010  
              __size_of_INA219_getBusVoltage_V 0074             __end_of_INA219_getShuntVoltage_raw 4B26  
                   _INA219_getShuntVoltage_raw 4B0E                           _I2C_MasterDisableIrq 4CFA  
                              ??_I2C_MasterFsm 0012                                        __Hparam 0000  
          __size_of_EUSART_DefaultErrorHandler 0006                  ?_INA219_setCalibration_32V_2A 0001  
                                      __Lparam 0000                            __end_of_I2C_DO_IDLE 4C30  
                          __end_of_I2C_DO_RCEN 4C24                                     _readBuffer 0124  
                              __size_of___flge 0106                                __size_of___fleq 00AA  
                                      ___fladd 1D44                                        ___fldiv 2ADE  
                                      ___awdiv 39D4                                        ___flneg 4804  
                                      ___awmod 3C18                                        ___flmul 26B2  
                                      ___flsub 467A                                        ___fltol 3528  
                              ??_I2C_SetBuffer 0009                                __size_of___wmul 0026  
                                    ?_vfprintf 00D7                        I2C_SetBuffer@bufferSize 0007  
                                 __psmallconst 1000                                __size_of_efgtoa 0CA8  
                                   _current_mA 00E3                                 _I2C_MasterOpen 4AB0  
                              __size_of_floorf 0216                                        __pcinit 44C6  
                               _I2C_MasterStop 4CEE                                 _I2C_Initialize 4BB4  
                                      __ramtop 1000                      __size_of_I2C_DO_SEND_STOP 0008  
                                      __ptext0 33DC                                        __ptext1 4A18  
                                      __ptext2 43A4                                        __ptext3 2204  
                                      __ptext4 3832                   __end_of_INA219_WriteRegister 4A8C  
                                      __ptext5 109C                                        __ptext6 4408  
                                      __ptext7 47CC                                        __ptext8 4468  
                                      __ptext9 390E                                __size_of_printf 0028  
                        ??_I2C_DO_RX_NACK_STOP 0005                                __size_of_strcpy 005E  
               INA219_getShuntVoltage_mV@value 0054                                __size_of_strlen 0036  
                        _OSCILLATOR_Initialize 4C3A                                   __size_of_pad 00C6  
                                      _isdigit 483C                                     ??___xxtofl 0029  
                             ___awmod@dividend 0005                             I2C_SetCallback@idx 0009  
                     __size_of_I2C_MasterClose 0004                       ??_PIN_MANAGER_Initialize 0005  
                I2C_CallbackReturnReset@funPtr 000E                                        _isspace 4628  
                           I2C_SetCallback@ptr 0007                       wr1RegCompleteHandler@ptr 000E  
                                      _isupper 47CC                                        efgtoa@c 0083  
                                      efgtoa@d 00A1                                        efgtoa@e 00B9  
                                      efgtoa@f 007F                                        efgtoa@g 00B5  
                                      efgtoa@h 00AB                                        efgtoa@i 00B3  
                                      efgtoa@l 00AF                                        efgtoa@m 009B  
                                      efgtoa@n 00BB                                        efgtoa@p 00A5  
                                      efgtoa@t 0095                                        efgtoa@u 00BD  
                                      efgtoa@w 00A7                       fp__I2C_DO_SEND_ADR_WRITE 0000  
                       ?_INA219_getCurrent_raw 0021                       __size_of_I2C_MasterStart 0004  
                     __size_of_I2C_MasterWrite 0008                                        atoi@neg 0012  
                   __size_of_SYSTEM_Initialize 0016                                        _tolower 4408  
                                      _strncmp 3832                           end_of_initialization 4518  
                                      floorf@e 0064                                        floorf@m 0060  
                                      floorf@u 0066                                        floorf@x 004C  
                                   ?_I2C_DO_RX 0001                                     ?_I2C_DO_TX 0001  
        __end_of_EUSART_SetOverrunErrorHandler 4C62         __size_of_EUSART_SetOverrunErrorHandler 000A  
                _EUSART_SetOverrunErrorHandler 4C58                      __size_of_I2C_MasterIsNack 0014  
                                      fputc@fp 0009                                     ?_I2C_Close 0001  
                                      fputs@fp 0012                         ?_rd1RegCompleteHandler 000E  
                      __end_of_I2C_DO_TX_EMPTY 416A                      __size_of_I2C_MasterSetIrq 0004  
                        ?_I2C_MasterDisableIrq 0001                              _EUSART_Initialize 41E4  
                       ?_wr1RegCompleteHandler 000E                       fp__rd2RegCompleteHandler 0000  
                           ?_EUSART_Initialize 0001                       __size_of_I2C_SetCallback 007A  
                            __end_of_vfpfcnvrt 26B2                                     efgtoa@mode 00AA  
                                   efgtoa@sign 00A3                                      _RCSTAbits 000FAB  
                                      postdec2 000FDD                         __end_of_I2C_MasterOpen 4AD2  
                     fp__wr2RegCompleteHandler 0000                                        postinc0 000FEE  
                                      postinc1 000FE6                                        postinc2 000FDE  
                       __end_of_I2C_MasterStop 4CF2                         __end_of_I2C_Initialize 4BC8  
                                   ??_vfprintf 0056                      fp__I2C_CallbackReturnStop 0000  
                                      strcpy@d 000D                                        strlen@a 0007  
                                      strcpy@s 000B                                        strlen@s 0005  
                          ??_EUSART_Initialize 0007                 ??_EUSART_SetTxInterruptHandler 0007  
              __end_of_rdBlkRegCompleteHandler 47CC                         _INA219_getBusVoltage_V 425A  
                         _I2C_MasterSendTxData 4CB6                                fp__I2C_DO_RESET 0000  
              __size_of_I2C_DO_RX_NACK_RESTART 0008                                    ___fladd@grs 0014  
                                ___xxtofl@sign 002D                    ?_I2C_SetAddressNackCallback 000A  
                        __size_of_EUSART_Write 0058                     __size_of_I2C_MasterSendAck 0006  
                                  ___fldiv@grs 0046                                    ___fldiv@rem 003F  
                            __size_of_I2C_Open 008E                        _ina219_calibrationValue 00F9  
              __size_of_EUSART_SetErrorHandler 000A                     __size_of_I2C_MasterStartRx 0004  
              INA219_getShuntVoltage_raw@value 0023                                    ___flmul@grs 0066  
                    __end_of_EUSART_Initialize 425A                                    _I2C_DO_IDLE 4C24  
                                  _I2C_DO_RCEN 4C18                   __size_of_INA219_ReadRegister 001E  
                   rdBlkRegCompleteHandler@ptr 000E                                      _TXSTAbits 000FAC  
                      ?_I2C_CallbackReturnStop 000E                       _I2C_DO_SEND_RESTART_READ 4CAE  
                  fp__I2C_DO_SEND_RESTART_READ 0000                    INA219_getBusVoltage_V@value 0075  
                 I2C_CallbackReturnStop@funPtr 000E                        ??_I2C_Read2ByteRegister 0018  
                              ?_I2C_MasterOpen 0001                   __end_of_INTERRUPT_Initialize 4CDA  
                              ?_I2C_MasterStop 0001                                ?_I2C_Initialize 0001  
                      _I2C_CallbackReturnReset 4CE6                     fp__I2C_CallbackReturnReset 0000  
                               __end_of___flge 3734                                 __end_of___fleq 3D72  
           __end_of_EUSART_DefaultErrorHandler 4CD6                     _EUSART_DefaultErrorHandler 4CD0  
               ??_INA219_setCalibration_32V_2A 0021                                    vfpfcnvrt@ap 00C5  
                                  vfpfcnvrt@ct 00D3                                    vfpfcnvrt@fp 00C1  
                               __end_of___wmul 4A66           __size_of_I2C_SetDataCompleteCallback 0018  
                               __end_of_efgtoa 1D44                                   _EUSART_Write 457C  
                               __end_of_floorf 308E                          ?_I2C_MasterSendTxData 0001  
                       ?_OSCILLATOR_Initialize 0001                                     floorf@F527 0146  
                  ??_I2C_DO_SEND_RESTART_WRITE 0005                                 __end_of_printf 4A40  
                               __end_of_strcpy 44C6                                 __end_of_strlen 48E2  
            __size_of_INA219_getBusVoltage_raw 0018                            start_initialization 44C6  
                            _ina219_i2cAddress 00FC                      ?_INA219_getBusVoltage_raw 0021  
              __size_of_PIN_MANAGER_Initialize 0030                                    __end_of_pad 39D4  
                                ?_I2C_DO_RESET 0001   EUSART_SetRxInterruptHandler@interruptHandler 0005  
 EUSART_SetTxInterruptHandler@interruptHandler 0005                                    putch@txData 0006  
                                  ??_I2C_DO_RX 0010                                    ??_I2C_DO_TX 0010  
                            ??_I2C_MasterClose 0005                         ??_I2C_MasterDisableIrq 0005  
                                  ??_I2C_Close 0005                              ??_I2C_MasterStart 0005  
                        __end_of___fpclassifyf 3832                              ??_I2C_MasterWrite 0016  
               __end_of_I2C_CallbackReturnStop 4CEE                         _I2C_DO_RX_NACK_RESTART 4C7E  
                             ?_I2C_DO_TX_EMPTY 0001                           _INA219_WriteRegister 4A66  
                           _I2C_MasterClearIrq 4D02                 ?_EUSART_SetOverrunErrorHandler 0005  
                                  vfprintf@fmt 00D9                     _EUSART_FramingErrorHandler 01B1  
                                     ??___flge 0079                                       ??___fleq 000D  
                                     ??___wmul 0009                         _EUSART_SetErrorHandler 4C6C  
                          ?_I2C_MasterClearIrq 0001                                       ??_efgtoa 0084  
                  __end_of_I2C_MasterGetRxData 4CE2                                    __pdataBANK0 00FC  
                                  __pdataBANK1 01BD                                       ??_floorf 0050  
                        __end_of_I2C_DO_RX_ACK 4C96                               _I2C_DO_SEND_STOP 4C96  
                            ??_I2C_SetCallback 0009                                       ??_printf 0056  
                          _INA219_getPower_raw 4B26                            I2C_Open@returnValue 0006  
                                     ??_strcpy 0009                             _I2C_MasterSendNack 4CC4  
                                     ??_strlen 0007                       ?_I2C_MasterEnableRestart 0001  
                                    ___fladd@a 0009                                      ___fladd@b 0005  
                       fp__I2C_DO_SEND_RESTART 0000                                      ___fldiv@a 0037  
                                    ___fldiv@b 0033                       I2C_Read2ByteRegister@reg 0016  
                  __end_of_EUSART_Transmit_ISR 478C                          _I2C_DO_SEND_ADR_WRITE 4BEC  
                                    ___flmul@a 0050                                      ___flmul@b 004C  
                                  __pbssCOMRAM 0056                                      ___flsub@a 0075  
                                    ___flsub@b 0071                                  __pcstackBANK0 0060  
                                __pcstackBANK1 01B7                                 ??_I2C_DO_RESET 0005  
                          ?_I2C_MasterSendNack 0001                              __size_of___xxtofl 01B4  
                 __end_of_I2C_DO_SEND_ADR_READ 4C0C                           ??_I2C_MasterClearIrq 0005  
                  __end_of_I2C_DO_ADDRESS_NACK 43A4                        INA219_ReadRegister@data 001E  
                   __end_of_EUSART_Receive_ISR 3C18                               _I2C_MasterIsNack 4BC8  
                   __size_of_EUSART_Initialize 0076                           ?_INA219_getPower_raw 0021  
                    _I2C_DO_SEND_RESTART_WRITE 4CA6               _EUSART_RxDefaultInterruptHandler 01B3  
                        ?_INA219_WriteRegister 001B                               _I2C_MasterSetIrq 4CDA  
                                    _atoi$2246 0014                                      _atoi$2247 0018  
                                    _atoi$2248 0016                                      __pnvBANK0 00FE  
                                    __pnvBANK1 01AD                          _rd2RegCompleteHandler 493E  
                  ?_INA219_getShuntVoltage_raw 0021                          __end_of_fsmStateTable 1021  
                                  _efgtoa$2182 0089                                    _efgtoa$2183 008B  
                                  _efgtoa$2192 008F                                    _efgtoa$2193 0091  
                                  _efgtoa$2194 0093                   __end_of_EUSART_RxDataHandler 4A18  
                                  _efgtoa$2188 008D                         _PIN_MANAGER_Initialize 48E2  
                        _wr2RegCompleteHandler 4996                      ??_I2C_CallbackReturnReset 0010  
                  __end_of_I2C_MasterOperation 474A                           ??_I2C_MasterSendNack 0005  
                     rd2RegCompleteHandler@ptr 000E                                      __pintcode 0008  
                                     ?___fladd 0005                                       ?___fldiv 0033  
                                     ?___awdiv 0005                                      __ptext100 49C2  
                                    __ptext101 4CFA                                      __ptext110 4CD0  
                                    __ptext102 4CFE                                       ?___flneg 0005  
                                    __ptext111 49EE                                      __ptext103 4D02  
                                    __ptext112 0000                                      __ptext104 4D0A  
                                    __ptext106 474A                                      __ptext107 3B5C  
                                    __ptext108 4CCA                                      __ptext109 4D0C  
                                     ?___awmod 0005                                       ?___flmul 004C  
                                     ?___flsub 0071                                       ?___fltol 0005  
                                 _eusartRxHead 0058                                   _eusartTxHead 005A  
                                 _eusartRxTail 0057                         ??_I2C_MasterSendTxData 0005  
                                 _eusartTxTail 0059                   ??_INTERRUPT_InterruptManager 0001  
                     __size_of_I2C_WriteNBytes 005A                  __size_of_INA219_getCurrent_mA 00A8  
                            __size_of_vfprintf 0064                                   fp__I2C_DO_RX 0000  
                                 fp__I2C_DO_TX 0000                        _eusartTxBufferRemaining 00FE  
                 __size_of_I2C_DO_SEND_RESTART 0008                        ??_INA219_getCurrent_raw 0023  
                                  __smallconst 1000                    __size_of_INA219_getPower_mW 0084  
                     _ina219_currentDivider_mA 00F7                                       ?_isdigit 0005  
                      I2C_MasterOperation@read 0014                                       _I2C_Open 3F56  
                                     ?_isspace 0005                                       ?_isupper 0005  
                                     ?_tolower 000B                                 __size_of_fputc 0096  
                               __size_of_fputs 0044                        ??_rd1RegCompleteHandler 0010  
                                     ?_strncmp 0005                                 __size_of_putch 000A  
                         _INTERRUPT_Initialize 4CD6                                 _eusartRxBuffer 0136  
                        ??_INA219_getPower_raw 0023                        ??_wr1RegCompleteHandler 0010  
                 I2C_Read2ByteRegister@address 001B                                 _eusartTxBuffer 013E  
                     INA219_getPower_raw@value 0023                                 ___wmul@product 0009  
       EUSART_SetErrorHandler@interruptHandler 0005                                       _PIE1bits 000F9D  
                            _eusartRxLastError 00FB            __size_of_INTERRUPT_InterruptManager 00A8  
                                     _PIR1bits 000F9E                ??_EUSART_SetFramingErrorHandler 0007  
                                     _PIR2bits 000FA1                                       i2u536_40 4A10  
                                     i2u536_41 4A0C                                       i2u570_40 3BF4  
                                     i2u570_41 3BF0                                       i2u571_48 3BFA  
                                     i2u564_40 475C                                       i2u571_49 3C0E  
                                     i2u564_41 4758                                       i2u565_40 477E  
                                     i2u565_41 477A                                       i2u566_40 3B7A  
                                     i2u566_41 3B76                                       i2u590_48 0084  
                                     i2u590_49 0098                                       i2u568_40 3BB0  
                                     i2u567_48 3B90                                       i2u584_40 0028  
                                     i2u568_41 3BAC                                       i2u567_49 3BA2  
                                     i2u584_41 0024                                       i2u585_40 0036  
                                     i2u585_41 0032                                       i2u569_48 3BC6  
                                     i2u586_40 0044                                       i2u569_49 3BD8  
                                     i2u586_41 0040                                       i2u588_40 0070  
                                     i2u587_48 004A                                       i2u588_41 006C  
                                     i2u587_49 005E                                       i2u589_40 007E  
                                     i2u589_41 007A                          __end_of_I2C_MasterFsm 433E  
                                     _RCONbits 000FD0                    __end_of_I2C_DO_RX_NACK_STOP 4C8E  
         fp__EUSART_DefaultOverrunErrorHandler 0000      __end_of_EUSART_DefaultOverrunErrorHandler 4CD0  
   __size_of_EUSART_DefaultOverrunErrorHandler 0006            ??_EUSART_DefaultOverrunErrorHandler 0001  
           ?_EUSART_DefaultOverrunErrorHandler 0001              _EUSART_DefaultOverrunErrorHandler 4CCA  
                 INA219_getCurrent_mA@valueDec 0075                __end_of_I2C_MasterEnableRestart 4CF6  
                      ?_INA219_getBusVoltage_V 0071                                 fp__I2C_DO_IDLE 0000  
                               fp__I2C_DO_RCEN 0000                                      _vfpfcnvrt 2204  
                        __end_of_I2C_SetBuffer 4AB0                     INA219_getPower_mW@valueDec 0075  
                          _INA219_ReadRegister 4AD2                              ___wmul@multiplier 0005  
                       ?_I2C_DO_SEND_ADR_WRITE 0001                       I2C_MasterSendTxData@data 0005  
                     wr2RegCompleteHandler@ptr 000E                                   _isspace$2277 000B  
              INA219_WriteRegister@writeBuffer 001E                                     vfpfcnvrt@c 00D6  
                                   vfpfcnvrt@f 00CF                                    _INTCON2bits 000FF1  
                   ??_I2C_DO_SEND_RESTART_READ 0005                          ?_INTERRUPT_Initialize 0001  
                     ?_rdBlkRegCompleteHandler 000E                                     _I2C_Poller 4AF0  
                       ??_INA219_WriteRegister 001D                                     _I2C_Status 0100  
                                 ?_I2C_DO_IDLE 0001                           ?_INA219_ReadRegister 001E  
                                 ?_I2C_DO_RCEN 0001                         ?_rd2RegCompleteHandler 000E  
                        fp__EUSART_Receive_ISR 0000                            I2C_WriteNBytes@data 0016  
                             ??_I2C_MasterOpen 0005                         ?_wr2RegCompleteHandler 000E  
                             ??_I2C_MasterStop 0005                       ??_I2C_MasterWaitForEvent 0005  
                             ??_I2C_Initialize 0005                                    _bus_voltage 0152  
                    fp__I2C_DO_RX_NACK_RESTART 0000                                       __Hrparam 0000  
                                   vfprintf@ap 00DB                                       __Lrparam 0000  
                                   vfprintf@fp 00D7                 __end_of_INA219_getBusVoltage_V 42CE  
             __end_of_INA219_getBusVoltage_raw 4B6E                           __end_of_I2C_DO_RESET 4C18  
                      ??_OSCILLATOR_Initialize 0005                            _EUSART_ErrorHandler 01AD  
                             __size_of___fladd 04C0                               __size_of___fldiv 039A  
                             __size_of___awdiv 00C4                           _I2C_DO_SEND_ADR_READ 4BFC  
                             __size_of___flneg 0038                               __size_of___awmod 00B0  
                             __size_of___flmul 042C                               __size_of___flsub 0048  
                             __size_of___fltol 0106                 __size_of_I2C_Read2ByteRegister 0086  
                  ?_EUSART_DefaultErrorHandler 0001                                     ?_vfpfcnvrt 00C1  
                __end_of_I2C_Read2ByteRegister 406A                             ___fpclassifyf@F465 014A  
                              _I2C_MasterClose 4CFE                  I2C_SetAddressNackCallback@ptr 000C  
           __size_of_INA219_getShuntVoltage_mV 0054                                I2C_Open@address 0005  
                                     ___xxtofl 308E                            fp__I2C_DO_SEND_STOP 0000  
                   ?_INA219_getShuntVoltage_mV 0071                                _I2C_MasterStart 4CF6  
                              _I2C_MasterWrite 4C76                               __size_of_isdigit 0038  
                         _EUSART_RxDataHandler 49EE                              ??_I2C_WriteNBytes 001A  
                             __size_of_isspace 0052                                       __ptext10 48AC  
                                     __ptext11 46C2                                       __ptext20 4804  
                                     __ptext12 3EC0                                       __ptext21 362E  
                                     __ptext13 4C30                                       __ptext30 48E2  
                                     __ptext22 3CC8                                       __ptext14 457C  
                                     __ptext31 4C3A                                       __ptext23 3C18  
                                     __ptext15 2E78                                       __ptext40 4874  
                                     __ptext32 4CD6                                       __ptext24 39D4  
                                     __ptext16 3734                                       __ptext41 45D4  
                                     __ptext33 4BB4                                       __ptext25 3242  
                                     __ptext17 3528                                       __ptext50 425A  
                                     __ptext42 4B0E                                       __ptext34 41E4  
                                     __ptext26 4628                                       __ptext18 467A  
                                     __ptext51 308E                                       __ptext43 406A  
                                     __ptext35 4C44                                       __ptext27 483C  
                                     __ptext19 1D44                                       __ptext60 4706  
                                     __ptext52 26B2                                       __ptext44 4B26  
                                     __ptext36 4C4E                                       __ptext28 4A40  
                                     __ptext61 4AF0                                       __ptext53 4B56  
                                     __ptext45 4A66                                       __ptext37 4C58  
                                     __ptext29 4B9E                                       __ptext70 4C9E  
                                     __ptext62 4BDC                                       __ptext54 4AD2  
                                     __ptext46 4522                                       __ptext38 4C62  
                                     __ptext71 4CA6                                       __ptext63 42CE  
                                     __ptext55 3FE4                                       __ptext47 3D72  
                                     __ptext39 4C6C                                       __ptext80 4CDA  
                                     __ptext72 4CAE                                       __ptext64 433E  
                                     __ptext56 4B6E                                       __ptext48 2ADE  
                                     __ptext81 4BC8                                       __ptext73 4C18  
                                     __ptext65 4C0C                                       __ptext57 3F56  
                                     __ptext49 4B3E                                       __ptext90 4912  
                                     __ptext82 4CB6                                       __ptext74 3E1A  
                                     __ptext66 4C7E                                       __ptext58 4AB0  
                                     __ptext91 493E                                       __ptext83 4CBE  
                                     __ptext75 3A98                                       __ptext67 4C86  
                                     __ptext59 4C76                                       __ptext92 496A  
                                     __ptext84 4CDE                                       __ptext76 4BEC  
                                     __ptext68 4C8E                                       __ptext93 4996  
                                     __ptext85 4CC4                                       __ptext77 4BFC  
                                     __ptext69 4C96                                       __ptext94 4B86  
                                     __ptext86 4CE2                                       __ptext78 4C24  
                                     __ptext95 416A                                       __ptext87 4CE6  
                                     __ptext79 40EE                                       __ptext96 4A8C  
                                     __ptext88 4CEA                                       __ptext97 4CEE  
                                     __ptext89 478C                                       __ptext98 4CF2  
                                     __ptext99 4CF6                               __size_of_isupper 0038  
          __end_of_I2C_SetDataCompleteCallback 4B9E                    _I2C_SetDataCompleteCallback 4B86  
                      ?_I2C_DO_RX_NACK_RESTART 0001                               __size_of_tolower 0060  
                                   strcpy@dest 0005                               __size_of_strncmp 00DC  
                        ??_INA219_ReadRegister 0020                       __end_of_I2C_DO_SEND_STOP 4C9E  
                                __size_of_atoi 019A                                  __size_of_main 014C  
                      ?_EUSART_SetErrorHandler 0005                                _I2C_SetCallback 416A  
                ??_I2C_SetDataCompleteCallback 000E                                       efgtoa@fp 007D  
                                     efgtoa@ne 0099                                       efgtoa@pp 0097  
                                     efgtoa@ou 009D  EUSART_SetOverrunErrorHandler@interruptHandler 0005  
                                     isa$xinst 000000                                       int$flags 005B  
                                     _power_mW 014E                                       _shunt_mV 0156  
                        ?_I2C_DO_SEND_ADR_READ 0001                                       _vfprintf 43A4  
           __end_of_INTERRUPT_InterruptManager 00B0                     _INTERRUPT_InterruptManager 0008  
                                    printf@fmt 01B7          __end_of_EUSART_SetFramingErrorHandler 4C6C  
       __size_of_EUSART_SetFramingErrorHandler 000A                  _EUSART_SetFramingErrorHandler 4C62  
                     __end_of_I2C_MasterIsNack 4BDC                       __end_of_I2C_MasterSetIrq 4CDE  
                INA219_getBusVoltage_raw@value 0023                                 _vfpfcnvrt$2212 00CD  
                               _vfpfcnvrt$2208 00CB                                     _INTCONbits 000FF2  
                           I2C_WriteNBytes@len 0018                          ?_EUSART_RxDataHandler 0001  
            __end_of_INA219_getShuntVoltage_mV 4628                                       isdigit@c 0005  
                       ??_INTERRUPT_Initialize 0005                 __end_of_I2C_DO_RX_NACK_RESTART 4C86  
                                     intlevel2 0000                                    ?_I2C_Poller 0001  
                       fp__EUSART_Transmit_ISR 0000               __size_of_I2C_MasterEnableRestart 0004  
                                     isspace@c 0005                        ?_PIN_MANAGER_Initialize 0001  
               __end_of_EUSART_SetErrorHandler 4C76                            _I2C_DO_SEND_RESTART 4C9E  
                                    strcpy@src 0007                  __size_of_I2C_MasterDisableIrq 0004  
                                     isupper@c 0005                         fp__I2C_DO_ADDRESS_NACK 0000  
                                    strncmp@_l 0005                                      strncmp@_r 0007  
         __end_of_EUSART_SetRxInterruptHandler 4C58          __size_of_EUSART_SetRxInterruptHandler 000A  
                 _EUSART_SetRxInterruptHandler 4C4E                __size_of_I2C_MasterWaitForEvent 0010  
                                  efgtoa@nmode 00A9                                       printf@ap 00DF  
                           _EUSART_Receive_ISR 3B5C  EUSART_SetFramingErrorHandler@interruptHandler 0005  
                      __end_of_I2C_MasterClose 4D02                       __size_of_I2C_DO_TX_EMPTY 007C  
                           fp__I2C_DO_TX_EMPTY 0000                              _INA219_Initialize 4D0A  
                                  ??_vfpfcnvrt 00C7                        __end_of_I2C_MasterStart 4CFA  
                      __end_of_I2C_MasterWrite 4C7E                       _INA219_getBusVoltage_raw 4B56  
                           ?_INA219_Initialize 0001                           ?_I2C_DO_SEND_RESTART 0001  
                                     tolower@c 000B                            ?_EUSART_Receive_ISR 0001  
                       __size_of___fpclassifyf 00FE                  fp__EUSART_DefaultErrorHandler 0000  
                 __size_of_I2C_MasterGetRxData 0004                 __size_of_INA219_getCurrent_raw 0018  
                                     strncmp@l 000C                                       strncmp@n 0009  
                                     strncmp@r 000E                  __end_of_INA219_getCurrent_raw 4B56  
                                  _SSPCON1bits 000FC6                                    _SSPCON2bits 000FC5  
                          ??_INA219_Initialize 0005                                  ___fladd@signs 0011  
                  __size_of_I2C_MasterClearIrq 0004                             EUSART_Write@txData 0005  
                 __size_of_EUSART_Transmit_ISR 0042                        __end_of_I2C_SetCallback 41E4  
               __end_of_PIN_MANAGER_Initialize 4912                   __end_of_INA219_getCurrent_mA 3E1A  
               __size_of_rd1RegCompleteHandler 002C                  __end_of_rd1RegCompleteHandler 4996  
                       __size_of_I2C_DO_RX_ACK 0008                               fp__I2C_DO_RX_ACK 0000  
                                 ___fladd@aexp 0012                                   ___fladd@bexp 0013  
               __size_of_wr1RegCompleteHandler 002C                           ??_EUSART_Receive_ISR 0001  
                        __size_of_I2C_DO_RESET 000C                  __end_of_wr1RegCompleteHandler 493E  
                 __size_of_I2C_DO_ADDRESS_NACK 0066                           __size_of_I2C_DO_IDLE 000C  
                         __size_of_I2C_DO_RCEN 000C                             __size_of_I2C_DO_RX 00A6  
                           __size_of_I2C_DO_TX 00C4  
